{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///js/modal.min.js","webpack:///webpack/bootstrap fd6c322424041403a378?5968*","webpack:///./src/main/util/Util.js?be3e*","webpack:///./src/main/util/Settings.js?ce93*","webpack:///./src/main/Widget.js?6e17","webpack:///./src/main/util/Event.js?1d35*","webpack:///./src/main/Modal.js?627b","webpack:///./src/main/modules/Modal.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","value","PFX","COL_LEFT_CLASS","COL_RIGHT_CLASS","COL_BOTTOM_CLASS","Util","element","type","callback","thisFunction","e","apply","toLowerCase","name","addEventListener","t","undefined","el","document","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","style","parent","now","parentNode","func","s4","Math","floor","random","toString","substring","doc","inner","width","height","outer","position","top","left","visibility","overflow","appendChild","body","w1","offsetWidth","w2","clientWidth","removeChild","ev","capture","event","removeEventListener","offsetHeight","str","replace","g","toUpperCase","input","JSON","parse","stringify","base","attrs","attributes","attr","s","dashToCamelCase","nodeName","val","nodeValue","hasOwnProperty","parseInt","elementToPosition","collisionContainer","centerHorizontal","positionTop","amountTop","amountLeft","parentsUntil","HTMLElement","window","getComputedStyle","isPartOfNode","offsetTop","offsetLeft","targetPosition","getBoundingClientRect","elementRect","colRect","targetTop","targetRight","right","isCollisionTop","isCollisionBottom","innerHeight","isCollisionLeft","targetLeft","isCollisionRight","classList","remove","calcTop","calcLeft","add","rightPosition","leftCentered","collisionCentered","cssText","optionalOffset","scrollIntoView","scrolledY","scrollY","pageYOffset","scroll","_interopRequireDefault","obj","__esModule","default","_Util","_Util2","FLEXCSS_GLOBAL_SETTINGS","smallBreakpoint","scrollbarUpdateNodes","darkenerFadeDelay","canvasToggledClass","FLEXCSS_CONST_IS_IOS","FLEXCSS_CONST_IS_TOUCH","FLEXCSS_CONST_IS_IE","FLEXCSS_CONST_TAB_EVENT","init","FLEXCSS_CONST_SCROLLBAR_WIDTH","getScrollBarWidth","FLEXCSS_CONST_TRANSITION_EVENT","whichTransitionEndEvent","readyState","Settings","settings","assign","navigator","userAgent","match","msMaxTouchPoints","_typeof","Symbol","constructor","Widget","_this","asyncContent","_isWidget","getElementById","hfWidgetInstance","setAsync","Promise","bind","finalContent","async","self","CustomEvent","params","evt","bubbles","cancelable","detail","createEvent","initCustomEvent","Event","EventHandler","defaultOptions","options","withDetail","originalEvent","o","dispatchEvent","withOptions","fire","EVENT_MODAL_ASYNC_TARGET_LOADED","EVENT_MODAL_INIT","EVENT_MODAL_OPENED","EVENT_MODAL_BEFORE_CLOSED","EVENT_MODAL_CLOSED","_Settings","_Settings2","_Event","_Event2","_Widget","_Widget2","HTML_ELEMENT","documentElement","KEY_ESC","ATTR_CREATE_NEW","ATTR_CLOSE","ATTR_NAME","CLS_CONTAINER_CURRENT","CLS_OPEN","CLS_CURRENT","CLS_PART_OF_STACK","CLS_MODAL_OPEN","CLS_MODAL_CONTAINER","CLS_ANIM_END","CLS_LOADER_CONTAINER","CLS_LOADER","Modal","DelegateContainer","container","currentOpen","loading","classNames","closeOnEscape","closeOnBackgroundClick","destroyOnFinish","fixedContainer","containerClassNames","eventContainer","eventFunction","dataMainPageContainer","currentScrollTop","modalContainer","n","_modalInstances","indexOf","splice","setTimeout","scrollTop","get","forEach","node","paddingRight","applyOptionsFromElement","copy","KeyboardEvent","getTabEvent","hasAttribute","preventDefault","dispatchAndFire","defaultPrevented","_finishState","prevModal","switchModals","dispatch","withOriginal","_removeModalFromStack","lastContainer","childNodes","cl","destroy","co","last","push","prefixedAnimateEvent","_finishAnim","instances","isCurrent","contains","map","padding","getScrollbarWidth","d","foundInstance","flexModalInstance","targetContent","future","widget","hasTarget","isHtmlElement","isWidget","getAttribute","findWidget","newInstance","setDestroyOnFinish","fromEvent","then","registerEvents","getModalContainer","stopImmediatePropagation","modalContainerClasses","className","closeModalFunction","ce","close","loader","toggleLoader","show","loaderLoader","handleScrollbar","getAsync","r","result","DocumentFragment","innerHTML","guid","resolve","thisEl","open","modal","internal","maybeEvent","delegate","delegateContainer","createWidget","arguments","v","isEmptyContainer","MutationObserver","observer","mutations","disconnect","observe","childList","keyCode","lastModal","_Modal","_Modal2"],"mappings":"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","file":"js/modal.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlexCss\"] = factory();\n\telse\n\t\troot[\"FlexCss\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlexCss\"] = factory();\n\telse\n\t\troot[\"FlexCss\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"../\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(18);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PFX = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\t\n\tvar COL_LEFT_CLASS = 'is-collision-left';\n\t\n\tvar COL_RIGHT_CLASS = 'is-collision-right';\n\t\n\tvar COL_BOTTOM_CLASS = 'is-collision-bottom';\n\t\n\t/**\n\t * Provides shared DOM-Utility functions\n\t */\n\t\n\tvar Util = (function () {\n\t    function Util() {\n\t        _classCallCheck(this, Util);\n\t    }\n\t\n\t    _createClass(Util, null, [{\n\t        key: \"prefixedAnimateEvent\",\n\t\n\t        /**\n\t         * Will register the right animation event based on browser\n\t         * @param element\n\t         * @param type\n\t         * @param callback\n\t         */\n\t        value: function prefixedAnimateEvent(element, type, callback) {\n\t            var thisFunction = function thisFunction(e) {\n\t                callback.apply(element, [e, thisFunction]);\n\t            };\n\t\n\t            for (var p = 0; p < PFX.length; p++) {\n\t                if (!PFX[p]) {\n\t                    type = type.toLowerCase();\n\t                }\n\t                var name = PFX[p] + type;\n\t                element.addEventListener(name, thisFunction, true);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Get correct transitionend event\n\t         * @returns {String}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: \"whichTransitionEndEvent\",\n\t        value: function whichTransitionEndEvent() {\n\t            var t = undefined;\n\t            var el = document.createElement('fake');\n\t\n\t            var transitions = {\n\t                'transition': 'transitionend',\n\t                'OTransition': 'oTransitionEnd',\n\t                'MozTransition': 'transitionend',\n\t                'WebkitTransition': 'webkitTransitionEnd'\n\t            };\n\t\n\t            for (t in transitions) {\n\t                if (el.style[t] !== undefined) {\n\t                    return transitions[t];\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Check if target is part of parent node\n\t         * @param target\n\t         * @param parent\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: \"isPartOfNode\",\n\t        value: function isPartOfNode(target, parent) {\n\t            if (!target || !parent) {\n\t                return false;\n\t            }\n\t            var now = target;\n\t            while (now !== parent && now !== null) {\n\t                if (now === parent) {\n\t                    break;\n\t                }\n\t                now = now.parentNode;\n\t            }\n\t            return now !== null;\n\t        }\n\t\n\t        /**\n\t         * Walks the tree until func returns true for given argument\n\t         * @param target\n\t         * @param func\n\t         * @returns {boolean|HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: \"parentsUntil\",\n\t        value: function parentsUntil(target, func) {\n\t            if (!target) {\n\t                return false;\n\t            }\n\t            var now = target;\n\t            while (!func(now) && now !== null) {\n\t                now = now.parentNode;\n\t            }\n\t\n\t            return now;\n\t        }\n\t\n\t        /**\n\t         * Generates a unique id\n\t         * @return {String}\n\t         */\n\t\n\t    }, {\n\t        key: \"guid\",\n\t        value: function guid() {\n\t            function s4() {\n\t                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t            }\n\t\n\t            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\t        }\n\t\n\t        /**\n\t         * Detects scrollbar width\n\t         * @see http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: \"getScrollBarWidth\",\n\t        value: function getScrollBarWidth() {\n\t\n\t            var doc = global.document,\n\t                inner = doc.createElement('p');\n\t            inner.style.width = \"100%\";\n\t            inner.style.height = \"200px\";\n\t\n\t            var outer = doc.createElement('div');\n\t            outer.style.position = \"absolute\";\n\t            outer.style.top = \"0px\";\n\t            outer.style.left = \"0px\";\n\t            outer.style.visibility = \"hidden\";\n\t            outer.style.width = \"200px\";\n\t            outer.style.height = \"150px\";\n\t            outer.style.overflow = \"hidden\";\n\t            outer.appendChild(inner);\n\t\n\t            doc.body.appendChild(outer);\n\t            var w1 = inner.offsetWidth;\n\t            outer.style.overflow = 'scroll';\n\t            var w2 = inner.offsetWidth;\n\t            if (w1 === w2) {\n\t                w2 = outer.clientWidth;\n\t            }\n\t            doc.body.removeChild(outer);\n\t\n\t            return w1 - w2;\n\t        }\n\t\n\t        /**\n\t         * Run an event once\n\t         * @param {String} ev\n\t         * @param {HTMLElement|HTMLDocument} target\n\t         * @param {Function} func\n\t         * @param {boolean} [capture]\n\t         * @return Function created listener\n\t         */\n\t\n\t    }, {\n\t        key: \"addEventOnce\",\n\t        value: function addEventOnce(ev, target, func, capture) {\n\t            var thisFunction = function thisFunction(event) {\n\t                func(event, func);\n\t                target.removeEventListener(ev, thisFunction, capture);\n\t            };\n\t            target.addEventListener(ev, thisFunction, capture);\n\t            return thisFunction;\n\t        }\n\t\n\t        /**\n\t         * Checks if an element is visible\n\t         * @param {HTMLElement} element\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: \"isVisible\",\n\t        value: function isVisible(element) {\n\t            return element.offsetWidth > 0 && element.offsetHeight > 0;\n\t        }\n\t\n\t        /**\n\t         * Creates a camelCaseRepresentation of a dashed string\n\t         * @param {String} str\n\t         * @returns String\n\t         */\n\t\n\t    }, {\n\t        key: \"dashToCamelCase\",\n\t        value: function dashToCamelCase(str) {\n\t            return str.replace(/-([a-z])/g, function (g) {\n\t                return g[1].toUpperCase();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates a copy of `input`\n\t         * @param {*} input\n\t         * @return *\n\t         */\n\t\n\t    }, {\n\t        key: \"copy\",\n\t        value: function copy(input) {\n\t            return JSON.parse(JSON.stringify(input));\n\t        }\n\t\n\t        /**\n\t         * Reads options from element (data attributes) and applies to base\n\t         * @param {HTMLElement} element\n\t         * @param {Object} base\n\t         * @return {Object}\n\t         */\n\t\n\t    }, {\n\t        key: \"applyOptionsFromElement\",\n\t        value: function applyOptionsFromElement(element, base) {\n\t            if (!element) {\n\t                return base;\n\t            }\n\t            var attrs = element.attributes;\n\t            for (var i = 0; i < attrs.length; i++) {\n\t                var attr = attrs[i];\n\t                if (attr) {\n\t                    var s = Util.dashToCamelCase(attr.nodeName.replace('data-', '')),\n\t                        val = attr.nodeValue;\n\t                    if (base.hasOwnProperty(s)) {\n\t                        // skip functions\n\t                        if (typeof base[s] === 'function') {\n\t                            continue;\n\t                        }\n\t                        if (typeof base[s] === 'boolean') {\n\t                            base[s] = parseInt(val || 1) === 1;\n\t                        } else {\n\t                            base[s] = val;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return base;\n\t        }\n\t\n\t        /**\n\t         * Will position an element directly at given target\n\t         * Is aware of a given collision container to detect edges\n\t         * Will put elementToPosition either to left, center or right edge (prefer right)\n\t         *  and either to bottom or top (prefers bottom)\n\t         *\n\t         * You may overwrite preferred positioned with `centerHorizontal` and `positionTop`\n\t         *\n\t         * @param {HTMLElement|ClientRect} target the target container to align to\n\t         * @param {HTMLElement} elementToPosition the element to position\n\t         * @param {HTMLElement} collisionContainer the outer container to prevent collisions\n\t         * @param {bool} [centerHorizontal] set true to center element, otherwise it's put on the right border by default\n\t         * @param {bool} [positionTop] flip top, by default element is positioned to the bottom.\n\t         * @returns {HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: \"setupPositionNearby\",\n\t        value: function setupPositionNearby(target, elementToPosition, collisionContainer, centerHorizontal, positionTop) {\n\t\n\t            // determine relative offsets\n\t            var amountTop = 0,\n\t                amountLeft = 0;\n\t            Util.parentsUntil(target.parentNode, function (el) {\n\t                if (!(el instanceof HTMLElement)) {\n\t                    return false;\n\t                }\n\t                var style = window.getComputedStyle(el);\n\t                if (Util.isPartOfNode(elementToPosition, el)) {\n\t                    if (style && style.position === 'relative') {\n\t                        amountTop += el.offsetTop || 0;\n\t                        amountLeft += el.offsetLeft || 0;\n\t                    }\n\t                    return false;\n\t                } else {\n\t                    return true;\n\t                }\n\t            });\n\t\n\t            var targetPosition = target instanceof HTMLElement ? target.getBoundingClientRect() : target,\n\t                elementRect = elementToPosition.getBoundingClientRect(),\n\t                colRect = collisionContainer.getBoundingClientRect(),\n\t                targetTop = targetPosition.top - amountTop,\n\t                targetRight = targetPosition.right,\n\t                isCollisionTop = targetTop - elementRect.height <= 0,\n\t                isCollisionBottom = window.innerHeight < targetTop + amountTop + targetPosition.height + elementRect.height,\n\t                isCollisionLeft = targetRight < elementRect.width,\n\t                targetLeft = targetPosition.left,\n\t                isCollisionRight = targetLeft + elementRect.width > colRect.width,\n\t                classList = elementToPosition.classList;\n\t\n\t            classList.remove(COL_RIGHT_CLASS);\n\t            classList.remove(COL_LEFT_CLASS);\n\t            classList.remove(COL_BOTTOM_CLASS);\n\t\n\t            var calcTop = undefined,\n\t                calcLeft = undefined;\n\t            if (isCollisionLeft && !isCollisionRight) {\n\t                // put element to left if collision with left\n\t                calcLeft = targetPosition.left - colRect.left - amountLeft + 'px';\n\t                classList.add(COL_LEFT_CLASS);\n\t            } else {\n\t                // maybe center if no collision with either side\n\t                var rightPosition = targetRight - elementRect.width - colRect.left - amountLeft + 'px',\n\t                    leftCentered = (targetLeft + targetPosition.width / 2 - elementRect.width / 2 || 0) - colRect.left,\n\t                    collisionCentered = leftCentered + elementRect.width > colRect.width;\n\t                if (centerHorizontal && !collisionCentered) {\n\t                    calcLeft = leftCentered + 'px';\n\t                } else {\n\t                    classList.add(COL_RIGHT_CLASS);\n\t                    calcLeft = rightPosition;\n\t                }\n\t            }\n\t\n\t            if (isCollisionBottom || positionTop && !isCollisionTop) {\n\t                // Put Element on top if collision\n\t                calcTop = targetTop - elementRect.height - colRect.top + 'px';\n\t                classList.add(COL_BOTTOM_CLASS);\n\t            } else {\n\t                calcTop = targetTop + targetPosition.height - colRect.top + 'px';\n\t            }\n\t\n\t            elementToPosition.style.cssText = \"top:\" + calcTop + \";left:\" + calcLeft + \";\";\n\t\n\t            return elementToPosition;\n\t        }\n\t\n\t        /**\n\t         * Brings a given element into viewport\n\t         * @param {HTMLElement} el\n\t         * @param {int|function}[optionalOffset]\n\t         */\n\t\n\t    }, {\n\t        key: \"scrollToElement\",\n\t        value: function scrollToElement(el, optionalOffset) {\n\t            el.scrollIntoView();\n\t            // optionally use a additional scrollDif\n\t            if (optionalOffset) {\n\t                if (typeof optionalOffset === 'function') {\n\t                    optionalOffset = optionalOffset();\n\t                }\n\t                if (optionalOffset > 0) {\n\t                    var scrolledY = window.scrollY || window.pageYOffset;\n\t                    if (scrolledY) {\n\t                        window.scroll(0, scrolledY - optionalOffset);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Util;\n\t})();\n\t\n\texports.default = Util;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// we attach global settings to global once because settings might be shared a lot of times trough the application\n\t// Maybe find a better way to handle that scenario\n\tif (!global.FLEXCSS_GLOBAL_SETTINGS) {\n\t    (function () {\n\t\n\t        global.FLEXCSS_GLOBAL_SETTINGS = {\n\t            // defined breakpoint for small devices < n\n\t            smallBreakpoint: 768,\n\t            // nodes that should be updated when no scrollbar is expected\n\t            scrollbarUpdateNodes: global.document.body !== null ? [global.document.body] : [],\n\t            // additional Delay until darkener is fully hidden\n\t            darkenerFadeDelay: 100,\n\t            // class that is added if canvas has been toggled\n\t            canvasToggledClass: 'toggled-canvas'\n\t        };\n\t\n\t        global.FLEXCSS_CONST_IS_IOS = null;\n\t\n\t        global.FLEXCSS_CONST_IS_TOUCH = null;\n\t\n\t        global.FLEXCSS_CONST_IS_IE = null;\n\t\n\t        global.FLEXCSS_CONST_TAB_EVENT = 'click';\n\t\n\t        var init = function init() {\n\t            // Measure scrollbar width\n\t            global.FLEXCSS_CONST_SCROLLBAR_WIDTH = _Util2.default.getScrollBarWidth();\n\t            // detect right transition end event\n\t            global.FLEXCSS_CONST_TRANSITION_EVENT = _Util2.default.whichTransitionEndEvent();\n\t        };\n\t\n\t        if (global.document.readyState !== 'loading') {\n\t            init();\n\t        } else {\n\t            // it's possible that global.document.body is not available if the document is not\n\t            // loaded completely\n\t            document.addEventListener('DOMContentLoaded', function () {\n\t                init();\n\t            });\n\t        }\n\t    })();\n\t}\n\t\n\t/**\n\t * Utility class that setups global settings\n\t */\n\t\n\tvar Settings = (function () {\n\t    function Settings() {\n\t        _classCallCheck(this, Settings);\n\t    }\n\t\n\t    _createClass(Settings, null, [{\n\t        key: 'setup',\n\t\n\t        /**\n\t         * Setup global settings, overwrite default values\n\t         * @param {Object} settings\n\t         */\n\t        value: function setup(settings) {\n\t            Object.assign(global.FLEXCSS_GLOBAL_SETTINGS, settings);\n\t        }\n\t\n\t        /**\n\t         * Access to global settings\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'get',\n\t        value: function get() {\n\t            return global.FLEXCSS_GLOBAL_SETTINGS;\n\t        }\n\t\n\t        /**\n\t         * Detects a IOS Device, caches subsequent calls\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isIosDevice',\n\t        value: function isIosDevice() {\n\t            if (!global.FLEXCSS_CONST_IS_IOS) {\n\t                global.FLEXCSS_CONST_IS_IOS = global.navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n\t            }\n\t\n\t            return global.FLEXCSS_CONST_IS_IOS;\n\t        }\n\t\n\t        /**\n\t         * Detects a touch device, caches subsequent calls\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isTouchDevice',\n\t        value: function isTouchDevice() {\n\t            if (!global.FLEXCSS_CONST_IS_TOUCH) {\n\t                global.FLEXCSS_CONST_IS_TOUCH = 'ontouchstart' in window || !!global.navigator.msMaxTouchPoints;\n\t            }\n\t            return global.FLEXCSS_CONST_IS_TOUCH;\n\t        }\n\t\n\t        /**\n\t         * Checks if current browser is Internet Explorer\n\t         * @returns {boolean|*}\n\t         */\n\t\n\t    }, {\n\t        key: 'isIE',\n\t        value: function isIE() {\n\t            if (!global.FLEXCSS_CONST_IS_IE) {\n\t                global.FLEXCSS_CONST_IS_IE = \"ActiveXObject\" in window;\n\t            }\n\t            return global.FLEXCSS_CONST_IS_IE;\n\t        }\n\t\n\t        /**\n\t         * @returns {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTransitionEvent',\n\t        value: function getTransitionEvent() {\n\t            return global.FLEXCSS_CONST_TRANSITION_EVENT;\n\t        }\n\t\n\t        /**\n\t         * @returns {int}\n\t         */\n\t\n\t    }, {\n\t        key: 'getScrollbarWidth',\n\t        value: function getScrollbarWidth() {\n\t            return global.FLEXCSS_CONST_SCROLLBAR_WIDTH;\n\t        }\n\t\n\t        /**\n\t         * @returns {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTabEvent',\n\t        value: function getTabEvent() {\n\t            return global.FLEXCSS_CONST_TAB_EVENT;\n\t        }\n\t    }]);\n\t\n\t    return Settings;\n\t})();\n\t\n\texports.default = Settings;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */,\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Widget\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict'\n\t\n\t/**\n\t * A Widget provides async content on a specific target (e.g. a modal link)\n\t */\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\t\n\tvar Widget = (function () {\n\t\n\t  /**\n\t   * Creates a new Widget\n\t   * @param [element], optional define the content of widget\n\t   */\n\t\n\t  function Widget(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Widget);\n\t\n\t    /**\n\t     *\n\t     * @type {Promise}\n\t     */\n\t    this.asyncContent = null;\n\t\n\t    /**\n\t     * @type {boolean}\n\t     */\n\t    this._isWidget = true;\n\t\n\t    if (element) {\n\t      /**\n\t       * @type {HTMLElement}\n\t       */\n\t      this.element = element instanceof HTMLElement ? element : global.document.getElementById(element);\n\t      if (this.element) {\n\t        this.element.hfWidgetInstance = this;\n\t        this.setAsync((function () {\n\t          return new Promise((function (s) {\n\t            s(_this.element);\n\t          }).bind(_this));\n\t        }).bind(this));\n\t      } else {\n\t        throw 'Could not found element with ID: ' + element;\n\t      }\n\t    }\n\t    /**\n\t     * The final resulted content that a widget did create (e.g. a modal container)\n\t     * @type {HTMLElement}\n\t     */\n\t    this.finalContent = null;\n\t  }\n\t\n\t  /**\n\t   *\n\t   * @returns {Promise}\n\t   */\n\t\n\t  _createClass(Widget, [{\n\t    key: 'getAsync',\n\t    value: function getAsync() {\n\t      return this.asyncContent();\n\t    }\n\t\n\t    /**\n\t     * @param {Function.<Promise>} async\n\t     * @returns {Widget}\n\t     */\n\t\n\t  }, {\n\t    key: 'setAsync',\n\t    value: function setAsync(async) {\n\t      this.asyncContent = async;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {HTMLElement}\n\t     */\n\t\n\t  }, {\n\t    key: 'getFinalContent',\n\t    value: function getFinalContent() {\n\t      return this.finalContent;\n\t    }\n\t\n\t    /**\n\t     * @param {HTMLElement} element\n\t     * @returns {Widget}\n\t     */\n\t\n\t  }, {\n\t    key: 'setElement',\n\t    value: function setElement(element) {\n\t      this.element = element;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Destroys the generated content of this widget\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t\n\t      if (this.finalContent && this.finalContent.parentNode) {\n\t        this.finalContent.parentNode.removeChild(this.finalContent);\n\t        return true;\n\t      }\n\t\n\t      delete this.element;\n\t      delete this.asyncContent;\n\t      delete this.finalContent;\n\t\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Will find a widget on an Element\n\t     * @param {HTMLElement} element\n\t     * @returns {Widget|undefined}\n\t     */\n\t\n\t  }], [{\n\t    key: 'findWidget',\n\t    value: function findWidget(element) {\n\t      return element ? element.hfWidgetInstance : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a given object is an instance\n\t     * @param {Object} self\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isWidget',\n\t    value: function isWidget(self) {\n\t      return self instanceof Widget || (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object' && self.hasOwnProperty('_isWidget');\n\t    }\n\t  }]);\n\t\n\t  return Widget;\n\t})();\n\t\n\texports.default = Widget;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t/*global CustomEvent*/\n\t\n\t'use strict'\n\t\n\t// polyfill for custom events to make thinks work in IE\n\t// The needed polyfill is so small that I embedded it here\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvoid (function () {\n\t    if (!global.CustomEvent || typeof global.CustomEvent !== 'function') {\n\t        var CustomEvent;\n\t        CustomEvent = function (event, params) {\n\t            var evt;\n\t            params = params || {\n\t                bubbles: false,\n\t                cancelable: false,\n\t                detail: undefined\n\t            };\n\t            evt = document.createEvent(\"CustomEvent\");\n\t            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t            return evt;\n\t        };\n\t        CustomEvent.prototype = global.Event.prototype;\n\t        global.CustomEvent = CustomEvent;\n\t    }\n\t})();\n\t/**\n\t * Simpler Event dispatching\n\t */\n\t\n\tvar EventHandler = (function () {\n\t\n\t    /**\n\t     * @param {HTMLElement} target\n\t     * @param {String} name\n\t     */\n\t\n\t    function EventHandler(target, name) {\n\t        _classCallCheck(this, EventHandler);\n\t\n\t        this.target = target;\n\t        this.defaultOptions = {\n\t            bubbles: true,\n\t            cancelable: true\n\t        };\n\t\n\t        this.name = name;\n\t    }\n\t\n\t    /**\n\t     * Set more options\n\t     * @param {Object} options\n\t     * @returns {EventHandler}\n\t     */\n\t\n\t    _createClass(EventHandler, [{\n\t        key: 'withOptions',\n\t        value: function withOptions(options) {\n\t            Object.assign(this.defaultOptions, options || {});\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Call with the originalEvent\n\t         * @param {Event} e\n\t         * @returns {EventHandler}\n\t         */\n\t\n\t    }, {\n\t        key: 'withOriginal',\n\t        value: function withOriginal(e) {\n\t            return this.withDetail({\n\t                originalEvent: e\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Extends the detail part of the event\n\t         * @param {Object} o\n\t         * @returns {EventHandler}\n\t         */\n\t\n\t    }, {\n\t        key: 'withDetail',\n\t        value: function withDetail(o) {\n\t            if (!this.defaultOptions.detail) {\n\t                this.defaultOptions.detail = {};\n\t            }\n\t            Object.assign(this.defaultOptions.detail, o);\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * @returns {Window.CustomEvent}\n\t         */\n\t\n\t    }, {\n\t        key: 'fire',\n\t        value: function fire() {\n\t            var e = new CustomEvent(this.name, this.defaultOptions);\n\t            if (this.target) {\n\t                this.target.dispatchEvent(e);\n\t            }\n\t            return e;\n\t        }\n\t    }]);\n\t\n\t    return EventHandler;\n\t})();\n\t\n\tvar Event = (function () {\n\t    function Event() {\n\t        _classCallCheck(this, Event);\n\t    }\n\t\n\t    _createClass(Event, null, [{\n\t        key: 'dispatch',\n\t\n\t        /**\n\t         * Prepares to dispatch a custom event (without firing)\n\t         * @param {HTMLElement} target\n\t         * @param {String} name\n\t         * @returns {EventHandler}\n\t         */\n\t        value: function dispatch(target, name) {\n\t            return new EventHandler(target, name);\n\t        }\n\t\n\t        /**\n\t         * Dispatches a custom event and fires it directly\n\t         * @param {HTMLElement} target\n\t         * @param {String} name\n\t         * @param {Object} [options]\n\t         * @returns {Window.CustomEvent}\n\t         */\n\t\n\t    }, {\n\t        key: 'dispatchAndFire',\n\t        value: function dispatchAndFire(target, name, options) {\n\t            return new EventHandler(target, name).withOptions(options).fire();\n\t        }\n\t    }]);\n\t\n\t    return Event;\n\t})();\n\t\n\texports.default = Event;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */,\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Modal\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict'\n\t\n\t/*global KeyboardEvent*/\n\t\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EVENT_MODAL_ASYNC_TARGET_LOADED = exports.EVENT_MODAL_INIT = exports.EVENT_MODAL_OPENED = exports.EVENT_MODAL_BEFORE_CLOSED = exports.EVENT_MODAL_CLOSED = undefined;\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Event = __webpack_require__(5);\n\t\n\tvar _Event2 = _interopRequireDefault(_Event);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HTML_ELEMENT = global.document.documentElement;\n\tvar KEY_ESC = 27;\n\t/* Attribute Names */\n\tvar ATTR_CREATE_NEW = 'data-new-instance';\n\tvar ATTR_CLOSE = 'data-close-modal';\n\tvar ATTR_NAME = 'data-modal';\n\t\n\t/* Class names */\n\tvar CLS_CONTAINER_CURRENT = 'front';\n\tvar CLS_OPEN = 'open';\n\tvar CLS_CURRENT = 'current';\n\tvar CLS_PART_OF_STACK = 'part-of-stack';\n\tvar CLS_MODAL_OPEN = 'modal-open';\n\tvar CLS_MODAL_CONTAINER = 'modal-container';\n\tvar CLS_ANIM_END = 'modal-anim-end';\n\tvar CLS_LOADER_CONTAINER = 'loader-container';\n\tvar CLS_LOADER = 'loader';\n\t\n\t/* Events */\n\t\n\t/**\n\t * Event triggered when modal is closed\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_CLOSED = exports.EVENT_MODAL_CLOSED = 'flexcss.modal.closed';\n\t/**\n\t * Event triggered before a modal is closed, cancelable\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_BEFORE_CLOSED = exports.EVENT_MODAL_BEFORE_CLOSED = 'flexcss.modal.beforeClose';\n\t/**\n\t * Event triggered when a modal is opened\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_OPENED = exports.EVENT_MODAL_OPENED = 'flexcss.modal.opened';\n\t\n\t/**\n\t * Event triggered when modal is initilized, called on target\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_INIT = exports.EVENT_MODAL_INIT = 'flexcss.modal.init';\n\t\n\t/**\n\t * Triggered when the content of an async modal on a target is loaded, called on target\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_ASYNC_TARGET_LOADED = exports.EVENT_MODAL_ASYNC_TARGET_LOADED = 'flexcss.modal.asyncTargetLoaded';\n\t\n\t/**\n\t * A Modal Implementation\n\t */\n\t\n\tvar Modal = (function () {\n\t    function Modal(DelegateContainer, options) {\n\t        _classCallCheck(this, Modal);\n\t\n\t        var doc = global.document,\n\t            container = DelegateContainer instanceof HTMLElement ? DelegateContainer : doc.getElementById(DelegateContainer);\n\t\n\t        // Instance vars:\n\t        if (!container) {\n\t            throw 'Could not found container element by given ID/Element: ' + DelegateContainer;\n\t        }\n\t\n\t        this.currentOpen = null;\n\t\n\t        this.loading = false;\n\t\n\t        this.container = container;\n\t\n\t        /**\n\t         * Default Options\n\t         */\n\t        this.options = {\n\t            classNames: 'modal',\n\t            closeOnEscape: true,\n\t            closeOnBackgroundClick: true,\n\t            destroyOnFinish: false,\n\t            fixedContainer: true,\n\t            containerClassNames: ''\n\t        };\n\t\n\t        Object.assign(this.options, options);\n\t\n\t        // Container where events are delegated\n\t        this.eventContainer = null;\n\t        this.eventFunction = null;\n\t\n\t        this.dataMainPageContainer = global.document.body;\n\t\n\t        this.currentScrollTop = 0;\n\t\n\t        this.modalContainer = null;\n\t\n\t        // Destroy full modal instance when no dialogs are bind to?\n\t        // Otherwise container is recycled\n\t        this.destroyOnFinish = this.options.destroyOnFinish;\n\t    }\n\t\n\t    /**\n\t     * Removes this modal from global stack\n\t     * Will handle fixing main html element too\n\t     * @private\n\t     * @param n\n\t     */\n\t\n\t    _createClass(Modal, [{\n\t        key: '_removeModalFromStack',\n\t        value: function _removeModalFromStack(n) {\n\t            var t = Modal._modalInstances.indexOf(n),\n\t                self = this;\n\t            if (t > -1) {\n\t                Modal._modalInstances.splice(t, 1);\n\t                if (Modal._modalInstances.length === 0) {\n\t                    // restore scrollPosition:\n\t                    if (self.dataMainPageContainer) {\n\t                        setTimeout(function () {\n\t                            if (self.options.fixedContainer) {\n\t                                self.dataMainPageContainer.style.position = \"static\";\n\t                                self.dataMainPageContainer.style.top = \"0px\";\n\t                                // reset scrollTop\n\t                                document.documentElement.scrollTop = self.currentScrollTop;\n\t                                document.body.scrollTop = self.currentScrollTop;\n\t                            }\n\t                            _Settings2.default.get().scrollbarUpdateNodes.forEach(function (node) {\n\t                                node.style.paddingRight = '';\n\t                            });\n\t                            HTML_ELEMENT.classList.remove(CLS_MODAL_OPEN);\n\t                        }, 0);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Modal container that contains all `stacked` modals for this instance\n\t         * @returns {HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: 'getModalContainer',\n\t        value: function getModalContainer() {\n\t            return this.modalContainer;\n\t        }\n\t\n\t        /**\n\t         * Closes the current open modal of this stack\n\t         * @params [e], optional event\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'close',\n\t        value: function close(e) {\n\t            var self = this;\n\t\n\t            var options = self.currentOpen ? _Util2.default.applyOptionsFromElement(self.currentOpen, _Util2.default.copy(self.options)) : self.options;\n\t\n\t            // close only on keyboard if instance should\n\t            if (!options.closeOnEscape && e instanceof KeyboardEvent) {\n\t                return false;\n\t            }\n\t\n\t            // close only on background if instance should\n\t            if (!options.closeOnBackgroundClick && e && e.type === _Settings2.default.getTabEvent() && !e.target.hasAttribute(ATTR_CLOSE)) {\n\t                return false;\n\t            }\n\t\n\t            // if an instance is currently loading, prevent from closing\n\t            if (self.loading) {\n\t                return false;\n\t            }\n\t\n\t            if (e) {\n\t                e.preventDefault();\n\t            }\n\t\n\t            if (self.currentOpen) {\n\t                // dispatch beforeClose event, if prevented prevent modal from closing\n\t                var ev = _Event2.default.dispatchAndFire(self.currentOpen, EVENT_MODAL_BEFORE_CLOSED);\n\t                if (ev.defaultPrevented) {\n\t                    return false;\n\t                }\n\t\n\t                this._finishState(self.currentOpen);\n\t                // if there is an previous modal\n\t                if (self.currentOpen.prevModal) {\n\t                    // switch to the next modal\n\t                    return self.switchModals(self.currentOpen.prevModal, self.currentOpen.prevModal.prevModal || null);\n\t                }\n\t\n\t                // finally trigger closed event\n\t                _Event2.default.dispatch(self.currentOpen, EVENT_MODAL_CLOSED).withOriginal(e).fire();\n\t            }\n\t            self._removeModalFromStack(self.currentOpen);\n\t\n\t            // Full stack closed:\n\t            self.currentOpen = null;\n\t            if (self.modalContainer) {\n\t                // setup next open\n\t                var lastContainer = Modal._modalInstances[Modal._modalInstances.length - 1],\n\t                    classList = self.modalContainer.classList;\n\t                classList.remove(CLS_CONTAINER_CURRENT);\n\t                classList.remove(CLS_OPEN);\n\t                // Remove all current classes from child-nodes\n\t                for (var i = 0; i < self.modalContainer.childNodes.length; i++) {\n\t                    var node = self.modalContainer.childNodes[i],\n\t                        cl = node.classList;\n\t                    // remove applied styles\n\t                    self._finishState(node);\n\t                    cl.remove(CLS_CURRENT);\n\t                    cl.remove(CLS_PART_OF_STACK);\n\t                }\n\t                if (lastContainer) {\n\t                    lastContainer.parentNode.classList.add(CLS_CONTAINER_CURRENT);\n\t                }\n\t            }\n\t\n\t            if (self.destroyOnFinish) {\n\t                self.destroy();\n\t            }\n\t            return self;\n\t        }\n\t\n\t        /**\n\t         * Resets a target when newly initilizes\n\t         * @param target\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_finishState',\n\t        value: function _finishState(target) {\n\t            target.classList.remove(CLS_ANIM_END);\n\t        }\n\t\n\t        /**\n\t         * Handler called when a Modal has finished an animation\n\t         * @param e\n\t         * @param self\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_finishAnim',\n\t        value: function _finishAnim(e, self) {\n\t            e.target.classList.add(CLS_ANIM_END);\n\t            e.target.removeEventListener(e.type, self, true);\n\t        }\n\t\n\t        /**\n\t         * Brings the given modal to front\n\t         * @param co\n\t         * @param last\n\t         */\n\t\n\t    }, {\n\t        key: 'switchModals',\n\t        value: function switchModals(co, last) {\n\t            co.prevModal = last;\n\t            Modal._modalInstances.push(co);\n\t\n\t            if (last) {\n\t                this._finishState(last);\n\t                _Util2.default.prefixedAnimateEvent(last, 'AnimationEnd', this._finishAnim);\n\t                last.classList.add(CLS_PART_OF_STACK);\n\t            }\n\t            // set new currentOpen\n\t            this.currentOpen = co;\n\t\n\t            // bring current container to the front\n\t            var instances = Modal._modalInstances;\n\t\n\t            for (var m = 0; m < instances.length; m++) {\n\t                instances[m].parentNode.classList.remove(CLS_CONTAINER_CURRENT);\n\t            }\n\t            this.modalContainer.classList.add(CLS_CONTAINER_CURRENT);\n\t            // remove animations if animations has been completed, fixes various bugs:\n\t            // - fixes nested scrolling element issue in iOS Browsers / Mobile-Safari\n\t            _Util2.default.prefixedAnimateEvent(co, 'AnimationEnd', this._finishAnim);\n\t\n\t            for (var i = 0; i < this.modalContainer.childNodes.length; i++) {\n\t                var n = this.modalContainer.childNodes[i],\n\t                    isCurrent = n.classList.contains(CLS_CURRENT);\n\t                if (n === co) {\n\t                    co.classList.add(CLS_CURRENT);\n\t                    co.classList.remove(CLS_PART_OF_STACK);\n\t                    this._finishState(co);\n\t                } else {\n\t                    n.classList.remove(CLS_CURRENT);\n\t                    if (isCurrent) {\n\t                        this._removeModalFromStack(n);\n\t                        _Event2.default.dispatchAndFire(n, EVENT_MODAL_CLOSED);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'handleScrollbar',\n\t        value: function handleScrollbar() {\n\t            var self = this;\n\t            if (Modal._modalInstances.length === 0) {\n\t                // save current scrollTop:\n\t                var scrollTop = undefined,\n\t                    c = undefined;\n\t                if (self.options.fixedContainer) {\n\t                    scrollTop = global.pageYOffset;\n\t                    c = self.dataMainPageContainer;\n\t                    self.currentScrollTop = scrollTop;\n\t                }\n\t                // this causes reflow/paint and should be optimized\n\t                // At lest we write in a batch later\n\t                _Settings2.default.get().scrollbarUpdateNodes.map(function (n) {\n\t                    return {\n\t                        n: n, padding: parseInt(global.getComputedStyle(n).paddingRight) + _Settings2.default.getScrollbarWidth() + 'px'\n\t                    };\n\t                }).forEach(function (d) {\n\t                    d.n.style.paddingRight = d.padding;\n\t                });\n\t                if (self.options.fixedContainer) {\n\t                    if (c) {\n\t                        c.style.cssText += 'top:' + (scrollTop * -1 + 'px') + ';position:fixed';\n\t                    }\n\t                }\n\t                HTML_ELEMENT.classList.add(CLS_MODAL_OPEN);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Creates a Modal and opens it (later)\n\t         * @param e\n\t         * @returns {Promise|boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'createWidget',\n\t        value: function createWidget(e) {\n\t            var self = this;\n\t            if (this.loading) {\n\t                return false;\n\t            }\n\t\n\t            // check if another modal has registered events on this dom path:\n\t            if (e && e.target) {\n\t                var foundInstance = _Util2.default.parentsUntil(e.target, function (node) {\n\t                    return node && node.flexModalInstance;\n\t                });\n\t\n\t                // if another instance has been found, abort\n\t                if (foundInstance !== this.container) {\n\t                    return false;\n\t                }\n\t            }\n\t            var targetContent,\n\t                future,\n\t                widget,\n\t                target,\n\t                hasTarget = true,\n\t                isHtmlElement = e instanceof HTMLElement,\n\t                isWidget = _Widget2.default.isWidget(e);\n\t            if (isHtmlElement || isWidget) {\n\t                if (isHtmlElement) {\n\t                    targetContent = e;\n\t                } else {\n\t                    widget = e;\n\t                    targetContent = widget.element;\n\t                }\n\t            } else {\n\t                target = e.target;\n\t                if (!target) {\n\t                    throw 'Could not find target, did you pass an event, a HTMLElement or an Widget?';\n\t                }\n\t                hasTarget = target.hasAttribute(ATTR_NAME);\n\t                targetContent = target.getAttribute(ATTR_NAME);\n\t                widget = _Widget2.default.findWidget(target);\n\t                if (target.hasAttribute(ATTR_CREATE_NEW) && !e.newInstance) {\n\t                    var newInstance = new Modal(this.container).setDestroyOnFinish(true);\n\t                    e.newInstance = true;\n\t                    newInstance.fromEvent(e).then(function () {\n\t                        newInstance.registerEvents(newInstance.getModalContainer());\n\t                    });\n\t                    return false;\n\t                }\n\t                if (hasTarget) {\n\t                    e.stopImmediatePropagation();\n\t                    e.preventDefault();\n\t                }\n\t            }\n\t\n\t            if (!hasTarget) {\n\t                return false;\n\t            }\n\t\n\t            var modalContainerClasses = this.modalContainer ? this.modalContainer.classList : [];\n\t\n\t            // lazy create modal container\n\t            if (!this.modalContainer) {\n\t                this.modalContainer = global.document.createElement('div');\n\t                this.modalContainer.className = CLS_MODAL_CONTAINER + ' ' + this.options.containerClassNames + ' ' + CLS_OPEN;\n\t                var closeModalFunction = function closeModalFunction(ce) {\n\t                    if (self.loading) {\n\t                        return false;\n\t                    }\n\t                    if (_Util2.default.isPartOfNode(ce.target, self.currentOpen)) {\n\t                        if (!ce.target.hasAttribute(ATTR_CLOSE)) {\n\t                            return false;\n\t                        }\n\t                    }\n\t                    self.close(ce);\n\t                };\n\t\n\t                this.modalContainer.addEventListener(_Settings2.default.getTabEvent(), closeModalFunction, false);\n\t\n\t                modalContainerClasses = this.modalContainer.classList;\n\t                this.container.appendChild(this.modalContainer);\n\t            } else {\n\t                modalContainerClasses.add(CLS_OPEN);\n\t            }\n\t\n\t            var loader = undefined,\n\t                doc = global.document,\n\t                toggleLoader = function toggleLoader(show) {\n\t                if (show) {\n\t                    loader = doc.createElement('div');\n\t                    loader.className = CLS_LOADER_CONTAINER;\n\t                    var loaderLoader = doc.createElement('div');\n\t                    loaderLoader.className = CLS_LOADER;\n\t                    loader.appendChild(loaderLoader);\n\t                    self.modalContainer.appendChild(loader);\n\t                } else {\n\t                    loader.parentNode.removeChild(loader);\n\t                }\n\t            };\n\t\n\t            this.handleScrollbar();\n\t\n\t            modalContainerClasses.add(CLS_CONTAINER_CURRENT);\n\t            modalContainerClasses.add('loading');\n\t            this.loading = true;\n\t            toggleLoader(true);\n\t            var async = widget ? widget.getAsync() : null;\n\t            if (_Widget2.default.isWidget(widget) && async) {\n\t                future = async.then(function (r) {\n\t                    var result;\n\t                    if (r instanceof HTMLElement || r instanceof DocumentFragment) {\n\t                        result = r;\n\t                    } else {\n\t                        // Create container Element:\n\t                        var element = doc.createElement('div');\n\t                        element.className = self.options.classNames;\n\t                        element.innerHTML = r;\n\t                        element.id = _Util2.default.guid();\n\t                        result = element;\n\t                    }\n\t                    widget.finalContent = result;\n\t                    _Event2.default.dispatchAndFire(target, EVENT_MODAL_ASYNC_TARGET_LOADED);\n\t                    return result;\n\t                });\n\t            } else {\n\t                var el = targetContent instanceof HTMLElement || targetContent instanceof DocumentFragment ? targetContent : doc.getElementById(targetContent);\n\t                if (el) {\n\t                    future = new Promise(function (resolve) {\n\t                        resolve(el);\n\t                    });\n\t                } else {\n\t                    throw 'Could not found given modal element (content) with ID: ' + targetContent;\n\t                }\n\t            }\n\t\n\t            _Event2.default.dispatchAndFire(target, EVENT_MODAL_INIT);\n\t\n\t            return future.then(function (thisEl) {\n\t                thisEl.hfWidgetInstance = self;\n\t                self.modalContainer.appendChild(thisEl);\n\t                modalContainerClasses.remove('loading');\n\t                self.loading = false;\n\t                toggleLoader(false);\n\t\n\t                self.open(thisEl, true, e);\n\t\n\t                return thisEl;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Open's an already rendered modal\n\t         * @param {HTMLElement} modal\n\t         * @param {Boolean} [internal], set to true to prevent container management\n\t         * @param {Boolean} [maybeEvent], optional event-object that triggered open\n\t         */\n\t\n\t    }, {\n\t        key: 'open',\n\t        value: function open(modal, internal, maybeEvent) {\n\t\n\t            if (!internal) {\n\t                this.modalContainer.classList.add('open');\n\t                this.handleScrollbar();\n\t            }\n\t            this.switchModals(modal, this.currentOpen);\n\t\n\t            _Event2.default.dispatch(modal, EVENT_MODAL_OPENED).withOriginal(maybeEvent).fire();\n\t        }\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents(delegate) {\n\t            var delegateContainer = delegate || this.container,\n\t                self = this;\n\t\n\t            // register modal instance so we can detect multiple registrars\n\t            delegateContainer.flexModalInstance = self;\n\t            self.eventFunction = function () {\n\t                self.createWidget.apply(self, arguments);\n\t            };\n\t            delegateContainer.addEventListener(_Settings2.default.getTabEvent(), self.eventFunction, false);\n\t\n\t            self.eventContainer = delegateContainer;\n\t            return self;\n\t        }\n\t\n\t        /**\n\t         * Creates a new Dialog Instance either directly from HTML Element or a Widget instance\n\t         * @param {HTMLElement|Widget} widget instance or html element\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'fromWidget',\n\t        value: function fromWidget(widget) {\n\t            return this.createWidget(widget);\n\t        }\n\t\n\t        /**\n\t         * Creates a Widget from event\n\t         * @param e\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'fromEvent',\n\t        value: function fromEvent(e) {\n\t            return this.createWidget(e);\n\t        }\n\t    }, {\n\t        key: 'setDestroyOnFinish',\n\t        value: function setDestroyOnFinish(v) {\n\t            this.destroyOnFinish = v;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Destroy this widget instance, cleans empty DOM nodes\n\t         * Will use fast MutationObserver if available, otherwise falls back to DOMNodeRemoved event\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            var self = this,\n\t                modalContainer = this.modalContainer;\n\t            var isEmptyContainer = modalContainer.childNodes.length === 0;\n\t            // Remove event listener on destroy, do not remove DOM node\n\t            if (self.eventContainer) {\n\t                self.eventContainer.removeEventListener(_Settings2.default.getTabEvent(), self.eventFunction, true);\n\t            }\n\t\n\t            if (isEmptyContainer) {\n\t                if (modalContainer.parentNode) {\n\t                    modalContainer.parentNode.removeChild(modalContainer);\n\t                }\n\t            }\n\t            if (global.MutationObserver) {\n\t                var observer = new MutationObserver(function (mutations) {\n\t                    mutations.forEach(function () {\n\t                        if (isEmptyContainer) {\n\t                            modalContainer.parentNode.removeChild(modalContainer);\n\t                            observer.disconnect();\n\t                        }\n\t                    });\n\t                });\n\t                observer.observe(modalContainer, { childList: true });\n\t            } else {\n\t                modalContainer.addEventListener('DOMNodeRemoved', function (e) {\n\t                    if (e.target !== modalContainer && modalContainer.childNodes.length - 1 === 0) {\n\t                        modalContainer.parentNode.removeChild(modalContainer);\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Modal;\n\t})();\n\t\n\t// Static variable that keeps track of all open modals\n\t\n\texports.default = Modal;\n\tModal._modalInstances = [];\n\t\n\t// Global keydown listener for modal\n\tglobal.addEventListener('keydown', function (e) {\n\t    if (e.keyCode === KEY_ESC) {\n\t        var lastModal = Modal._modalInstances[Modal._modalInstances.length - 1];\n\t        if (lastModal) {\n\t            _Widget2.default.findWidget(lastModal).close(e);\n\t        }\n\t    }\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Modal = __webpack_require__(7);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// default export as component object\n\texports.default = {\n\t    Modal: _Modal2.default,\n\t    Settings: _Settings2.default,\n\t    Widget: _Widget2.default\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** js/modal.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fd6c322424041403a378\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nconst PFX = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\nconst COL_LEFT_CLASS = 'is-collision-left';\n\nconst COL_RIGHT_CLASS = 'is-collision-right';\n\nconst COL_BOTTOM_CLASS = 'is-collision-bottom';\n\n/**\n * Provides shared DOM-Utility functions\n */\nexport default\nclass Util {\n\n    /**\n     * Will register the right animation event based on browser\n     * @param element\n     * @param type\n     * @param callback\n     */\n    static prefixedAnimateEvent(element, type, callback) {\n        const thisFunction = function (e) {\n            callback.apply(element, [e, thisFunction]);\n        };\n\n        for (var p = 0; p < PFX.length; p++) {\n            if (!PFX[p]) {\n                type = type.toLowerCase();\n            }\n            var name = PFX[p] + type;\n            element.addEventListener(name, thisFunction, true);\n        }\n    }\n\n    /**\n     * Get correct transitionend event\n     * @returns {String}\n     * @private\n     */\n    static whichTransitionEndEvent() {\n        let t;\n        const el = document.createElement('fake');\n\n        var transitions = {\n            'transition': 'transitionend',\n            'OTransition': 'oTransitionEnd',\n            'MozTransition': 'transitionend',\n            'WebkitTransition': 'webkitTransitionEnd'\n        };\n\n        for (t in transitions) {\n            if (el.style[t] !== undefined) {\n                return transitions[t];\n            }\n        }\n    }\n\n    /**\n     * Check if target is part of parent node\n     * @param target\n     * @param parent\n     * @returns {boolean}\n     */\n    static isPartOfNode(target, parent) {\n        if (!target || !parent) {\n            return false;\n        }\n        let now = target;\n        while (now !== parent && now !== null) {\n            if (now === parent) {\n                break;\n            }\n            now = now.parentNode;\n        }\n        return now !== null;\n    }\n\n    /**\n     * Walks the tree until func returns true for given argument\n     * @param target\n     * @param func\n     * @returns {boolean|HTMLElement}\n     */\n    static parentsUntil(target, func) {\n        if (!target) {\n            return false;\n        }\n        let now = target;\n        while (!func(now) && now !== null) {\n            now = now.parentNode;\n        }\n\n        return now;\n    }\n\n    /**\n     * Generates a unique id\n     * @return {String}\n     */\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    /**\n     * Detects scrollbar width\n     * @see http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n     * @returns {number}\n     */\n    static getScrollBarWidth() {\n\n        const doc = global.document, inner = doc.createElement('p');\n        inner.style.width = \"100%\";\n        inner.style.height = \"200px\";\n\n        const outer = doc.createElement('div');\n        outer.style.position = \"absolute\";\n        outer.style.top = \"0px\";\n        outer.style.left = \"0px\";\n        outer.style.visibility = \"hidden\";\n        outer.style.width = \"200px\";\n        outer.style.height = \"150px\";\n        outer.style.overflow = \"hidden\";\n        outer.appendChild(inner);\n\n        doc.body.appendChild(outer);\n        const w1 = inner.offsetWidth;\n        outer.style.overflow = 'scroll';\n        let w2 = inner.offsetWidth;\n        if (w1 === w2) {\n            w2 = outer.clientWidth;\n        }\n        doc.body.removeChild(outer);\n\n        return (w1 - w2);\n    }\n\n\n    /**\n     * Run an event once\n     * @param {String} ev\n     * @param {HTMLElement|HTMLDocument} target\n     * @param {Function} func\n     * @param {boolean} [capture]\n     * @return Function created listener\n     */\n    static addEventOnce(ev, target, func, capture) {\n        const thisFunction = function thisFunction(event) {\n            func(event, func);\n            target.removeEventListener(ev, thisFunction, capture);\n        };\n        target.addEventListener(ev, thisFunction, capture);\n        return thisFunction;\n    }\n\n    /**\n     * Checks if an element is visible\n     * @param {HTMLElement} element\n     * @returns bool\n     */\n    static isVisible(element) {\n        return element.offsetWidth > 0 && element.offsetHeight > 0;\n    }\n\n    /**\n     * Creates a camelCaseRepresentation of a dashed string\n     * @param {String} str\n     * @returns String\n     */\n    static dashToCamelCase(str) {\n        return str.replace(/-([a-z])/g, function (g) {\n            return g[1].toUpperCase();\n        });\n    }\n\n    /**\n     * Creates a copy of `input`\n     * @param {*} input\n     * @return *\n     */\n    static copy(input) {\n        return JSON.parse(JSON.stringify(input));\n    }\n\n    /**\n     * Reads options from element (data attributes) and applies to base\n     * @param {HTMLElement} element\n     * @param {Object} base\n     * @return {Object}\n     */\n    static applyOptionsFromElement(element, base) {\n        if (!element) {\n            return base;\n        }\n        const attrs = element.attributes;\n        for (let i = 0; i < attrs.length; i++) {\n            let attr = attrs[i];\n            if (attr) {\n                let s = Util.dashToCamelCase(attr.nodeName.replace('data-', '')),\n                    val = attr.nodeValue;\n                if (base.hasOwnProperty(s)) {\n                    // skip functions\n                    if (typeof base[s] === 'function') {\n                        continue;\n                    }\n                    if (typeof base[s] === 'boolean') {\n                        base[s] = parseInt(val || 1) === 1;\n                    } else {\n                        base[s] = val;\n                    }\n                }\n            }\n        }\n        return base;\n    }\n\n    /**\n     * Will position an element directly at given target\n     * Is aware of a given collision container to detect edges\n     * Will put elementToPosition either to left, center or right edge (prefer right)\n     *  and either to bottom or top (prefers bottom)\n     *\n     * You may overwrite preferred positioned with `centerHorizontal` and `positionTop`\n     *\n     * @param {HTMLElement|ClientRect} target the target container to align to\n     * @param {HTMLElement} elementToPosition the element to position\n     * @param {HTMLElement} collisionContainer the outer container to prevent collisions\n     * @param {bool} [centerHorizontal] set true to center element, otherwise it's put on the right border by default\n     * @param {bool} [positionTop] flip top, by default element is positioned to the bottom.\n     * @returns {HTMLElement}\n     */\n    static setupPositionNearby(target, elementToPosition, collisionContainer, centerHorizontal, positionTop) {\n\n        // determine relative offsets\n        let amountTop = 0, amountLeft = 0;\n        Util.parentsUntil(target.parentNode, function (el) {\n            if (!(el instanceof HTMLElement)) {\n                return false;\n            }\n            var style = window.getComputedStyle(el);\n            if (Util.isPartOfNode(elementToPosition, el)) {\n                if (style && style.position === 'relative') {\n                    amountTop += el.offsetTop || 0;\n                    amountLeft += el.offsetLeft || 0;\n                }\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        const targetPosition = target instanceof HTMLElement ? target.getBoundingClientRect() : target,\n            elementRect = elementToPosition.getBoundingClientRect(),\n            colRect = collisionContainer.getBoundingClientRect(),\n            targetTop = targetPosition.top - amountTop, targetRight = targetPosition.right,\n            isCollisionTop = (targetTop - elementRect.height) <= 0,\n            isCollisionBottom = window.innerHeight < (targetTop + amountTop + targetPosition.height + elementRect.height),\n            isCollisionLeft = targetRight < elementRect.width, targetLeft = targetPosition.left,\n            isCollisionRight = (targetLeft + elementRect.width) > colRect.width,\n            classList = elementToPosition.classList;\n\n        classList.remove(COL_RIGHT_CLASS);\n        classList.remove(COL_LEFT_CLASS);\n        classList.remove(COL_BOTTOM_CLASS);\n\n        let calcTop, calcLeft;\n        if (isCollisionLeft && !isCollisionRight) {\n            // put element to left if collision with left\n            calcLeft = (targetPosition.left - colRect.left - amountLeft) + 'px';\n            classList.add(COL_LEFT_CLASS);\n        } else {\n            // maybe center if no collision with either side\n            var rightPosition = (targetRight - elementRect.width - colRect.left - amountLeft) + 'px',\n                leftCentered = ((targetLeft + targetPosition.width / 2) -\n                    (elementRect.width / 2) || 0) - colRect.left,\n                collisionCentered = (leftCentered + elementRect.width) > colRect.width;\n            if (centerHorizontal && !collisionCentered) {\n                calcLeft = leftCentered + 'px';\n            } else {\n                classList.add(COL_RIGHT_CLASS);\n                calcLeft = rightPosition;\n            }\n        }\n\n        if (isCollisionBottom || (positionTop && !isCollisionTop)) {\n            // Put Element on top if collision\n            calcTop = (targetTop - elementRect.height) - colRect.top + 'px';\n            classList.add(COL_BOTTOM_CLASS);\n        } else {\n            calcTop = (targetTop + targetPosition.height) - colRect.top + 'px';\n        }\n\n        elementToPosition.style.cssText = `top:${calcTop};left:${calcLeft};`;\n\n        return elementToPosition;\n    }\n\n    /**\n     * Brings a given element into viewport\n     * @param {HTMLElement} el\n     * @param {int|function}[optionalOffset]\n     */\n    static scrollToElement(el, optionalOffset) {\n        el.scrollIntoView();\n        // optionally use a additional scrollDif\n        if (optionalOffset) {\n            if (typeof optionalOffset === 'function') {\n                optionalOffset = optionalOffset();\n            }\n            if (optionalOffset > 0) {\n                const scrolledY = window.scrollY || window.pageYOffset;\n                if (scrolledY) {\n                    window.scroll(0, scrolledY - optionalOffset);\n                }\n            }\n        }\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/util/Util.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n'use strict';\n\nimport Util from 'util/Util';\n\n// we attach global settings to global once because settings might be shared a lot of times trough the application\n// Maybe find a better way to handle that scenario\nif (!global.FLEXCSS_GLOBAL_SETTINGS) {\n\n    global.FLEXCSS_GLOBAL_SETTINGS = {\n        // defined breakpoint for small devices < n\n        smallBreakpoint: 768,\n        // nodes that should be updated when no scrollbar is expected\n        scrollbarUpdateNodes: global.document.body !== null ? [global.document.body] : [],\n        // additional Delay until darkener is fully hidden\n        darkenerFadeDelay: 100,\n        // class that is added if canvas has been toggled\n        canvasToggledClass: 'toggled-canvas'\n    };\n\n    global.FLEXCSS_CONST_IS_IOS = null;\n\n    global.FLEXCSS_CONST_IS_TOUCH = null;\n\n    global.FLEXCSS_CONST_IS_IE = null;\n\n    global.FLEXCSS_CONST_TAB_EVENT = 'click';\n\n    const init = () => {\n        // Measure scrollbar width\n        global.FLEXCSS_CONST_SCROLLBAR_WIDTH = Util.getScrollBarWidth();\n        // detect right transition end event\n        global.FLEXCSS_CONST_TRANSITION_EVENT = Util.whichTransitionEndEvent();\n    };\n\n    if (global.document.readyState !== 'loading') {\n        init();\n    } else {\n        // it's possible that global.document.body is not available if the document is not\n        // loaded completely\n        document.addEventListener('DOMContentLoaded', () => {\n            init();\n        });\n    }\n}\n\n/**\n * Utility class that setups global settings\n */\nexport default\nclass Settings {\n\n    /**\n     * Setup global settings, overwrite default values\n     * @param {Object} settings\n     */\n    static setup(settings) {\n        Object.assign(global.FLEXCSS_GLOBAL_SETTINGS, settings);\n    }\n\n    /**\n     * Access to global settings\n     * @returns {Object}\n     */\n    static get() {\n        return global.FLEXCSS_GLOBAL_SETTINGS;\n    }\n\n    /**\n     * Detects a IOS Device, caches subsequent calls\n     * @returns {boolean}\n     */\n    static isIosDevice() {\n        if (!global.FLEXCSS_CONST_IS_IOS) {\n            global.FLEXCSS_CONST_IS_IOS = global.navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n        }\n\n        return global.FLEXCSS_CONST_IS_IOS;\n    }\n\n    /**\n     * Detects a touch device, caches subsequent calls\n     * @returns {boolean}\n     */\n    static isTouchDevice() {\n        if (!global.FLEXCSS_CONST_IS_TOUCH) {\n            global.FLEXCSS_CONST_IS_TOUCH = 'ontouchstart' in window || !!(global.navigator.msMaxTouchPoints);\n        }\n        return global.FLEXCSS_CONST_IS_TOUCH;\n    }\n\n    /**\n     * Checks if current browser is Internet Explorer\n     * @returns {boolean|*}\n     */\n    static isIE() {\n        if (!global.FLEXCSS_CONST_IS_IE) {\n            global.FLEXCSS_CONST_IS_IE = \"ActiveXObject\" in window;\n        }\n        return global.FLEXCSS_CONST_IS_IE;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static getTransitionEvent() {\n        return global.FLEXCSS_CONST_TRANSITION_EVENT;\n    }\n\n    /**\n     * @returns {int}\n     */\n    static getScrollbarWidth() {\n        return global.FLEXCSS_CONST_SCROLLBAR_WIDTH;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static getTabEvent() {\n        return global.FLEXCSS_CONST_TAB_EVENT;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/util/Settings.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Widget\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\n/**\n * A Widget provides async content on a specific target (e.g. a modal link)\n */\nexport default\nclass Widget {\n\n    /**\n     * Creates a new Widget\n     * @param [element], optional define the content of widget\n     */\n    constructor(element) {\n\n        /**\n         *\n         * @type {Promise}\n         */\n        this.asyncContent = null;\n\n        /**\n         * @type {boolean}\n         */\n        this._isWidget = true;\n\n        if (element) {\n            /**\n             * @type {HTMLElement}\n             */\n            this.element = element instanceof HTMLElement ? element : global.document.getElementById(element);\n            if (this.element) {\n                this.element.hfWidgetInstance = this;\n                this.setAsync((() => {\n                    return new Promise(((s) => {\n                        s(this.element);\n                    }).bind(this));\n                }).bind(this));\n            } else {\n                throw 'Could not found element with ID: ' + element;\n            }\n        }\n        /**\n         * The final resulted content that a widget did create (e.g. a modal container)\n         * @type {HTMLElement}\n         */\n        this.finalContent = null;\n    }\n\n    /**\n     *\n     * @returns {Promise}\n     */\n    getAsync() {\n        return this.asyncContent();\n    }\n\n    /**\n     * @param {Function.<Promise>} async\n     * @returns {Widget}\n     */\n    setAsync(async) {\n        this.asyncContent = async;\n        return this;\n    }\n\n    /**\n     * @returns {HTMLElement}\n     */\n    getFinalContent() {\n        return this.finalContent;\n    }\n\n    /**\n     * @param {HTMLElement} element\n     * @returns {Widget}\n     */\n    setElement(element) {\n        this.element = element;\n        return this;\n    }\n\n    /**\n     * Destroys the generated content of this widget\n     * @returns {boolean}\n     */\n    destroy() {\n\n        if (this.finalContent && this.finalContent.parentNode) {\n            this.finalContent.parentNode.removeChild(this.finalContent);\n            return true;\n        }\n\n        delete this.element;\n        delete this.asyncContent;\n        delete this.finalContent;\n\n        return false;\n    }\n\n    /**\n     * Will find a widget on an Element\n     * @param {HTMLElement} element\n     * @returns {Widget|undefined}\n     */\n    static findWidget(element) {\n        return element ? element.hfWidgetInstance : undefined;\n    }\n\n    /**\n     * Checks if a given object is an instance\n     * @param {Object} self\n     * @returns {boolean}\n     */\n    static isWidget(self) {\n        return self instanceof Widget || typeof self === 'object' && self.hasOwnProperty('_isWidget');\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Widget.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/*global CustomEvent*/\n\n'use strict';\n\n// polyfill for custom events to make thinks work in IE\n// The needed polyfill is so small that I embedded it here\nvoid function () {\n    if (!global.CustomEvent || typeof global.CustomEvent !== 'function') {\n        var CustomEvent;\n        CustomEvent = function (event, params) {\n            var evt;\n            params = params || {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: undefined\n                };\n            evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n        CustomEvent.prototype = global.Event.prototype;\n        global.CustomEvent = CustomEvent;\n    }\n}();\n/**\n * Simpler Event dispatching\n */\nclass EventHandler {\n\n    /**\n     * @param {HTMLElement} target\n     * @param {String} name\n     */\n    constructor(target, name) {\n\n        this.target = target;\n        this.defaultOptions = {\n            bubbles: true,\n            cancelable: true\n        };\n\n        this.name = name;\n    }\n\n    /**\n     * Set more options\n     * @param {Object} options\n     * @returns {EventHandler}\n     */\n    withOptions(options) {\n        Object.assign(this.defaultOptions, (options || {}));\n        return this;\n    }\n\n    /**\n     * Call with the originalEvent\n     * @param {Event} e\n     * @returns {EventHandler}\n     */\n    withOriginal(e) {\n        return this.withDetail({\n            originalEvent: e\n        });\n    }\n\n    /**\n     * Extends the detail part of the event\n     * @param {Object} o\n     * @returns {EventHandler}\n     */\n    withDetail(o) {\n        if (!this.defaultOptions.detail) {\n            this.defaultOptions.detail = {};\n        }\n        Object.assign(this.defaultOptions.detail, o);\n        return this;\n    }\n\n    /**\n     * @returns {Window.CustomEvent}\n     */\n    fire() {\n        var e = new CustomEvent(this.name, this.defaultOptions);\n        if (this.target) {\n            this.target.dispatchEvent(e);\n        }\n        return e;\n    }\n}\n\nexport default\nclass Event {\n    /**\n     * Prepares to dispatch a custom event (without firing)\n     * @param {HTMLElement} target\n     * @param {String} name\n     * @returns {EventHandler}\n     */\n    static dispatch(target, name) {\n        return new EventHandler(target, name);\n    }\n\n    /**\n     * Dispatches a custom event and fires it directly\n     * @param {HTMLElement} target\n     * @param {String} name\n     * @param {Object} [options]\n     * @returns {Window.CustomEvent}\n     */\n    static dispatchAndFire(target, name, options) {\n        return new EventHandler(target, name).withOptions(options).fire();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/util/Event.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Modal\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\n\n/*global KeyboardEvent*/\n\nimport Settings from 'util/Settings';\nimport Event from 'util/Event';\nimport Util from 'util/Util';\nimport Widget from 'Widget';\n\nconst HTML_ELEMENT = global.document.documentElement;\nconst KEY_ESC = 27;\n/* Attribute Names */\nconst ATTR_CREATE_NEW = 'data-new-instance';\nconst ATTR_CLOSE = 'data-close-modal';\nconst ATTR_NAME = 'data-modal';\n\n/* Class names */\nconst CLS_CONTAINER_CURRENT = 'front';\nconst CLS_OPEN = 'open';\nconst CLS_CURRENT = 'current';\nconst CLS_PART_OF_STACK = 'part-of-stack';\nconst CLS_MODAL_OPEN = 'modal-open';\nconst CLS_MODAL_CONTAINER = 'modal-container';\nconst CLS_ANIM_END = 'modal-anim-end';\nconst CLS_LOADER_CONTAINER = 'loader-container';\nconst CLS_LOADER = 'loader';\n\n/* Events */\n\n/**\n * Event triggered when modal is closed\n * @type {string}\n */\nexport const EVENT_MODAL_CLOSED = 'flexcss.modal.closed';\n/**\n * Event triggered before a modal is closed, cancelable\n * @type {string}\n */\nexport const EVENT_MODAL_BEFORE_CLOSED = 'flexcss.modal.beforeClose';\n/**\n * Event triggered when a modal is opened\n * @type {string}\n */\nexport const EVENT_MODAL_OPENED = 'flexcss.modal.opened';\n\n/**\n * Event triggered when modal is initilized, called on target\n * @type {string}\n */\nexport const EVENT_MODAL_INIT = 'flexcss.modal.init';\n\n/**\n * Triggered when the content of an async modal on a target is loaded, called on target\n * @type {string}\n */\nexport const EVENT_MODAL_ASYNC_TARGET_LOADED = 'flexcss.modal.asyncTargetLoaded';\n\n/**\n * A Modal Implementation\n */\nexport default\nclass Modal {\n    constructor(DelegateContainer, options) {\n        var doc = global.document, container = DelegateContainer instanceof HTMLElement ?\n            DelegateContainer : doc.getElementById(DelegateContainer);\n\n        // Instance vars:\n        if (!container) {\n            throw 'Could not found container element by given ID/Element: ' + DelegateContainer;\n        }\n\n        this.currentOpen = null;\n\n        this.loading = false;\n\n        this.container = container;\n\n        /**\n         * Default Options\n         */\n        this.options = {\n            classNames: 'modal',\n            closeOnEscape: true,\n            closeOnBackgroundClick: true,\n            destroyOnFinish: false,\n            fixedContainer: true,\n            containerClassNames: ''\n        };\n\n        Object.assign(this.options, options);\n\n        // Container where events are delegated\n        this.eventContainer = null;\n        this.eventFunction = null;\n\n        this.dataMainPageContainer = global.document.body;\n\n        this.currentScrollTop = 0;\n\n        this.modalContainer = null;\n\n        // Destroy full modal instance when no dialogs are bind to?\n        // Otherwise container is recycled\n        this.destroyOnFinish = this.options.destroyOnFinish;\n    }\n\n    /**\n     * Removes this modal from global stack\n     * Will handle fixing main html element too\n     * @private\n     * @param n\n     */\n    _removeModalFromStack(n) {\n        var t = Modal._modalInstances.indexOf(n), self = this;\n        if (t > -1) {\n            Modal._modalInstances.splice(t, 1);\n            if (Modal._modalInstances.length === 0) {\n                // restore scrollPosition:\n                if (self.dataMainPageContainer) {\n                    setTimeout(function () {\n                        if (self.options.fixedContainer) {\n                            self.dataMainPageContainer.style.position = \"static\";\n                            self.dataMainPageContainer.style.top = \"0px\";\n                            // reset scrollTop\n                            document.documentElement.scrollTop = self.currentScrollTop;\n                            document.body.scrollTop = self.currentScrollTop;\n                        }\n                        Settings.get().scrollbarUpdateNodes.forEach(function (node) {\n                            node.style.paddingRight = '';\n                        });\n                        HTML_ELEMENT.classList.remove(CLS_MODAL_OPEN);\n                    }, 0);\n                }\n            }\n        }\n    }\n\n\n    /**\n     * Modal container that contains all `stacked` modals for this instance\n     * @returns {HTMLElement}\n     */\n    getModalContainer() {\n        return this.modalContainer;\n    }\n\n    /**\n     * Closes the current open modal of this stack\n     * @params [e], optional event\n     * @returns {*}\n     */\n    close(e) {\n        var self = this;\n\n        const options = self.currentOpen ? Util.applyOptionsFromElement(\n            self.currentOpen, Util.copy(self.options)) : self.options;\n\n        // close only on keyboard if instance should\n        if (!options.closeOnEscape && e instanceof KeyboardEvent) {\n            return false;\n        }\n\n        // close only on background if instance should\n        if (!options.closeOnBackgroundClick && e &&\n            e.type === Settings.getTabEvent() && !e.target.hasAttribute(ATTR_CLOSE)) {\n            return false;\n        }\n\n        // if an instance is currently loading, prevent from closing\n        if (self.loading) {\n            return false;\n        }\n\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (self.currentOpen) {\n            // dispatch beforeClose event, if prevented prevent modal from closing\n            var ev = Event.dispatchAndFire(self.currentOpen, EVENT_MODAL_BEFORE_CLOSED);\n            if (ev.defaultPrevented) {\n                return false;\n            }\n\n            this._finishState(self.currentOpen);\n            // if there is an previous modal\n            if (self.currentOpen.prevModal) {\n                // switch to the next modal\n                return self.switchModals(self.currentOpen.prevModal,\n                    self.currentOpen.prevModal.prevModal || null);\n            }\n\n            // finally trigger closed event\n            Event.dispatch(self.currentOpen, EVENT_MODAL_CLOSED).withOriginal(e).fire();\n\n        }\n        self._removeModalFromStack(self.currentOpen);\n\n        // Full stack closed:\n        self.currentOpen = null;\n        if (self.modalContainer) {\n            // setup next open\n            var lastContainer = Modal._modalInstances[Modal._modalInstances.length - 1],\n                classList = self.modalContainer.classList;\n            classList.remove(CLS_CONTAINER_CURRENT);\n            classList.remove(CLS_OPEN);\n            // Remove all current classes from child-nodes\n            for (var i = 0; i < self.modalContainer.childNodes.length; i++) {\n                var node = self.modalContainer.childNodes[i], cl = node.classList;\n                // remove applied styles\n                self._finishState(node);\n                cl.remove(CLS_CURRENT);\n                cl.remove(CLS_PART_OF_STACK);\n            }\n            if (lastContainer) {\n                lastContainer.parentNode.classList.add(CLS_CONTAINER_CURRENT);\n            }\n        }\n\n        if (self.destroyOnFinish) {\n            self.destroy();\n        }\n        return self;\n    }\n\n    /**\n     * Resets a target when newly initilizes\n     * @param target\n     * @private\n     */\n    _finishState(target) {\n        target.classList.remove(CLS_ANIM_END);\n    }\n\n    /**\n     * Handler called when a Modal has finished an animation\n     * @param e\n     * @param self\n     * @private\n     */\n    _finishAnim(e, self) {\n        e.target.classList.add(CLS_ANIM_END);\n        e.target.removeEventListener(e.type, self, true);\n    }\n\n    /**\n     * Brings the given modal to front\n     * @param co\n     * @param last\n     */\n    switchModals(co, last) {\n        co.prevModal = last;\n        Modal._modalInstances.push(co);\n\n        if (last) {\n            this._finishState(last);\n            Util.prefixedAnimateEvent(last, 'AnimationEnd', this._finishAnim);\n            last.classList.add(CLS_PART_OF_STACK);\n        }\n        // set new currentOpen\n        this.currentOpen = co;\n\n        // bring current container to the front\n        var instances = Modal._modalInstances;\n\n        for (var m = 0; m < instances.length; m++) {\n            instances[m].parentNode.classList.remove(CLS_CONTAINER_CURRENT);\n        }\n        this.modalContainer.classList.add(CLS_CONTAINER_CURRENT);\n        // remove animations if animations has been completed, fixes various bugs:\n        // - fixes nested scrolling element issue in iOS Browsers / Mobile-Safari\n        Util.prefixedAnimateEvent(co, 'AnimationEnd', this._finishAnim);\n\n        for (var i = 0; i < this.modalContainer.childNodes.length; i++) {\n            var n = this.modalContainer.childNodes[i], isCurrent = n.classList.contains(CLS_CURRENT);\n            if (n === co) {\n                co.classList.add(CLS_CURRENT);\n                co.classList.remove(CLS_PART_OF_STACK);\n                this._finishState(co);\n            } else {\n                n.classList.remove(CLS_CURRENT);\n                if (isCurrent) {\n                    this._removeModalFromStack(n);\n                    Event.dispatchAndFire(n, EVENT_MODAL_CLOSED);\n                }\n            }\n        }\n    }\n\n    handleScrollbar() {\n        var self = this;\n        if (Modal._modalInstances.length === 0) {\n            // save current scrollTop:\n            let scrollTop, c;\n            if (self.options.fixedContainer) {\n                scrollTop = global.pageYOffset;\n                c = self.dataMainPageContainer;\n                self.currentScrollTop = scrollTop;\n            }\n            // this causes reflow/paint and should be optimized\n            // At lest we write in a batch later\n            Settings.get().scrollbarUpdateNodes.map(function (n) {\n                return {\n                    n: n, padding: parseInt(global.getComputedStyle(n).paddingRight) +\n                    Settings.getScrollbarWidth() + 'px'\n                };\n            }).forEach(function (d) {\n                d.n.style.paddingRight = d.padding;\n            });\n            if (self.options.fixedContainer) {\n                if (c) {\n                    c.style.cssText += `top:${scrollTop * -1 + 'px'};position:fixed`;\n                }\n            }\n            HTML_ELEMENT.classList.add(CLS_MODAL_OPEN);\n        }\n    }\n\n    /**\n     * Creates a Modal and opens it (later)\n     * @param e\n     * @returns {Promise|boolean}\n     */\n    createWidget(e) {\n        var self = this;\n        if (this.loading) {\n            return false;\n        }\n\n        // check if another modal has registered events on this dom path:\n        if (e && e.target) {\n            var foundInstance = Util.parentsUntil(e.target, function (node) {\n                return node && node.flexModalInstance;\n            });\n\n            // if another instance has been found, abort\n            if (foundInstance !== this.container) {\n                return false;\n            }\n        }\n        var targetContent, future, widget, target, hasTarget = true,\n            isHtmlElement = e instanceof HTMLElement, isWidget = Widget.isWidget(e);\n        if (isHtmlElement || isWidget) {\n            if (isHtmlElement) {\n                targetContent = e;\n            } else {\n                widget = e;\n                targetContent = widget.element;\n            }\n        } else {\n            target = e.target;\n            if (!target) {\n                throw 'Could not find target, did you pass an event, a HTMLElement or an Widget?';\n            }\n            hasTarget = target.hasAttribute(ATTR_NAME);\n            targetContent = target.getAttribute(ATTR_NAME);\n            widget = Widget.findWidget(target);\n            if (target.hasAttribute(ATTR_CREATE_NEW) && !e.newInstance) {\n                var newInstance = new Modal(this.container)\n                    .setDestroyOnFinish(true);\n                e.newInstance = true;\n                newInstance.fromEvent(e).then(function () {\n                    newInstance.registerEvents(newInstance.getModalContainer());\n                });\n                return false;\n            }\n            if (hasTarget) {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n            }\n        }\n\n        if (!hasTarget) {\n            return false;\n        }\n\n        let modalContainerClasses = this.modalContainer ? this.modalContainer.classList : [];\n\n        // lazy create modal container\n        if (!this.modalContainer) {\n            this.modalContainer = global.document.createElement('div');\n            this.modalContainer.className = `${CLS_MODAL_CONTAINER} ${this.options.containerClassNames} ${CLS_OPEN}`;\n            const closeModalFunction = function (ce) {\n                if (self.loading) {\n                    return false;\n                }\n                if (Util.isPartOfNode(ce.target, self.currentOpen)) {\n                    if (!ce.target.hasAttribute(ATTR_CLOSE)) {\n                        return false;\n                    }\n                }\n                self.close(ce);\n            };\n\n            this.modalContainer.addEventListener(Settings.getTabEvent(), closeModalFunction, false);\n\n            modalContainerClasses = this.modalContainer.classList;\n            this.container.appendChild(this.modalContainer);\n\n        } else {\n            modalContainerClasses.add(CLS_OPEN);\n        }\n\n        let loader, doc = global.document, toggleLoader = function (show) {\n            if (show) {\n                loader = doc.createElement('div');\n                loader.className = CLS_LOADER_CONTAINER;\n                var loaderLoader = doc.createElement('div');\n                loaderLoader.className = CLS_LOADER;\n                loader.appendChild(loaderLoader);\n                self.modalContainer.appendChild(loader);\n            } else {\n                loader.parentNode.removeChild(loader);\n            }\n        };\n\n        this.handleScrollbar();\n\n        modalContainerClasses.add(CLS_CONTAINER_CURRENT);\n        modalContainerClasses.add('loading');\n        this.loading = true;\n        toggleLoader(true);\n        var async = widget ? widget.getAsync() : null;\n        if (Widget.isWidget(widget) && async) {\n            future = async.then(function (r) {\n                var result;\n                if (r instanceof HTMLElement || r instanceof DocumentFragment) {\n                    result = r;\n                } else {\n                    // Create container Element:\n                    var element = doc.createElement('div');\n                    element.className = self.options.classNames;\n                    element.innerHTML = r;\n                    element.id = Util.guid();\n                    result = element;\n                }\n                widget.finalContent = result;\n                Event.dispatchAndFire(target, EVENT_MODAL_ASYNC_TARGET_LOADED);\n                return result;\n            });\n        } else {\n            var el = targetContent instanceof HTMLElement ||\n            targetContent instanceof DocumentFragment ? targetContent : doc.getElementById(targetContent);\n            if (el) {\n                future = new Promise((resolve) => {\n                    resolve(el);\n                });\n            } else {\n                throw 'Could not found given modal element (content) with ID: ' + targetContent;\n            }\n        }\n\n        Event.dispatchAndFire(target, EVENT_MODAL_INIT);\n\n        return future.then((thisEl) => {\n            thisEl.hfWidgetInstance = self;\n            self.modalContainer.appendChild(thisEl);\n            modalContainerClasses.remove('loading');\n            self.loading = false;\n            toggleLoader(false);\n\n            self.open(thisEl, true, e);\n\n            return thisEl;\n        });\n    }\n\n    /**\n     * Open's an already rendered modal\n     * @param {HTMLElement} modal\n     * @param {Boolean} [internal], set to true to prevent container management\n     * @param {Boolean} [maybeEvent], optional event-object that triggered open\n     */\n    open(modal, internal, maybeEvent) {\n\n\n        if (!internal) {\n            this.modalContainer.classList.add('open');\n            this.handleScrollbar();\n        }\n        this.switchModals(modal, this.currentOpen);\n\n        Event.dispatch(modal, EVENT_MODAL_OPENED).withOriginal(maybeEvent).fire();\n    }\n\n\n    registerEvents(delegate) {\n        var delegateContainer = delegate || this.container, self = this;\n\n        // register modal instance so we can detect multiple registrars\n        delegateContainer.flexModalInstance = self;\n        self.eventFunction = function () {\n            self.createWidget.apply(self, arguments);\n        };\n        delegateContainer.addEventListener(Settings.getTabEvent(), self.eventFunction, false);\n\n        self.eventContainer = delegateContainer;\n        return self;\n    }\n\n\n    /**\n     * Creates a new Dialog Instance either directly from HTML Element or a Widget instance\n     * @param {HTMLElement|Widget} widget instance or html element\n     * @returns {Promise}\n     */\n    fromWidget(widget) {\n        return this.createWidget(widget);\n    }\n\n    /**\n     * Creates a Widget from event\n     * @param e\n     * @returns {Promise}\n     */\n    fromEvent(e) {\n        return this.createWidget(e);\n    }\n\n    setDestroyOnFinish(v) {\n        this.destroyOnFinish = v;\n        return this;\n    }\n\n    /**\n     * Destroy this widget instance, cleans empty DOM nodes\n     * Will use fast MutationObserver if available, otherwise falls back to DOMNodeRemoved event\n     */\n    destroy() {\n        let self = this, modalContainer = this.modalContainer;\n        const isEmptyContainer = modalContainer.childNodes.length === 0;\n        // Remove event listener on destroy, do not remove DOM node\n        if (self.eventContainer) {\n            self.eventContainer.removeEventListener(Settings.getTabEvent(), self.eventFunction, true);\n        }\n\n        if (isEmptyContainer) {\n            if (modalContainer.parentNode) {\n                modalContainer.parentNode.removeChild(modalContainer);\n            }\n        }\n        if (global.MutationObserver) {\n            var observer = new MutationObserver(function (mutations) {\n                mutations.forEach(function () {\n                    if (isEmptyContainer) {\n                        modalContainer.parentNode.removeChild(modalContainer);\n                        observer.disconnect();\n                    }\n                });\n            });\n            observer.observe(modalContainer, {childList: true});\n        } else {\n            modalContainer.addEventListener('DOMNodeRemoved', function (e) {\n                if (e.target !== modalContainer && (modalContainer.childNodes.length - 1) === 0) {\n                    modalContainer.parentNode.removeChild(modalContainer);\n                }\n            });\n        }\n    }\n}\n\n\n// Static variable that keeps track of all open modals\nModal._modalInstances = [];\n\n// Global keydown listener for modal\nglobal.addEventListener('keydown', function (e) {\n    if (e.keyCode === KEY_ESC) {\n        var lastModal = Modal._modalInstances[Modal._modalInstances.length - 1];\n        if (lastModal) {\n            Widget.findWidget(lastModal).close(e);\n        }\n    }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Modal.js\n **/","'use strict';\n\nimport Modal from 'Modal';\nimport Settings from 'util/Settings';\nimport Widget from 'Widget';\n\n// default export as component object\nexport default {\n    Modal: Modal,\n    Settings: Settings,\n    Widget: Widget\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/modules/Modal.js\n **/"],"sourceRoot":""}