{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///js/modal.min.js","webpack:///webpack/bootstrap a32af781d3d6caa30484?a65b*","webpack:///./src/main/util/Util.js?5bc4*","webpack:///./src/main/util/Settings.js?b01f*","webpack:///./src/main/util/Event.js?68bf*","webpack:///./src/main/Widget.js?920e","webpack:///./src/main/lib/FixedWindow.js?6376","webpack:///./src/main/Modal.js?a8d4","webpack:///./src/main/lib/debounce.js?3601","webpack:///./src/main/modules/Modal.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","PFX","COL_LEFT_CLASS","COL_RIGHT_CLASS","COL_BOTTOM_CLASS","Util","element","type","callback","thisFunction","e","apply","thisType","toLowerCase","name","addEventListener","t","el","document","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","undefined","style","parent","now","parentNode","func","s4","Math","floor","random","toString","substring","doc","inner","width","height","outer","position","top","left","visibility","overflow","appendChild","body","w1","offsetWidth","w2","clientWidth","removeChild","ev","capture","event","removeEventListener","offsetHeight","str","replace","g","toUpperCase","input","JSON","parse","stringify","base","attrs","attributes","attr","s","dashToCamelCase","nodeName","val","nodeValue","hasOwnProperty","parseInt","elementToPosition","collisionContainer","centerHorizontal","positionTop","amountTop","amountLeft","parentsUntil","HTMLElement","window","getComputedStyle","isPartOfNode","offsetTop","offsetLeft","targetPosition","getBoundingClientRect","elementRect","colRect","targetTop","targetRight","right","isCollisionTop","isCollisionBottom","innerHeight","isCollisionLeft","targetLeft","isCollisionRight","classList","remove","calcTop","calcLeft","add","rightPosition","leftCentered","collisionCentered","cssText","optionalOffset","scrollIntoView","thisOffset","scrolledY","pageYOffset","scroll","_interopRequireDefault","obj","__esModule","default","_Util","_Util2","FLEXCSS_GLOBAL_SETTINGS","smallBreakpoint","scrollbarUpdateNodes","darkenerFadeDelay","canvasToggledClass","FLEXCSS_CONST_IS_IOS","FLEXCSS_CONST_IS_TOUCH","FLEXCSS_CONST_IS_IE","FLEXCSS_CONST_TAB_EVENT","FLEXCSS_IS_SMALL_SCREEN","init","FLEXCSS_CONST_SCROLLBAR_WIDTH","getScrollBarWidth","FLEXCSS_CONST_TRANSITION_EVENT","whichTransitionEndEvent","readyState","Settings","settings","assign","navigator","userAgent","match","innerWidth","get","msMaxTouchPoints","CustomEvent","_CustomEvent","params","thisParams","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event","EventHandler","defaultOptions","options","withDetail","originalEvent","o","dispatchEvent","withOptions","fire","_typeof","Symbol","iterator","constructor","Widget","_this","asyncContent","_isWidget","getElementById","Error","hfWidgetInstance","setAsync","Promise","finalContent","async","self","EVENT_AFTER_FIXED_REMOVE","EVENT_BEFORE_FIXED_ADD","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","next","done","push","err","Array","isArray","_Settings","_Settings2","_debounce","_debounce2","_Event","_Event2","CLS_FIXED_WINDOW","fixedWindowInstance","FixedWindow","widgets","currentScrollTop","fixedScreenConstraints","windowWidth","isFixedWindowActive","touchListener","widget","fixedBreakpointFn","Set","widgetsThatRequireFixedWindow","from","some","_ref","_addFixedContainer","_removeFixedContainer","_this2","dispatchAndFire","getCurrentWidget","map","n","foundProperty","direction","node","whatNode","property","d","__fixedWindowMod__","getScrollbarWidth","forEach","preventDefault","shouldNotMove","touchStartListener","_getCurrentWidget","scrollTop","scrollHeight","touchMoveListener","_getCurrentWidget2","stopImmediatePropagation","documentElement","_node","paddingRight","_checkFixedNeeded","pop","fixed","fixedWidget","eventHandler","resizeListener","bind","EVENT_MODAL_ASYNC_TARGET_LOADED","EVENT_MODAL_INIT","EVENT_MODAL_OPENED","EVENT_MODAL_BEFORE_CLOSED","EVENT_MODAL_CLOSED","_Widget","_Widget2","_FixedWindow","_FixedWindow2","HTML_ELEMENT","KEY_ESC","ATTR_CREATE_NEW","ATTR_CLOSE","ATTR_NAME","CLS_CONTAINER_CURRENT","CLS_OPEN","CLS_CURRENT","CLS_PART_OF_STACK","CLS_MODAL_OPEN","CLS_MODAL_CONTAINER","CLS_ANIM_END","CLS_LOADER_CONTAINER","CLS_LOADER","Modal","DelegateContainer","container","currentOpen","loading","classNames","closeOnEscape","closeOnBackgroundClick","destroyOnFinish","fixedContainer","containerClassNames","eventContainer","eventFunction","dataMainPageContainer","modalContainer","_modalInstances","indexOf","splice","getInstance","close","applyOptionsFromElement","copy","KeyboardEvent","getTabEvent","hasAttribute","defaultPrevented","_finishState","prevModal","switchModals","dispatch","withOriginal","_removeModalFromStack","lastContainer","childNodes","cl","destroy","co","last","open","prefixedAnimateEvent","_finishAnim","instances","isCurrent","contains","foundInstance","flexModalInstance","targetContent","future","hasTarget","isHtmlElement","isWidget","getAttribute","findWidget","newInstance","setDestroyOnFinish","fromEvent","then","registerEvents","getModalContainer","modalContainerClasses","className","closeModalFunction","ce","loader","toggleLoader","show","loaderLoader","handleScrollbar","getAsync","r","result","DocumentFragment","innerHTML","guid","resolve","thisEl","modal","internal","maybeEvent","delegate","delegateContainer","addScreenConstraint","createWidget","arguments","v","isEmptyContainer","MutationObserver","observer","mutations","disconnect","observe","childList","keyCode","lastModal","fn","ms","clearTimeout","timeout","setTimeout","_Modal","_Modal2"],"mappings":"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","file":"js/modal.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlexCss\"] = factory();\n\telse\n\t\troot[\"FlexCss\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlexCss\"] = factory();\n\telse\n\t\troot[\"FlexCss\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"../\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(19);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\tvar PFX = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\t\n\tvar COL_LEFT_CLASS = 'is-collision-left';\n\t\n\tvar COL_RIGHT_CLASS = 'is-collision-right';\n\t\n\tvar COL_BOTTOM_CLASS = 'is-collision-bottom';\n\t\n\t/**\n\t * Provides shared DOM-Utility functions\n\t */\n\t\n\tvar Util = function () {\n\t    function Util() {\n\t        _classCallCheck(this, Util);\n\t    }\n\t\n\t    _createClass(Util, null, [{\n\t        key: \"prefixedAnimateEvent\",\n\t\n\t\n\t        /**\n\t         * Will register the right animation event based on browser\n\t         * @param element\n\t         * @param type\n\t         * @param callback\n\t         */\n\t        value: function prefixedAnimateEvent(element, type, callback) {\n\t            var thisFunction = function thisFunction(e) {\n\t                callback.apply(element, [e, thisFunction]);\n\t            };\n\t\n\t            for (var p = 0; p < PFX.length; p++) {\n\t                var thisType = type;\n\t                if (!PFX[p]) {\n\t                    thisType = type.toLowerCase();\n\t                }\n\t                var name = PFX[p] + thisType;\n\t                element.addEventListener(name, thisFunction, true);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Get correct transitionend event\n\t         * @returns {String}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: \"whichTransitionEndEvent\",\n\t        value: function whichTransitionEndEvent() {\n\t            var t = void 0;\n\t            var el = document.createElement('fake');\n\t\n\t            var transitions = {\n\t                transition: 'transitionend',\n\t                OTransition: 'oTransitionEnd',\n\t                MozTransition: 'transitionend',\n\t                WebkitTransition: 'webkitTransitionEnd'\n\t            };\n\t\n\t            for (t in transitions) {\n\t                if (el.style[t] !== undefined) {\n\t                    return transitions[t];\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Check if target is part of parent node\n\t         * @param target\n\t         * @param parent\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: \"isPartOfNode\",\n\t        value: function isPartOfNode(target, parent) {\n\t            if (!target || !parent) {\n\t                return false;\n\t            }\n\t            var now = target;\n\t            while (now !== parent && now !== null) {\n\t                if (now === parent) {\n\t                    break;\n\t                }\n\t                now = now.parentNode;\n\t            }\n\t            return now !== null;\n\t        }\n\t\n\t        /**\n\t         * Finds the closest element including itself matching a callback\n\t         * @param {Node} el\n\t         * @param {Function} callback\n\t         * @returns {Node|boolean}\n\t         */\n\t\n\t    }, {\n\t        key: \"closestCallback\",\n\t        value: function closestCallback(el, callback) {\n\t            var element = el;\n\t            while (element !== null) {\n\t                if (callback(element)) {\n\t                    return element;\n\t                }\n\t                element = element.parentNode;\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\n\t         * Walks the tree until func returns true for given argument\n\t         * @param target\n\t         * @param func\n\t         * @returns {boolean|HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: \"parentsUntil\",\n\t        value: function parentsUntil(target, func) {\n\t            if (!target) {\n\t                return false;\n\t            }\n\t            var now = target;\n\t            while (!func(now) && now !== null) {\n\t                now = now.parentNode;\n\t            }\n\t\n\t            return now;\n\t        }\n\t\n\t        /**\n\t         * Generates a unique id\n\t         * @return {String}\n\t         */\n\t\n\t    }, {\n\t        key: \"guid\",\n\t        value: function guid() {\n\t            function s4() {\n\t                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t            }\n\t\n\t            return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + (s4() + s4() + s4());\n\t        }\n\t\n\t        /**\n\t         * Detects scrollbar width\n\t         * @see http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: \"getScrollBarWidth\",\n\t        value: function getScrollBarWidth() {\n\t            var doc = global.document;\n\t            var inner = doc.createElement('p');\n\t\n\t            inner.style.width = \"100%\";\n\t            inner.style.height = \"200px\";\n\t\n\t            var outer = doc.createElement('div');\n\t            outer.style.position = \"absolute\";\n\t            outer.style.top = \"0px\";\n\t            outer.style.left = \"0px\";\n\t            outer.style.visibility = \"hidden\";\n\t            outer.style.width = \"200px\";\n\t            outer.style.height = \"150px\";\n\t            outer.style.overflow = \"hidden\";\n\t            outer.appendChild(inner);\n\t\n\t            doc.body.appendChild(outer);\n\t            var w1 = inner.offsetWidth;\n\t            outer.style.overflow = 'scroll';\n\t            var w2 = inner.offsetWidth;\n\t            if (w1 === w2) {\n\t                w2 = outer.clientWidth;\n\t            }\n\t            doc.body.removeChild(outer);\n\t\n\t            return w1 - w2;\n\t        }\n\t\n\t        /**\n\t         * Run an event once\n\t         * @param {String} ev\n\t         * @param {HTMLElement|HTMLDocument} target\n\t         * @param {Function} func\n\t         * @param {boolean} [capture]\n\t         * @return Function created listener\n\t         */\n\t\n\t    }, {\n\t        key: \"addEventOnce\",\n\t        value: function addEventOnce(ev, target, func, capture) {\n\t            var thisFunction = function thisFunction(event) {\n\t                func(event, func);\n\t                target.removeEventListener(ev, thisFunction, capture);\n\t            };\n\t            target.addEventListener(ev, thisFunction, capture);\n\t            return thisFunction;\n\t        }\n\t\n\t        /**\n\t         * Checks if an element is visible\n\t         * @param {HTMLElement} element\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: \"isVisible\",\n\t        value: function isVisible(element) {\n\t            return element.offsetWidth > 0 && element.offsetHeight > 0;\n\t        }\n\t\n\t        /**\n\t         * Creates a camelCaseRepresentation of a dashed string\n\t         * @param {String} str\n\t         * @returns String\n\t         */\n\t\n\t    }, {\n\t        key: \"dashToCamelCase\",\n\t        value: function dashToCamelCase(str) {\n\t            return str.replace(/-([a-z])/g, function (g) {\n\t                return g[1].toUpperCase();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates a copy of `input`\n\t         * @param {*} input\n\t         * @return *\n\t         */\n\t\n\t    }, {\n\t        key: \"copy\",\n\t        value: function copy(input) {\n\t            return JSON.parse(JSON.stringify(input));\n\t        }\n\t\n\t        /**\n\t         * Reads options from element (data attributes) and applies to base\n\t         * @param {HTMLElement} element\n\t         * @param {Object} base\n\t         * @return {Object}\n\t         */\n\t\n\t    }, {\n\t        key: \"applyOptionsFromElement\",\n\t        value: function applyOptionsFromElement(element, base) {\n\t            if (!element) {\n\t                return base;\n\t            }\n\t            var attrs = element.attributes;\n\t            for (var i = 0; i < attrs.length; i++) {\n\t                var attr = attrs[i];\n\t                if (attr) {\n\t                    var s = Util.dashToCamelCase(attr.nodeName.replace('data-', ''));\n\t                    var val = attr.nodeValue;\n\t                    if (base.hasOwnProperty(s)) {\n\t                        // skip functions\n\t                        if (typeof base[s] === 'function') {\n\t                            continue;\n\t                        }\n\t                        if (typeof base[s] === 'boolean') {\n\t                            base[s] = parseInt(val || 1, 10) === 1;\n\t                        } else {\n\t                            base[s] = val;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return base;\n\t        }\n\t\n\t        /**\n\t         * Will position an element directly at given target\n\t         * Is aware of a given collision container to detect edges\n\t         * Will put elementToPosition either to left, center or right edge (prefer right)\n\t         *  and either to bottom or top (prefers bottom)\n\t         *\n\t         * You may overwrite preferred positioned with `centerHorizontal` and `positionTop`\n\t         *\n\t         * @param {HTMLElement|ClientRect} target the target container to align to\n\t         * @param {HTMLElement} elementToPosition the element to position\n\t         * @param {HTMLElement} collisionContainer the outer container to prevent collisions\n\t         * @param {boolean} [centerHorizontal] set true to center element, otherwise it's put on the right border by default\n\t         * @param {boolean} [positionTop] flip top, by default element is positioned to the bottom.\n\t         * @returns {HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: \"setupPositionNearby\",\n\t        value: function setupPositionNearby(target, elementToPosition, collisionContainer, centerHorizontal, positionTop) {\n\t            // determine relative offsets\n\t            var amountTop = 0;\n\t            var amountLeft = 0;\n\t            Util.parentsUntil(target.parentNode, function (el) {\n\t                if (!(el instanceof HTMLElement)) {\n\t                    return false;\n\t                }\n\t                var style = window.getComputedStyle(el);\n\t                if (Util.isPartOfNode(elementToPosition, el)) {\n\t                    if (style && style.position === 'relative') {\n\t                        amountTop += el.offsetTop || 0;\n\t                        amountLeft += el.offsetLeft || 0;\n\t                    }\n\t                    return false;\n\t                }\n\t                return true;\n\t            });\n\t\n\t            var targetPosition = target instanceof HTMLElement ? target.getBoundingClientRect() : target;\n\t            var elementRect = elementToPosition.getBoundingClientRect();\n\t            var colRect = collisionContainer.getBoundingClientRect();\n\t            var targetTop = targetPosition.top - amountTop;\n\t            var targetRight = targetPosition.right;\n\t            var isCollisionTop = targetTop - elementRect.height <= 0;\n\t            var isCollisionBottom = window.innerHeight < targetTop + amountTop + targetPosition.height + elementRect.height;\n\t            var isCollisionLeft = targetRight < elementRect.width;\n\t            var targetLeft = targetPosition.left;\n\t            var isCollisionRight = targetLeft + elementRect.width > colRect.width;\n\t            var classList = elementToPosition.classList;\n\t\n\t            classList.remove(COL_RIGHT_CLASS);\n\t            classList.remove(COL_LEFT_CLASS);\n\t            classList.remove(COL_BOTTOM_CLASS);\n\t\n\t            var calcTop = void 0;\n\t            var calcLeft = void 0;\n\t            if (isCollisionLeft && !isCollisionRight) {\n\t                // put element to left if collision with left\n\t                calcLeft = targetPosition.left - colRect.left - amountLeft + \"px\";\n\t                classList.add(COL_LEFT_CLASS);\n\t            } else {\n\t                // maybe center if no collision with either side\n\t                var rightPosition = targetRight - elementRect.width - colRect.left - amountLeft + \"px\";\n\t                var leftCentered = (targetLeft + targetPosition.width / 2 - elementRect.width / 2 || 0) - colRect.left;\n\t                var collisionCentered = leftCentered + elementRect.width > colRect.width;\n\t                if (centerHorizontal && !collisionCentered) {\n\t                    calcLeft = leftCentered + \"px\";\n\t                } else {\n\t                    classList.add(COL_RIGHT_CLASS);\n\t                    calcLeft = rightPosition;\n\t                }\n\t            }\n\t\n\t            if (isCollisionBottom || positionTop && !isCollisionTop) {\n\t                // Put Element on top if collision\n\t                calcTop = targetTop - elementRect.height - colRect.top + \"px\";\n\t                classList.add(COL_BOTTOM_CLASS);\n\t            } else {\n\t                calcTop = targetTop + targetPosition.height - colRect.top + \"px\";\n\t            }\n\t\n\t            elementToPosition.style.cssText = \"top:\" + calcTop + \";left:\" + calcLeft + \";\";\n\t\n\t            return elementToPosition;\n\t        }\n\t\n\t        /**\n\t         * Brings a given element into viewport\n\t         * @param {HTMLElement} el\n\t         * @param {int|function}[optionalOffset]\n\t         */\n\t\n\t    }, {\n\t        key: \"scrollToElement\",\n\t        value: function scrollToElement(el, optionalOffset) {\n\t            el.scrollIntoView();\n\t            var thisOffset = optionalOffset;\n\t            // optionally use a additional scrollDif\n\t            if (thisOffset) {\n\t                if (typeof thisOffset === 'function') {\n\t                    thisOffset = optionalOffset();\n\t                }\n\t                if (thisOffset > 0) {\n\t                    var scrolledY = window.pageYOffset;\n\t                    if (scrolledY) {\n\t                        window.scroll(0, scrolledY - thisOffset);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Util;\n\t}();\n\t\n\texports.default = Util;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\the MIT License (MIT)\n\tn\topyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\tn\termission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tn\the above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\tn\tn\tn\tn\tn\tn\tn\tn\tn\t\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// we attach global settings to global once because settings might be shared a lot of times trough the application\n\t// Maybe find a better way to handle that scenario\n\tif (!global.FLEXCSS_GLOBAL_SETTINGS) {\n\t    (function () {\n\t        global.FLEXCSS_GLOBAL_SETTINGS = {\n\t            // defined breakpoint for small devices < n\n\t            smallBreakpoint: 768,\n\t            // nodes that should be updated when no scrollbar is expected\n\t            scrollbarUpdateNodes: global.document.body !== null ? [global.document.body] : [],\n\t            // additional Delay until darkener is fully hidden\n\t            darkenerFadeDelay: 100,\n\t            // class that is added if canvas has been toggled\n\t            canvasToggledClass: 'toggled-canvas'\n\t        };\n\t\n\t        global.FLEXCSS_CONST_IS_IOS = null;\n\t\n\t        global.FLEXCSS_CONST_IS_TOUCH = null;\n\t\n\t        global.FLEXCSS_CONST_IS_IE = null;\n\t\n\t        global.FLEXCSS_CONST_TAB_EVENT = 'click';\n\t\n\t        global.FLEXCSS_IS_SMALL_SCREEN = false;\n\t\n\t        var init = function init() {\n\t            // Measure scrollbar width\n\t            global.FLEXCSS_CONST_SCROLLBAR_WIDTH = _Util2.default.getScrollBarWidth();\n\t            // detect right transition end event\n\t            global.FLEXCSS_CONST_TRANSITION_EVENT = _Util2.default.whichTransitionEndEvent();\n\t        };\n\t\n\t        if (global.document.readyState !== 'loading') {\n\t            init();\n\t        } else {\n\t            // it's possible that global.document.body is not available if the document is not\n\t            // loaded completely\n\t            document.addEventListener('DOMContentLoaded', function () {\n\t                init();\n\t            });\n\t        }\n\t    })();\n\t}\n\t\n\t/**\n\t * Utility class that setups global settings\n\t */\n\t\n\tvar Settings = function () {\n\t    function Settings() {\n\t        _classCallCheck(this, Settings);\n\t    }\n\t\n\t    _createClass(Settings, null, [{\n\t        key: 'setup',\n\t\n\t\n\t        /**\n\t         * Setup global settings, overwrite default values\n\t         * @param {Object} settings\n\t         */\n\t        value: function setup(settings) {\n\t            Object.assign(global.FLEXCSS_GLOBAL_SETTINGS, settings);\n\t        }\n\t\n\t        /**\n\t         * Access to global settings\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'get',\n\t        value: function get() {\n\t            return global.FLEXCSS_GLOBAL_SETTINGS;\n\t        }\n\t\n\t        /**\n\t         * Detects a IOS Device, caches subsequent calls\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isIosDevice',\n\t        value: function isIosDevice() {\n\t            if (!global.FLEXCSS_CONST_IS_IOS) {\n\t                global.FLEXCSS_CONST_IS_IOS = global.navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n\t            }\n\t\n\t            return global.FLEXCSS_CONST_IS_IOS;\n\t        }\n\t\n\t        /**\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isSmallScreen',\n\t        value: function isSmallScreen() {\n\t            return window.innerWidth < Settings.get().smallBreakpoint;\n\t        }\n\t\n\t        /**\n\t         * Detects a touch device, caches subsequent calls\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isTouchDevice',\n\t        value: function isTouchDevice() {\n\t            if (!global.FLEXCSS_CONST_IS_TOUCH) {\n\t                global.FLEXCSS_CONST_IS_TOUCH = 'ontouchstart' in window || !!global.navigator.msMaxTouchPoints;\n\t            }\n\t            return global.FLEXCSS_CONST_IS_TOUCH;\n\t        }\n\t\n\t        /**\n\t         * Checks if current browser is Internet Explorer\n\t         * @returns {boolean|*}\n\t         */\n\t\n\t    }, {\n\t        key: 'isIE',\n\t        value: function isIE() {\n\t            if (!global.FLEXCSS_CONST_IS_IE) {\n\t                global.FLEXCSS_CONST_IS_IE = \"ActiveXObject\" in window;\n\t            }\n\t            return global.FLEXCSS_CONST_IS_IE;\n\t        }\n\t\n\t        /**\n\t         * @returns {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTransitionEvent',\n\t        value: function getTransitionEvent() {\n\t            return global.FLEXCSS_CONST_TRANSITION_EVENT;\n\t        }\n\t\n\t        /**\n\t         * @returns {int}\n\t         */\n\t\n\t    }, {\n\t        key: 'getScrollbarWidth',\n\t        value: function getScrollbarWidth() {\n\t            return global.FLEXCSS_CONST_SCROLLBAR_WIDTH;\n\t        }\n\t\n\t        /**\n\t         * @returns {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTabEvent',\n\t        value: function getTabEvent() {\n\t            return global.FLEXCSS_CONST_TAB_EVENT;\n\t        }\n\t    }]);\n\t\n\t    return Settings;\n\t}();\n\t\n\texports.default = Settings;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/* global CustomEvent */\n\t\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t// polyfill for custom events to make thinks work in IE\n\t// The needed polyfill is so small that I embedded it here\n\t(function poly() {\n\t    if (!global.CustomEvent || typeof global.CustomEvent !== 'function') {\n\t        var _CustomEvent = function CustomEvent(event, params) {\n\t            var thisParams = params || {\n\t                bubbles: false,\n\t                cancelable: false,\n\t                detail: undefined\n\t            };\n\t            var evt = document.createEvent(\"CustomEvent\");\n\t            evt.initCustomEvent(event, thisParams.bubbles, thisParams.cancelable, thisParams.detail);\n\t            return evt;\n\t        };\n\t        _CustomEvent.prototype = global.Event.prototype;\n\t        global.CustomEvent = _CustomEvent;\n\t    }\n\t})();\n\t/**\n\t * Simpler Event dispatching\n\t */\n\t\n\tvar EventHandler = function () {\n\t\n\t    /**\n\t     * @param {HTMLElement} target\n\t     * @param {String} name\n\t     */\n\t\n\t    function EventHandler(target, name) {\n\t        _classCallCheck(this, EventHandler);\n\t\n\t        this.target = target;\n\t        this.defaultOptions = {\n\t            bubbles: true,\n\t            cancelable: true\n\t        };\n\t\n\t        this.name = name;\n\t    }\n\t\n\t    /**\n\t     * Set more options\n\t     * @param {Object} options\n\t     * @returns {EventHandler}\n\t     */\n\t\n\t\n\t    _createClass(EventHandler, [{\n\t        key: \"withOptions\",\n\t        value: function withOptions(options) {\n\t            Object.assign(this.defaultOptions, options || {});\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Call with the originalEvent\n\t         * @param {Event} e\n\t         * @returns {EventHandler}\n\t         */\n\t\n\t    }, {\n\t        key: \"withOriginal\",\n\t        value: function withOriginal(e) {\n\t            return this.withDetail({\n\t                originalEvent: e\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Extends the detail part of the event\n\t         * @param {Object} o\n\t         * @returns {EventHandler}\n\t         */\n\t\n\t    }, {\n\t        key: \"withDetail\",\n\t        value: function withDetail(o) {\n\t            if (!this.defaultOptions.detail) {\n\t                this.defaultOptions.detail = {};\n\t            }\n\t            Object.assign(this.defaultOptions.detail, o);\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * @returns {CustomEvent}\n\t         */\n\t\n\t    }, {\n\t        key: \"fire\",\n\t        value: function fire() {\n\t            var e = new CustomEvent(this.name, this.defaultOptions);\n\t            if (this.target) {\n\t                this.target.dispatchEvent(e);\n\t            }\n\t            return e;\n\t        }\n\t    }]);\n\t\n\t    return EventHandler;\n\t}();\n\t\n\tvar Event = function () {\n\t    function Event() {\n\t        _classCallCheck(this, Event);\n\t    }\n\t\n\t    _createClass(Event, null, [{\n\t        key: \"dispatch\",\n\t\n\t        /**\n\t         * Prepares to dispatch a custom event (without firing)\n\t         * @param {HTMLElement} target\n\t         * @param {String} name\n\t         * @returns {EventHandler}\n\t         */\n\t        value: function dispatch(target, name) {\n\t            return new EventHandler(target, name);\n\t        }\n\t\n\t        /**\n\t         * Dispatches a custom event and fires it directly\n\t         * @param {HTMLElement} target\n\t         * @param {String} name\n\t         * @param {Object} [options]\n\t         * @returns {CustomEvent}\n\t         */\n\t\n\t    }, {\n\t        key: \"dispatchAndFire\",\n\t        value: function dispatchAndFire(target, name, options) {\n\t            return new EventHandler(target, name).withOptions(options).fire();\n\t        }\n\t    }]);\n\t\n\t    return Event;\n\t}();\n\t\n\texports.default = Event;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Widget\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t/**\n\t * A Widget provides async content on a specific target (e.g. a modal link)\n\t */\n\t\n\tvar Widget = function () {\n\t\n\t  /**\n\t   * Creates a new Widget\n\t   * @param [element], optional define the content of widget\n\t   */\n\t\n\t  function Widget(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Widget);\n\t\n\t    /**\n\t     *\n\t     * @type {Promise}\n\t     */\n\t    this.asyncContent = null;\n\t\n\t    /**\n\t     * @type {boolean}\n\t     */\n\t    this._isWidget = true;\n\t\n\t    if (element) {\n\t      /**\n\t       * @type {HTMLElement}\n\t       */\n\t      this.element = element instanceof HTMLElement ? element : global.document.getElementById(element);\n\t      if (this.element) {\n\t        this.element.hfWidgetInstance = this;\n\t        this.setAsync(function () {\n\t          return new Promise(function (s) {\n\t            s(_this.element);\n\t          });\n\t        });\n\t      } else {\n\t        throw new Error('Could not found element with ID: ' + element);\n\t      }\n\t    }\n\t    /**\n\t     * The final resulted content that a widget did create (e.g. a modal container)\n\t     * @type {HTMLElement}\n\t     */\n\t    this.finalContent = null;\n\t  }\n\t\n\t  /**\n\t   *\n\t   * @returns {Promise}\n\t   */\n\t\n\t\n\t  _createClass(Widget, [{\n\t    key: 'getAsync',\n\t    value: function getAsync() {\n\t      return this.asyncContent();\n\t    }\n\t\n\t    /**\n\t     * @param {Function.<Promise>} async\n\t     * @returns {Widget}\n\t     */\n\t\n\t  }, {\n\t    key: 'setAsync',\n\t    value: function setAsync(async) {\n\t      this.asyncContent = async;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {HTMLElement}\n\t     */\n\t\n\t  }, {\n\t    key: 'getFinalContent',\n\t    value: function getFinalContent() {\n\t      return this.finalContent;\n\t    }\n\t\n\t    /**\n\t     * @param {HTMLElement} element\n\t     * @returns {Widget}\n\t     */\n\t\n\t  }, {\n\t    key: 'setElement',\n\t    value: function setElement(element) {\n\t      this.element = element;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Destroys the generated content of this widget\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      if (this.finalContent && this.finalContent.parentNode) {\n\t        this.finalContent.parentNode.removeChild(this.finalContent);\n\t        return true;\n\t      }\n\t\n\t      delete this.element;\n\t      delete this.asyncContent;\n\t      delete this.finalContent;\n\t\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Will find a widget on an Element\n\t     * @param {HTMLElement} element\n\t     * @returns {Widget|undefined}\n\t     */\n\t\n\t  }], [{\n\t    key: 'findWidget',\n\t    value: function findWidget(element) {\n\t      return element ? element.hfWidgetInstance : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a given object is an instance\n\t     * @param {Object} self\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isWidget',\n\t    value: function isWidget(self) {\n\t      return self instanceof Widget || (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object' && self.hasOwnProperty('_isWidget');\n\t    }\n\t  }]);\n\t\n\t  return Widget;\n\t}();\n\t\n\texports.default = Widget;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */,\n/* 6 */,\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EVENT_AFTER_FIXED_REMOVE = exports.EVENT_BEFORE_FIXED_ADD = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _debounce = __webpack_require__(10);\n\t\n\tvar _debounce2 = _interopRequireDefault(_debounce);\n\t\n\tvar _Event = __webpack_require__(3);\n\t\n\tvar _Event2 = _interopRequireDefault(_Event);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CLS_FIXED_WINDOW = 'fixed-window-open';\n\t\n\tvar EVENT_BEFORE_FIXED_ADD = exports.EVENT_BEFORE_FIXED_ADD = 'flexcss.fixedWindow.beforeAdd';\n\tvar EVENT_AFTER_FIXED_REMOVE = exports.EVENT_AFTER_FIXED_REMOVE = 'flexcss.fixedWindow.afterRemove';\n\t\n\t/**\n\t * @type {FixedWindow}\n\t */\n\tvar fixedWindowInstance = void 0;\n\t\n\tvar FixedWindow = function () {\n\t    function FixedWindow() {\n\t        _classCallCheck(this, FixedWindow);\n\t\n\t        this.widgets = [];\n\t        this.currentScrollTop = 0;\n\t        this.fixedScreenConstraints = [];\n\t        this.windowWidth = 0;\n\t        this.isFixedWindowActive = false;\n\t        this.touchListener = null;\n\t    }\n\t\n\t    /**\n\t     * Adds a constraint to detect if the window needs to be changed when the screensize changes\n\t     *\n\t     * @param {Function} widget\n\t     * @param {Function} fixedBreakpointFn gets a width argument, return true to open a window\n\t     */\n\t\n\t\n\t    _createClass(FixedWindow, [{\n\t        key: 'addScreenConstraint',\n\t        value: function addScreenConstraint(widget, fixedBreakpointFn) {\n\t            this.fixedScreenConstraints[widget] = fixedBreakpointFn;\n\t        }\n\t\n\t        /**\n\t         * @returns {null|DestroyableWidget}\n\t         */\n\t\n\t    }, {\n\t        key: 'getCurrentWidget',\n\t        value: function getCurrentWidget() {\n\t            return this.widgets.length > 0 ? this.widgets[this.widgets.length - 1] : null;\n\t        }\n\t\n\t        /**\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_checkFixedNeeded',\n\t        value: function _checkFixedNeeded() {\n\t            var _this = this;\n\t\n\t            if (this.widgets.length === 0) {\n\t                return;\n\t            }\n\t            var widgets = new Set(this.widgets);\n\t            var widgetsThatRequireFixedWindow = Array.from(widgets).some(function (_ref) {\n\t                var widget = _ref.widget;\n\t\n\t                return _this.fixedScreenConstraints[widget] && _this.fixedScreenConstraints[widget](_this.windowWidth);\n\t            });\n\t            if (!widgetsThatRequireFixedWindow) {\n\t                this._removeFixedContainer();\n\t            } else {\n\t                this._addFixedContainer();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_addFixedContainer',\n\t        value: function _addFixedContainer() {\n\t            var _this2 = this;\n\t\n\t            if (this.isFixedWindowActive) {\n\t                return;\n\t            }\n\t            _Event2.default.dispatchAndFire(global.document, EVENT_BEFORE_FIXED_ADD, {\n\t                detail: this.getCurrentWidget()\n\t            });\n\t            // this causes layout and should be optimized\n\t            // At lest we write in a batch later\n\t            _Settings2.default.get().scrollbarUpdateNodes.map(function (n) {\n\t                var foundProperty = 'paddingRight';\n\t                var direction = 1;\n\t                var node = n;\n\t                if (n instanceof Array) {\n\t                    var _n = _slicedToArray(n, 3);\n\t\n\t                    var whatNode = _n[0];\n\t                    var property = _n[1];\n\t                    var d = _n[2];\n\t\n\t                    foundProperty = property;\n\t                    node = whatNode;\n\t                    direction = d || 1;\n\t                }\n\t                return {\n\t                    node: node,\n\t                    property: foundProperty,\n\t                    value: parseInt(global.getComputedStyle(node)[foundProperty], 10) + (!node.__fixedWindowMod__ ? _Settings2.default.getScrollbarWidth() * direction : 0) + 'px'\n\t                };\n\t            }).forEach(function (d) {\n\t                d.node.__fixedWindowMod__ = true;\n\t                d.node.style[d.property] = d.value;\n\t            });\n\t\n\t            this.touchListener = function (e) {\n\t                e.preventDefault();\n\t            };\n\t\n\t            var shouldNotMove = false;\n\t            this.touchStartListener = function (e) {\n\t                var _getCurrentWidget = _this2.getCurrentWidget();\n\t\n\t                var element = _getCurrentWidget.element;\n\t\n\t                if (_Util2.default.isPartOfNode(e.target, element)) {\n\t                    if (element.scrollTop === 0) {\n\t                        element.scrollTop = 1;\n\t                        shouldNotMove = true;\n\t                    } else if (element.scrollHeight === element.scrollTop + element.offsetHeight) {\n\t                        shouldNotMove = true;\n\t                        element.scrollTop -= 1;\n\t                    }\n\t                }\n\t            };\n\t\n\t            global.addEventListener('touchmove', this.touchListener);\n\t            global.document.body.addEventListener('touchstart', this.touchStartListener);\n\t\n\t            this.touchMoveListener = function (e) {\n\t                var _getCurrentWidget2 = _this2.getCurrentWidget();\n\t\n\t                var element = _getCurrentWidget2.element;\n\t\n\t                if (_Util2.default.isPartOfNode(e.target, element)) {\n\t                    if (!shouldNotMove) {\n\t                        e.stopImmediatePropagation();\n\t                    }\n\t                    shouldNotMove = false;\n\t                }\n\t            };\n\t            global.document.body.addEventListener('touchmove', this.touchMoveListener);\n\t\n\t            global.document.documentElement.classList.add(CLS_FIXED_WINDOW);\n\t            this.isFixedWindowActive = true;\n\t        }\n\t\n\t        /**\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_removeFixedContainer',\n\t        value: function _removeFixedContainer() {\n\t            if (this.isFixedWindowActive) {\n\t                // cleanup event listeners\n\t                global.removeEventListener('touchmove', this.touchListener);\n\t                global.document.body.removeEventListener('touchstart', this.touchStartListener);\n\t                global.document.body.removeEventListener('touchmove', this.touchMoveListener);\n\t\n\t                // reset scrollbar nodes\n\t                _Settings2.default.get().scrollbarUpdateNodes.forEach(function (node) {\n\t                    if (node instanceof Array) {\n\t                        var _node = _slicedToArray(node, 2);\n\t\n\t                        var whatNode = _node[0];\n\t                        var property = _node[1];\n\t\n\t                        delete whatNode.__fixedWindowMod__;\n\t                        whatNode.style[property] = '';\n\t                    } else {\n\t                        delete node.__fixedWindowMod__;\n\t                        node.style.paddingRight = '';\n\t                    }\n\t                });\n\t                global.document.documentElement.classList.remove(CLS_FIXED_WINDOW);\n\t                _Event2.default.dispatchAndFire(global.document, EVENT_AFTER_FIXED_REMOVE);\n\t                this.isFixedWindowActive = false;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Will close a window when no widgets are opened that need one\n\t         */\n\t\n\t    }, {\n\t        key: 'resizeListener',\n\t        value: function resizeListener() {\n\t            this.windowWidth = global.innerWidth;\n\t            this._checkFixedNeeded();\n\t        }\n\t\n\t        /**\n\t         * @returns {FixedWindow}\n\t         */\n\t\n\t    }, {\n\t        key: 'close',\n\t\n\t\n\t        /**\n\t         * Request a close of the fixed window\n\t         */\n\t        value: function close() {\n\t            this.widgets.pop();\n\t            if (this.widgets.length === 0) {\n\t                this._removeFixedContainer();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Request to open a fixed windows\n\t         * @param {Object|DestroyableWidget} instance\n\t         * @param {HTMLElement} element\n\t         */\n\t\n\t    }, {\n\t        key: 'open',\n\t        value: function open(instance, element) {\n\t            var fixed = false;\n\t            if ((typeof instance === 'undefined' ? 'undefined' : _typeof(instance)) === 'object') {\n\t                var widget = instance.constructor;\n\t                var fixedWidget = this.fixedScreenConstraints[instance.constructor];\n\t                if (widget && fixedWidget) {\n\t                    fixed = fixedWidget(this.windowWidth);\n\t                }\n\t                var length = this.widgets.length;\n\t                this.widgets.push({\n\t                    widget: widget,\n\t                    element: element\n\t                });\n\t                // open a new window if there is no window active\n\t                if (length === 0) {\n\t                    if (fixed) {\n\t                        this._addFixedContainer();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }], [{\n\t        key: 'getInstance',\n\t        value: function getInstance() {\n\t            if (!fixedWindowInstance) {\n\t                fixedWindowInstance = new FixedWindow();\n\t                fixedWindowInstance.windowWidth = global.innerWidth;\n\t                var eventHandler = fixedWindowInstance.resizeListener.bind(fixedWindowInstance);\n\t                global.addEventListener('resize', (0, _debounce2.default)(eventHandler, 500));\n\t                global.addEventListener('orientationchange', eventHandler);\n\t            }\n\t            return fixedWindowInstance;\n\t        }\n\t    }]);\n\t\n\t    return FixedWindow;\n\t}();\n\n\texports.default = FixedWindow;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EVENT_MODAL_ASYNC_TARGET_LOADED = exports.EVENT_MODAL_INIT = exports.EVENT_MODAL_OPENED = exports.EVENT_MODAL_BEFORE_CLOSED = exports.EVENT_MODAL_CLOSED = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\the MIT License (MIT)\n\tn\topyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\tn\termission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * copies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tn\the above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\tn\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tn\tn\tn\tn\tn\t\n\t/*!\n\t * FlexCss.Modal\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t/* global KeyboardEvent */\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Event = __webpack_require__(3);\n\t\n\tvar _Event2 = _interopRequireDefault(_Event);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tvar _FixedWindow = __webpack_require__(7);\n\t\n\tvar _FixedWindow2 = _interopRequireDefault(_FixedWindow);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HTML_ELEMENT = global.document.documentElement;\n\tvar KEY_ESC = 27;\n\t/* Attribute Names */\n\tvar ATTR_CREATE_NEW = 'data-new-instance';\n\tvar ATTR_CLOSE = 'data-close-modal';\n\tvar ATTR_NAME = 'data-modal';\n\t\n\t/* Class names */\n\tvar CLS_CONTAINER_CURRENT = 'front';\n\tvar CLS_OPEN = 'open';\n\tvar CLS_CURRENT = 'current';\n\tvar CLS_PART_OF_STACK = 'part-of-stack';\n\tvar CLS_MODAL_OPEN = 'modal-open';\n\tvar CLS_MODAL_CONTAINER = 'modal-container';\n\tvar CLS_ANIM_END = 'modal-anim-end';\n\tvar CLS_LOADER_CONTAINER = 'loader-container';\n\tvar CLS_LOADER = 'loader';\n\t\n\t/* Events */\n\t\n\t/**\n\t * Event triggered when modal is closed\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_CLOSED = exports.EVENT_MODAL_CLOSED = 'flexcss.modal.closed';\n\t/**\n\t * Event triggered before a modal is closed, cancelable\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_BEFORE_CLOSED = exports.EVENT_MODAL_BEFORE_CLOSED = 'flexcss.modal.beforeClose';\n\t/**\n\t * Event triggered when a modal is opened\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_OPENED = exports.EVENT_MODAL_OPENED = 'flexcss.modal.opened';\n\t\n\t/**\n\t * Event triggered when modal is initilized, called on target\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_INIT = exports.EVENT_MODAL_INIT = 'flexcss.modal.init';\n\t\n\t/**\n\t * Triggered when the content of an async modal on a target is loaded, called on target\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_ASYNC_TARGET_LOADED = exports.EVENT_MODAL_ASYNC_TARGET_LOADED = 'flexcss.modal.asyncTargetLoaded';\n\t\n\t/**\n\t * A Modal Implementation\n\t */\n\t\n\tvar Modal = function () {\n\t    function Modal(DelegateContainer, options) {\n\t        _classCallCheck(this, Modal);\n\t\n\t        var doc = global.document;\n\t        var container = DelegateContainer instanceof HTMLElement ? DelegateContainer : doc.getElementById(DelegateContainer);\n\t\n\t        // Instance vars:\n\t        if (!container) {\n\t            throw new Error('Could not found container element by given ID/Element: ' + DelegateContainer);\n\t        }\n\t\n\t        this.currentOpen = null;\n\t\n\t        this.loading = false;\n\t\n\t        this.container = container;\n\t\n\t        /**\n\t         * Default Options\n\t         */\n\t        this.options = {\n\t            classNames: 'modal',\n\t            closeOnEscape: true,\n\t            closeOnBackgroundClick: true,\n\t            destroyOnFinish: false,\n\t            fixedContainer: true,\n\t            containerClassNames: ''\n\t        };\n\t\n\t        Object.assign(this.options, options);\n\t\n\t        // Container where events are delegated\n\t        this.eventContainer = null;\n\t        this.eventFunction = null;\n\t\n\t        this.dataMainPageContainer = global.document.body;\n\t\n\t        this.currentScrollTop = 0;\n\t\n\t        this.modalContainer = null;\n\t\n\t        // Destroy full modal instance when no dialogs are bind to?\n\t        // Otherwise container is recycled\n\t        this.destroyOnFinish = this.options.destroyOnFinish;\n\t    }\n\t\n\t    /**\n\t     * Removes this modal from global stack\n\t     * Will handle fixing main html element too\n\t     * @private\n\t     * @param n\n\t     */\n\t\n\t\n\t    _createClass(Modal, [{\n\t        key: '_removeModalFromStack',\n\t        value: function _removeModalFromStack(n) {\n\t            var t = Modal._modalInstances.indexOf(n);\n\t            if (t > -1) {\n\t                Modal._modalInstances.splice(t, 1);\n\t                _FixedWindow2.default.getInstance().close();\n\t                HTML_ELEMENT.classList.remove(CLS_MODAL_OPEN);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Modal container that contains all `stacked` modals for this instance\n\t         * @returns {HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: 'getModalContainer',\n\t        value: function getModalContainer() {\n\t            return this.modalContainer;\n\t        }\n\t\n\t        /**\n\t         * Closes the current open modal of this stack\n\t         * @params [e], optional event\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'close',\n\t        value: function close(e) {\n\t            var self = this;\n\t\n\t            var options = self.currentOpen ? _Util2.default.applyOptionsFromElement(self.currentOpen, _Util2.default.copy(self.options)) : self.options;\n\t\n\t            // close only on keyboard if instance should\n\t            if (!options.closeOnEscape && e instanceof KeyboardEvent) {\n\t                return false;\n\t            }\n\t\n\t            // close only on background if instance should\n\t            if (!options.closeOnBackgroundClick && e && e.type === _Settings2.default.getTabEvent() && !e.target.hasAttribute(ATTR_CLOSE)) {\n\t                return false;\n\t            }\n\t\n\t            // if an instance is currently loading, prevent from closing\n\t            if (self.loading) {\n\t                return false;\n\t            }\n\t\n\t            if (e) {\n\t                e.preventDefault();\n\t            }\n\t\n\t            if (self.currentOpen) {\n\t                // dispatch beforeClose event, if prevented prevent modal from closing\n\t                var ev = _Event2.default.dispatchAndFire(self.currentOpen, EVENT_MODAL_BEFORE_CLOSED);\n\t                if (ev.defaultPrevented) {\n\t                    return false;\n\t                }\n\t\n\t                this._finishState(self.currentOpen);\n\t                // if there is an previous modal\n\t                if (self.currentOpen.prevModal) {\n\t                    // switch to the next modal\n\t                    return self.switchModals(self.currentOpen.prevModal, self.currentOpen.prevModal.prevModal || null);\n\t                }\n\t\n\t                // finally trigger closed event\n\t                _Event2.default.dispatch(self.currentOpen, EVENT_MODAL_CLOSED).withOriginal(e).fire();\n\t            }\n\t            self._removeModalFromStack(self.currentOpen);\n\t\n\t            // Full stack closed:\n\t            self.currentOpen = null;\n\t            if (self.modalContainer) {\n\t                // setup next open\n\t                var lastContainer = Modal._modalInstances[Modal._modalInstances.length - 1],\n\t                    classList = self.modalContainer.classList;\n\t                classList.remove(CLS_CONTAINER_CURRENT);\n\t                classList.remove(CLS_OPEN);\n\t                // Remove all current classes from child-nodes\n\t                for (var i = 0; i < self.modalContainer.childNodes.length; i++) {\n\t                    var node = self.modalContainer.childNodes[i],\n\t                        cl = node.classList;\n\t                    // remove applied styles\n\t                    self._finishState(node);\n\t                    cl.remove(CLS_CURRENT);\n\t                    cl.remove(CLS_PART_OF_STACK);\n\t                }\n\t                if (lastContainer) {\n\t                    lastContainer.parentNode.classList.add(CLS_CONTAINER_CURRENT);\n\t                }\n\t            }\n\t\n\t            if (self.destroyOnFinish) {\n\t                self.destroy();\n\t            }\n\t            return self;\n\t        }\n\t\n\t        /**\n\t         * Resets a target when newly initilizes\n\t         * @param target\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_finishState',\n\t        value: function _finishState(target) {\n\t            target.classList.remove(CLS_ANIM_END);\n\t        }\n\t\n\t        /**\n\t         * Handler called when a Modal has finished an animation\n\t         * @param e\n\t         * @param self\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_finishAnim',\n\t        value: function _finishAnim(e, self) {\n\t            e.target.classList.add(CLS_ANIM_END);\n\t            e.target.removeEventListener(e.type, self, true);\n\t        }\n\t\n\t        /**\n\t         * Brings the given modal to front\n\t         * @param co\n\t         * @param last\n\t         */\n\t\n\t    }, {\n\t        key: 'switchModals',\n\t        value: function switchModals(co, last) {\n\t            co.prevModal = last;\n\t            Modal._modalInstances.push(co);\n\t            _FixedWindow2.default.getInstance().open(this, this.modalContainer);\n\t            if (last) {\n\t                this._finishState(last);\n\t                _Util2.default.prefixedAnimateEvent(last, 'AnimationEnd', this._finishAnim);\n\t                last.classList.add(CLS_PART_OF_STACK);\n\t            }\n\t            // set new currentOpen\n\t            this.currentOpen = co;\n\t\n\t            // bring current container to the front\n\t            var instances = Modal._modalInstances;\n\t\n\t            for (var m = 0; m < instances.length; m++) {\n\t                instances[m].parentNode.classList.remove(CLS_CONTAINER_CURRENT);\n\t            }\n\t            this.modalContainer.classList.add(CLS_CONTAINER_CURRENT);\n\t            // remove animations if animations has been completed, fixes various bugs:\n\t            // - fixes nested scrolling element issue in iOS Browsers / Mobile-Safari\n\t            _Util2.default.prefixedAnimateEvent(co, 'AnimationEnd', this._finishAnim);\n\t\n\t            for (var i = 0; i < this.modalContainer.childNodes.length; i++) {\n\t                var n = this.modalContainer.childNodes[i],\n\t                    isCurrent = n.classList.contains(CLS_CURRENT);\n\t                if (n === co) {\n\t                    co.classList.add(CLS_CURRENT);\n\t                    co.classList.remove(CLS_PART_OF_STACK);\n\t                    this._finishState(co);\n\t                } else {\n\t                    n.classList.remove(CLS_CURRENT);\n\t                    if (isCurrent) {\n\t                        this._removeModalFromStack(n);\n\t                        _Event2.default.dispatchAndFire(n, EVENT_MODAL_CLOSED);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'handleScrollbar',\n\t        value: function handleScrollbar() {\n\t            if (Modal._modalInstances.length === 0) {\n\t                HTML_ELEMENT.classList.add(CLS_MODAL_OPEN);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Creates a Modal and opens it (later)\n\t         * @param e\n\t         * @returns {Promise|boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'createWidget',\n\t        value: function createWidget(e) {\n\t            var self = this;\n\t            if (this.loading) {\n\t                return false;\n\t            }\n\t\n\t            // check if another modal has registered events on this dom path:\n\t            if (e && e.target) {\n\t                var foundInstance = _Util2.default.parentsUntil(e.target, function (node) {\n\t                    return node && node.flexModalInstance;\n\t                });\n\t\n\t                // if another instance has been found, abort\n\t                if (foundInstance !== this.container) {\n\t                    return false;\n\t                }\n\t            }\n\t            var targetContent,\n\t                future,\n\t                widget,\n\t                target,\n\t                hasTarget = true,\n\t                isHtmlElement = e instanceof HTMLElement,\n\t                isWidget = _Widget2.default.isWidget(e);\n\t            if (isHtmlElement || isWidget) {\n\t                if (isHtmlElement) {\n\t                    targetContent = e;\n\t                } else {\n\t                    widget = e;\n\t                    targetContent = widget.element;\n\t                }\n\t            } else {\n\t                target = e.target;\n\t                if (!target) {\n\t                    throw 'Could not find target, did you pass an event, a HTMLElement or an Widget?';\n\t                }\n\t                hasTarget = target.hasAttribute(ATTR_NAME);\n\t                targetContent = target.getAttribute(ATTR_NAME);\n\t                widget = _Widget2.default.findWidget(target);\n\t                if (target.hasAttribute(ATTR_CREATE_NEW) && !e.newInstance) {\n\t                    var newInstance = new Modal(this.container).setDestroyOnFinish(true);\n\t                    e.newInstance = true;\n\t                    newInstance.fromEvent(e).then(function () {\n\t                        newInstance.registerEvents(newInstance.getModalContainer());\n\t                    });\n\t                    return false;\n\t                }\n\t                if (hasTarget) {\n\t                    e.stopImmediatePropagation();\n\t                    e.preventDefault();\n\t                }\n\t            }\n\t\n\t            if (!hasTarget) {\n\t                return false;\n\t            }\n\t\n\t            var modalContainerClasses = this.modalContainer ? this.modalContainer.classList : [];\n\t\n\t            // lazy create modal container\n\t            if (!this.modalContainer) {\n\t                this.modalContainer = global.document.createElement('div');\n\t                this.modalContainer.className = CLS_MODAL_CONTAINER + ' ' + this.options.containerClassNames + ' ' + CLS_OPEN;\n\t                var closeModalFunction = function closeModalFunction(ce) {\n\t                    if (self.loading) {\n\t                        return false;\n\t                    }\n\t                    if (_Util2.default.isPartOfNode(ce.target, self.currentOpen)) {\n\t                        if (!ce.target.hasAttribute(ATTR_CLOSE)) {\n\t                            return false;\n\t                        }\n\t                    }\n\t                    self.close(ce);\n\t                };\n\t\n\t                this.modalContainer.addEventListener(_Settings2.default.getTabEvent(), closeModalFunction, false);\n\t\n\t                modalContainerClasses = this.modalContainer.classList;\n\t                this.container.appendChild(this.modalContainer);\n\t            } else {\n\t                modalContainerClasses.add(CLS_OPEN);\n\t            }\n\t\n\t            var loader = void 0,\n\t                doc = global.document,\n\t                toggleLoader = function toggleLoader(show) {\n\t                if (show) {\n\t                    loader = doc.createElement('div');\n\t                    loader.className = CLS_LOADER_CONTAINER;\n\t                    var loaderLoader = doc.createElement('div');\n\t                    loaderLoader.className = CLS_LOADER;\n\t                    loader.appendChild(loaderLoader);\n\t                    self.modalContainer.appendChild(loader);\n\t                } else {\n\t                    loader.parentNode.removeChild(loader);\n\t                }\n\t            };\n\t\n\t            this.handleScrollbar();\n\t\n\t            modalContainerClasses.add(CLS_CONTAINER_CURRENT);\n\t            modalContainerClasses.add('loading');\n\t            this.loading = true;\n\t            toggleLoader(true);\n\t            var async = widget ? widget.getAsync() : null;\n\t            if (_Widget2.default.isWidget(widget) && async) {\n\t                future = async.then(function (r) {\n\t                    var result;\n\t                    if (r instanceof HTMLElement || r instanceof DocumentFragment) {\n\t                        result = r;\n\t                    } else {\n\t                        // Create container Element:\n\t                        var element = doc.createElement('div');\n\t                        element.className = self.options.classNames;\n\t                        element.innerHTML = r;\n\t                        element.id = _Util2.default.guid();\n\t                        result = element;\n\t                    }\n\t                    widget.finalContent = result;\n\t                    _Event2.default.dispatchAndFire(target, EVENT_MODAL_ASYNC_TARGET_LOADED);\n\t                    return result;\n\t                });\n\t            } else {\n\t                var el = targetContent instanceof HTMLElement || targetContent instanceof DocumentFragment ? targetContent : doc.getElementById(targetContent);\n\t                if (el) {\n\t                    future = new Promise(function (resolve) {\n\t                        resolve(el);\n\t                    });\n\t                } else {\n\t                    throw 'Could not found given modal element (content) with ID: ' + targetContent;\n\t                }\n\t            }\n\t\n\t            _Event2.default.dispatchAndFire(target, EVENT_MODAL_INIT);\n\t\n\t            return future.then(function (thisEl) {\n\t                thisEl.hfWidgetInstance = self;\n\t                self.modalContainer.appendChild(thisEl);\n\t                modalContainerClasses.remove('loading');\n\t                self.loading = false;\n\t                toggleLoader(false);\n\t\n\t                self.open(thisEl, true, e);\n\t\n\t                return thisEl;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Open's an already rendered modal\n\t         * @param {HTMLElement} modal\n\t         * @param {Boolean} [internal], set to true to prevent container management\n\t         * @param {Boolean} [maybeEvent], optional event-object that triggered open\n\t         */\n\t\n\t    }, {\n\t        key: 'open',\n\t        value: function open(modal, internal, maybeEvent) {\n\t\n\t            if (!internal) {\n\t                this.modalContainer.classList.add('open');\n\t                this.handleScrollbar();\n\t            }\n\t            this.switchModals(modal, this.currentOpen);\n\t\n\t            _Event2.default.dispatch(modal, EVENT_MODAL_OPENED).withOriginal(maybeEvent).fire();\n\t        }\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents(delegate) {\n\t            var delegateContainer = delegate || this.container,\n\t                self = this;\n\t            // Modals should always be fixed\n\t            _FixedWindow2.default.getInstance().addScreenConstraint(Modal, function (width) {\n\t                return true;\n\t            });\n\t            // register modal instance so we can detect multiple registrars\n\t            delegateContainer.flexModalInstance = self;\n\t            self.eventFunction = function () {\n\t                self.createWidget.apply(self, arguments);\n\t            };\n\t            delegateContainer.addEventListener(_Settings2.default.getTabEvent(), self.eventFunction, false);\n\t\n\t            self.eventContainer = delegateContainer;\n\t            return self;\n\t        }\n\t\n\t        /**\n\t         * Creates a new Dialog Instance either directly from HTML Element or a Widget instance\n\t         * @param {HTMLElement|Widget} widget instance or html element\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'fromWidget',\n\t        value: function fromWidget(widget) {\n\t            return this.createWidget(widget);\n\t        }\n\t\n\t        /**\n\t         * Creates a Widget from event\n\t         * @param e\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'fromEvent',\n\t        value: function fromEvent(e) {\n\t            return this.createWidget(e);\n\t        }\n\t    }, {\n\t        key: 'setDestroyOnFinish',\n\t        value: function setDestroyOnFinish(v) {\n\t            this.destroyOnFinish = v;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Destroy this widget instance, cleans empty DOM nodes\n\t         * Will use fast MutationObserver if available, otherwise falls back to DOMNodeRemoved event\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            var self = this,\n\t                modalContainer = this.modalContainer;\n\t            var isEmptyContainer = modalContainer.childNodes.length === 0;\n\t            // Remove event listener on destroy, do not remove DOM node\n\t            if (self.eventContainer) {\n\t                self.eventContainer.removeEventListener(_Settings2.default.getTabEvent(), self.eventFunction, true);\n\t            }\n\t\n\t            if (isEmptyContainer) {\n\t                if (modalContainer.parentNode) {\n\t                    modalContainer.parentNode.removeChild(modalContainer);\n\t                }\n\t            }\n\t            if (global.MutationObserver) {\n\t                var observer = new MutationObserver(function (mutations) {\n\t                    mutations.forEach(function () {\n\t                        if (isEmptyContainer) {\n\t                            modalContainer.parentNode.removeChild(modalContainer);\n\t                            observer.disconnect();\n\t                        }\n\t                    });\n\t                });\n\t                observer.observe(modalContainer, { childList: true });\n\t            } else {\n\t                modalContainer.addEventListener('DOMNodeRemoved', function (e) {\n\t                    if (e.target !== modalContainer && modalContainer.childNodes.length - 1 === 0) {\n\t                        modalContainer.parentNode.removeChild(modalContainer);\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Modal;\n\t}();\n\t\n\t// Static variable that keeps track of all open modals\n\t\n\t\n\tModal._modalInstances = [];\n\t\n\t// Global keydown listener for modal\n\tglobal.addEventListener('keydown', function (e) {\n\t    if (e.keyCode === KEY_ESC) {\n\t        var lastModal = Modal._modalInstances[Modal._modalInstances.length - 1];\n\t        if (lastModal) {\n\t            _Widget2.default.findWidget(lastModal).close(e);\n\t        }\n\t    }\n\t});\n\t\n\texports.default = Modal;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 9 */,\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (fn, ms) {\n\t    return function () {\n\t        clearTimeout(fn.timeout);\n\t        fn.timeout = setTimeout(fn, ms);\n\t    };\n\t};\n\n/***/ },\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Modal = __webpack_require__(8);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// default export as component object\n\texports.default = {\n\t    Modal: _Modal2.default,\n\t    Settings: _Settings2.default,\n\t    Widget: _Widget2.default\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** js/modal.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a32af781d3d6caa30484\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst PFX = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\nconst COL_LEFT_CLASS = 'is-collision-left';\n\nconst COL_RIGHT_CLASS = 'is-collision-right';\n\nconst COL_BOTTOM_CLASS = 'is-collision-bottom';\n\n/**\n * Provides shared DOM-Utility functions\n */\nclass Util {\n\n    /**\n     * Will register the right animation event based on browser\n     * @param element\n     * @param type\n     * @param callback\n     */\n    static prefixedAnimateEvent(element, type, callback) {\n        const thisFunction = function thisFunction(e) {\n            callback.apply(element, [e, thisFunction]);\n        };\n\n        for (let p = 0; p < PFX.length; p++) {\n            let thisType = type;\n            if (!PFX[p]) {\n                thisType = type.toLowerCase();\n            }\n            const name = PFX[p] + thisType;\n            element.addEventListener(name, thisFunction, true);\n        }\n    }\n\n    /**\n     * Get correct transitionend event\n     * @returns {String}\n     * @private\n     */\n    static whichTransitionEndEvent() {\n        let t;\n        const el = document.createElement('fake');\n\n        const transitions = {\n            transition: 'transitionend',\n            OTransition: 'oTransitionEnd',\n            MozTransition: 'transitionend',\n            WebkitTransition: 'webkitTransitionEnd'\n        };\n\n        for (t in transitions) {\n            if (el.style[t] !== undefined) {\n                return transitions[t];\n            }\n        }\n    }\n\n    /**\n     * Check if target is part of parent node\n     * @param target\n     * @param parent\n     * @returns {boolean}\n     */\n    static isPartOfNode(target, parent) {\n        if (!target || !parent) {\n            return false;\n        }\n        let now = target;\n        while (now !== parent && now !== null) {\n            if (now === parent) {\n                break;\n            }\n            now = now.parentNode;\n        }\n        return now !== null;\n    }\n\n    /**\n     * Finds the closest element including itself matching a callback\n     * @param {Node} el\n     * @param {Function} callback\n     * @returns {Node|boolean}\n     */\n    static closestCallback(el, callback) {\n        let element = el;\n        while (element !== null) {\n            if (callback(element)) {\n                return element;\n            }\n            element = element.parentNode;\n        }\n        return false;\n    }\n\n    /**\n     * Walks the tree until func returns true for given argument\n     * @param target\n     * @param func\n     * @returns {boolean|HTMLElement}\n     */\n    static parentsUntil(target, func) {\n        if (!target) {\n            return false;\n        }\n        let now = target;\n        while (!func(now) && now !== null) {\n            now = now.parentNode;\n        }\n\n        return now;\n    }\n\n    /**\n     * Generates a unique id\n     * @return {String}\n     */\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4() + s4() + s4()}`;\n    }\n\n    /**\n     * Detects scrollbar width\n     * @see http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n     * @returns {number}\n     */\n    static getScrollBarWidth() {\n        const doc = global.document;\n        const inner = doc.createElement('p');\n\n        inner.style.width = \"100%\";\n        inner.style.height = \"200px\";\n\n        const outer = doc.createElement('div');\n        outer.style.position = \"absolute\";\n        outer.style.top = \"0px\";\n        outer.style.left = \"0px\";\n        outer.style.visibility = \"hidden\";\n        outer.style.width = \"200px\";\n        outer.style.height = \"150px\";\n        outer.style.overflow = \"hidden\";\n        outer.appendChild(inner);\n\n        doc.body.appendChild(outer);\n        const w1 = inner.offsetWidth;\n        outer.style.overflow = 'scroll';\n        let w2 = inner.offsetWidth;\n        if (w1 === w2) {\n            w2 = outer.clientWidth;\n        }\n        doc.body.removeChild(outer);\n\n        return (w1 - w2);\n    }\n\n\n    /**\n     * Run an event once\n     * @param {String} ev\n     * @param {HTMLElement|HTMLDocument} target\n     * @param {Function} func\n     * @param {boolean} [capture]\n     * @return Function created listener\n     */\n    static addEventOnce(ev, target, func, capture) {\n        const thisFunction = function thisFunction(event) {\n            func(event, func);\n            target.removeEventListener(ev, thisFunction, capture);\n        };\n        target.addEventListener(ev, thisFunction, capture);\n        return thisFunction;\n    }\n\n    /**\n     * Checks if an element is visible\n     * @param {HTMLElement} element\n     * @returns bool\n     */\n    static isVisible(element) {\n        return element.offsetWidth > 0 && element.offsetHeight > 0;\n    }\n\n    /**\n     * Creates a camelCaseRepresentation of a dashed string\n     * @param {String} str\n     * @returns String\n     */\n    static dashToCamelCase(str) {\n        return str.replace(/-([a-z])/g, (g) => {\n            return g[1].toUpperCase();\n        });\n    }\n\n    /**\n     * Creates a copy of `input`\n     * @param {*} input\n     * @return *\n     */\n    static copy(input) {\n        return JSON.parse(JSON.stringify(input));\n    }\n\n    /**\n     * Reads options from element (data attributes) and applies to base\n     * @param {HTMLElement} element\n     * @param {Object} base\n     * @return {Object}\n     */\n    static applyOptionsFromElement(element, base) {\n        if (!element) {\n            return base;\n        }\n        const attrs = element.attributes;\n        for (let i = 0; i < attrs.length; i++) {\n            const attr = attrs[i];\n            if (attr) {\n                const s = Util.dashToCamelCase(attr.nodeName.replace('data-', ''));\n                const val = attr.nodeValue;\n                if (base.hasOwnProperty(s)) {\n                    // skip functions\n                    if (typeof base[s] === 'function') {\n                        continue;\n                    }\n                    if (typeof base[s] === 'boolean') {\n                        base[s] = parseInt(val || 1, 10) === 1;\n                    } else {\n                        base[s] = val;\n                    }\n                }\n            }\n        }\n        return base;\n    }\n\n    /**\n     * Will position an element directly at given target\n     * Is aware of a given collision container to detect edges\n     * Will put elementToPosition either to left, center or right edge (prefer right)\n     *  and either to bottom or top (prefers bottom)\n     *\n     * You may overwrite preferred positioned with `centerHorizontal` and `positionTop`\n     *\n     * @param {HTMLElement|ClientRect} target the target container to align to\n     * @param {HTMLElement} elementToPosition the element to position\n     * @param {HTMLElement} collisionContainer the outer container to prevent collisions\n     * @param {boolean} [centerHorizontal] set true to center element, otherwise it's put on the right border by default\n     * @param {boolean} [positionTop] flip top, by default element is positioned to the bottom.\n     * @returns {HTMLElement}\n     */\n    static setupPositionNearby(target, elementToPosition, collisionContainer, centerHorizontal, positionTop) {\n        // determine relative offsets\n        let amountTop = 0;\n        let amountLeft = 0;\n        Util.parentsUntil(target.parentNode, (el) => {\n            if (!(el instanceof HTMLElement)) {\n                return false;\n            }\n            const style = window.getComputedStyle(el);\n            if (Util.isPartOfNode(elementToPosition, el)) {\n                if (style && style.position === 'relative') {\n                    amountTop += el.offsetTop || 0;\n                    amountLeft += el.offsetLeft || 0;\n                }\n                return false;\n            }\n            return true;\n        });\n\n        const targetPosition = target instanceof HTMLElement ? target.getBoundingClientRect() : target;\n        const elementRect = elementToPosition.getBoundingClientRect();\n        const colRect = collisionContainer.getBoundingClientRect();\n        const targetTop = targetPosition.top - amountTop;\n        const targetRight = targetPosition.right;\n        const isCollisionTop = (targetTop - elementRect.height) <= 0;\n        const isCollisionBottom =\n            window.innerHeight < (targetTop + amountTop + targetPosition.height + elementRect.height);\n        const isCollisionLeft = targetRight < elementRect.width;\n        const targetLeft = targetPosition.left;\n        const isCollisionRight = (targetLeft + elementRect.width) > colRect.width;\n        const classList = elementToPosition.classList;\n\n        classList.remove(COL_RIGHT_CLASS);\n        classList.remove(COL_LEFT_CLASS);\n        classList.remove(COL_BOTTOM_CLASS);\n\n        let calcTop;\n        let calcLeft;\n        if (isCollisionLeft && !isCollisionRight) {\n            // put element to left if collision with left\n            calcLeft = `${(targetPosition.left - colRect.left - amountLeft)}px`;\n            classList.add(COL_LEFT_CLASS);\n        } else {\n            // maybe center if no collision with either side\n            const rightPosition = `${(targetRight - elementRect.width - colRect.left - amountLeft)}px`;\n            const leftCentered = ((targetLeft + targetPosition.width / 2) -\n                    (elementRect.width / 2) || 0) - colRect.left;\n            const collisionCentered = (leftCentered + elementRect.width) > colRect.width;\n            if (centerHorizontal && !collisionCentered) {\n                calcLeft = `${leftCentered}px`;\n            } else {\n                classList.add(COL_RIGHT_CLASS);\n                calcLeft = rightPosition;\n            }\n        }\n\n        if (isCollisionBottom || (positionTop && !isCollisionTop)) {\n            // Put Element on top if collision\n            calcTop = `${(targetTop - elementRect.height) - colRect.top}px`;\n            classList.add(COL_BOTTOM_CLASS);\n        } else {\n            calcTop = `${(targetTop + targetPosition.height) - colRect.top}px`;\n        }\n\n        elementToPosition.style.cssText = `top:${calcTop};left:${calcLeft};`;\n\n        return elementToPosition;\n    }\n\n    /**\n     * Brings a given element into viewport\n     * @param {HTMLElement} el\n     * @param {int|function}[optionalOffset]\n     */\n    static scrollToElement(el, optionalOffset) {\n        el.scrollIntoView();\n        let thisOffset = optionalOffset;\n        // optionally use a additional scrollDif\n        if (thisOffset) {\n            if (typeof thisOffset === 'function') {\n                thisOffset = optionalOffset();\n            }\n            if (thisOffset > 0) {\n                const scrolledY = window.pageYOffset;\n                if (scrolledY) {\n                    window.scroll(0, scrolledY - thisOffset);\n                }\n            }\n        }\n    }\n}\n\nexport default Util;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/util/Util.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport Util from './Util';\n\n// we attach global settings to global once because settings might be shared a lot of times trough the application\n// Maybe find a better way to handle that scenario\nif (!global.FLEXCSS_GLOBAL_SETTINGS) {\n    global.FLEXCSS_GLOBAL_SETTINGS = {\n        // defined breakpoint for small devices < n\n        smallBreakpoint: 768,\n        // nodes that should be updated when no scrollbar is expected\n        scrollbarUpdateNodes: global.document.body !== null ? [global.document.body] : [],\n        // additional Delay until darkener is fully hidden\n        darkenerFadeDelay: 100,\n        // class that is added if canvas has been toggled\n        canvasToggledClass: 'toggled-canvas'\n    };\n\n    global.FLEXCSS_CONST_IS_IOS = null;\n\n    global.FLEXCSS_CONST_IS_TOUCH = null;\n\n    global.FLEXCSS_CONST_IS_IE = null;\n\n    global.FLEXCSS_CONST_TAB_EVENT = 'click';\n\n    global.FLEXCSS_IS_SMALL_SCREEN = false;\n\n    const init = () => {\n        // Measure scrollbar width\n        global.FLEXCSS_CONST_SCROLLBAR_WIDTH = Util.getScrollBarWidth();\n        // detect right transition end event\n        global.FLEXCSS_CONST_TRANSITION_EVENT = Util.whichTransitionEndEvent();\n    };\n\n    if (global.document.readyState !== 'loading') {\n        init();\n    } else {\n        // it's possible that global.document.body is not available if the document is not\n        // loaded completely\n        document.addEventListener('DOMContentLoaded', () => {\n            init();\n        });\n    }\n}\n\n/**\n * Utility class that setups global settings\n */\nclass Settings {\n\n    /**\n     * Setup global settings, overwrite default values\n     * @param {Object} settings\n     */\n    static setup(settings) {\n        Object.assign(global.FLEXCSS_GLOBAL_SETTINGS, settings);\n    }\n\n    /**\n     * Access to global settings\n     * @returns {Object}\n     */\n    static get() {\n        return global.FLEXCSS_GLOBAL_SETTINGS;\n    }\n\n    /**\n     * Detects a IOS Device, caches subsequent calls\n     * @returns {boolean}\n     */\n    static isIosDevice() {\n        if (!global.FLEXCSS_CONST_IS_IOS) {\n            global.FLEXCSS_CONST_IS_IOS = global.navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n        }\n\n        return global.FLEXCSS_CONST_IS_IOS;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    static isSmallScreen() {\n        return window.innerWidth < Settings.get().smallBreakpoint;\n    }\n\n    /**\n     * Detects a touch device, caches subsequent calls\n     * @returns {boolean}\n     */\n    static isTouchDevice() {\n        if (!global.FLEXCSS_CONST_IS_TOUCH) {\n            global.FLEXCSS_CONST_IS_TOUCH = 'ontouchstart' in window || !!(global.navigator.msMaxTouchPoints);\n        }\n        return global.FLEXCSS_CONST_IS_TOUCH;\n    }\n\n    /**\n     * Checks if current browser is Internet Explorer\n     * @returns {boolean|*}\n     */\n    static isIE() {\n        if (!global.FLEXCSS_CONST_IS_IE) {\n            global.FLEXCSS_CONST_IS_IE = \"ActiveXObject\" in window;\n        }\n        return global.FLEXCSS_CONST_IS_IE;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static getTransitionEvent() {\n        return global.FLEXCSS_CONST_TRANSITION_EVENT;\n    }\n\n    /**\n     * @returns {int}\n     */\n    static getScrollbarWidth() {\n        return global.FLEXCSS_CONST_SCROLLBAR_WIDTH;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static getTabEvent() {\n        return global.FLEXCSS_CONST_TAB_EVENT;\n    }\n}\n\nexport default Settings;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/util/Settings.js\n **/","/* global CustomEvent */\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// polyfill for custom events to make thinks work in IE\n// The needed polyfill is so small that I embedded it here\n(function poly() {\n    if (!global.CustomEvent || typeof global.CustomEvent !== 'function') {\n        const CustomEvent = function CustomEvent(event, params) {\n            const thisParams = params ||\n                {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: undefined\n                };\n            const evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(event, thisParams.bubbles,\n                thisParams.cancelable, thisParams.detail);\n            return evt;\n        };\n        CustomEvent.prototype = global.Event.prototype;\n        global.CustomEvent = CustomEvent;\n    }\n})();\n/**\n * Simpler Event dispatching\n */\nclass EventHandler {\n\n    /**\n     * @param {HTMLElement} target\n     * @param {String} name\n     */\n    constructor(target, name) {\n        this.target = target;\n        this.defaultOptions = {\n            bubbles: true,\n            cancelable: true\n        };\n\n        this.name = name;\n    }\n\n    /**\n     * Set more options\n     * @param {Object} options\n     * @returns {EventHandler}\n     */\n    withOptions(options) {\n        Object.assign(this.defaultOptions, (options || {}));\n        return this;\n    }\n\n    /**\n     * Call with the originalEvent\n     * @param {Event} e\n     * @returns {EventHandler}\n     */\n    withOriginal(e) {\n        return this.withDetail({\n            originalEvent: e\n        });\n    }\n\n    /**\n     * Extends the detail part of the event\n     * @param {Object} o\n     * @returns {EventHandler}\n     */\n    withDetail(o) {\n        if (!this.defaultOptions.detail) {\n            this.defaultOptions.detail = {};\n        }\n        Object.assign(this.defaultOptions.detail, o);\n        return this;\n    }\n\n    /**\n     * @returns {CustomEvent}\n     */\n    fire() {\n        const e = new CustomEvent(this.name, this.defaultOptions);\n        if (this.target) {\n            this.target.dispatchEvent(e);\n        }\n        return e;\n    }\n}\n\nclass Event {\n    /**\n     * Prepares to dispatch a custom event (without firing)\n     * @param {HTMLElement} target\n     * @param {String} name\n     * @returns {EventHandler}\n     */\n    static dispatch(target, name) {\n        return new EventHandler(target, name);\n    }\n\n    /**\n     * Dispatches a custom event and fires it directly\n     * @param {HTMLElement} target\n     * @param {String} name\n     * @param {Object} [options]\n     * @returns {CustomEvent}\n     */\n    static dispatchAndFire(target, name, options) {\n        return new EventHandler(target, name).withOptions(options).fire();\n    }\n}\n\nexport default Event;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/util/Event.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Widget\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n/**\n * A Widget provides async content on a specific target (e.g. a modal link)\n */\nclass Widget {\n\n    /**\n     * Creates a new Widget\n     * @param [element], optional define the content of widget\n     */\n    constructor(element) {\n        /**\n         *\n         * @type {Promise}\n         */\n        this.asyncContent = null;\n\n        /**\n         * @type {boolean}\n         */\n        this._isWidget = true;\n\n        if (element) {\n            /**\n             * @type {HTMLElement}\n             */\n            this.element = element instanceof HTMLElement ? element : global.document.getElementById(element);\n            if (this.element) {\n                this.element.hfWidgetInstance = this;\n                this.setAsync(() => {\n                    return new Promise((s) => {\n                        s(this.element);\n                    });\n                });\n            } else {\n                throw new Error(`Could not found element with ID: ${element}`);\n            }\n        }\n        /**\n         * The final resulted content that a widget did create (e.g. a modal container)\n         * @type {HTMLElement}\n         */\n        this.finalContent = null;\n    }\n\n    /**\n     *\n     * @returns {Promise}\n     */\n    getAsync() {\n        return this.asyncContent();\n    }\n\n    /**\n     * @param {Function.<Promise>} async\n     * @returns {Widget}\n     */\n    setAsync(async) {\n        this.asyncContent = async;\n        return this;\n    }\n\n    /**\n     * @returns {HTMLElement}\n     */\n    getFinalContent() {\n        return this.finalContent;\n    }\n\n    /**\n     * @param {HTMLElement} element\n     * @returns {Widget}\n     */\n    setElement(element) {\n        this.element = element;\n        return this;\n    }\n\n    /**\n     * Destroys the generated content of this widget\n     * @returns {boolean}\n     */\n    destroy() {\n        if (this.finalContent && this.finalContent.parentNode) {\n            this.finalContent.parentNode.removeChild(this.finalContent);\n            return true;\n        }\n\n        delete this.element;\n        delete this.asyncContent;\n        delete this.finalContent;\n\n        return false;\n    }\n\n    /**\n     * Will find a widget on an Element\n     * @param {HTMLElement} element\n     * @returns {Widget|undefined}\n     */\n    static findWidget(element) {\n        return element ? element.hfWidgetInstance : undefined;\n    }\n\n    /**\n     * Checks if a given object is an instance\n     * @param {Object} self\n     * @returns {boolean}\n     */\n    static isWidget(self) {\n        return self instanceof Widget || typeof self === 'object' && self.hasOwnProperty('_isWidget');\n    }\n}\n\nexport default Widget;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/Widget.js\n **/","import Settings from '../util/Settings';\nimport debounce from './debounce';\nimport Event from '../util/Event';\nimport Util from '../util/Util';\n\nconst CLS_FIXED_WINDOW = 'fixed-window-open';\n\nexport const EVENT_BEFORE_FIXED_ADD = 'flexcss.fixedWindow.beforeAdd';\nexport const EVENT_AFTER_FIXED_REMOVE = 'flexcss.fixedWindow.afterRemove';\n\n/**\n * @type {FixedWindow}\n */\nlet fixedWindowInstance;\n\nexport default class FixedWindow {\n\n    constructor() {\n        this.widgets = [];\n        this.currentScrollTop = 0;\n        this.fixedScreenConstraints = [];\n        this.windowWidth = 0;\n        this.isFixedWindowActive = false;\n        this.touchListener = null;\n    }\n\n    /**\n     * Adds a constraint to detect if the window needs to be changed when the screensize changes\n     *\n     * @param {Function} widget\n     * @param {Function} fixedBreakpointFn gets a width argument, return true to open a window\n     */\n    addScreenConstraint(widget, fixedBreakpointFn) {\n        this.fixedScreenConstraints[widget] = fixedBreakpointFn;\n    }\n\n    /**\n     * @returns {null|DestroyableWidget}\n     */\n    getCurrentWidget() {\n        return this.widgets.length > 0 ? this.widgets[this.widgets.length - 1] : null;\n    }\n\n    /**\n     * @private\n     */\n    _checkFixedNeeded() {\n        if (this.widgets.length === 0) {\n            return;\n        }\n        const widgets = new Set(this.widgets);\n        const widgetsThatRequireFixedWindow = Array.from(widgets).some(({ widget }) => {\n            return this.fixedScreenConstraints[widget] && this.fixedScreenConstraints[widget](this.windowWidth);\n        });\n        if (!widgetsThatRequireFixedWindow) {\n            this._removeFixedContainer();\n        } else {\n            this._addFixedContainer();\n        }\n    }\n\n    /**\n     * @private\n     */\n    _addFixedContainer() {\n        if (this.isFixedWindowActive) {\n            return;\n        }\n        Event.dispatchAndFire(global.document, EVENT_BEFORE_FIXED_ADD, {\n            detail: this.getCurrentWidget()\n        });\n        // this causes layout and should be optimized\n        // At lest we write in a batch later\n        Settings.get().scrollbarUpdateNodes.map((n) => {\n            let foundProperty = 'paddingRight';\n            let direction = 1;\n            let node = n;\n            if (n instanceof Array) {\n                const [whatNode, property, d] = n;\n                foundProperty = property;\n                node = whatNode;\n                direction = d || 1;\n            }\n            return {\n                node,\n                property: foundProperty,\n                value: `${parseInt(global.getComputedStyle(node)[foundProperty], 10) +\n                (!node.__fixedWindowMod__ ? (Settings.getScrollbarWidth() * direction) : 0)}px`\n            };\n        }).forEach((d) => {\n            d.node.__fixedWindowMod__ = true;\n            d.node.style[d.property] = d.value;\n        });\n\n        this.touchListener = (e) => {\n            e.preventDefault();\n        };\n\n        let shouldNotMove = false;\n        this.touchStartListener = (e) => {\n            const { element } = this.getCurrentWidget();\n            if (Util.isPartOfNode(e.target, element)) {\n                if (element.scrollTop === 0) {\n                    element.scrollTop = 1;\n                    shouldNotMove = true;\n                } else if (element.scrollHeight === element.scrollTop + element.offsetHeight) {\n                    shouldNotMove = true;\n                    element.scrollTop -= 1;\n                }\n            }\n        };\n\n        global.addEventListener('touchmove', this.touchListener);\n        global.document.body.addEventListener('touchstart', this.touchStartListener);\n\n        this.touchMoveListener = (e) => {\n            const { element } = this.getCurrentWidget();\n            if (Util.isPartOfNode(e.target, element)) {\n                if (!shouldNotMove) {\n                    e.stopImmediatePropagation();\n                }\n                shouldNotMove = false;\n            }\n        };\n        global.document.body.addEventListener('touchmove', this.touchMoveListener);\n\n        global.document.documentElement.classList.add(CLS_FIXED_WINDOW);\n        this.isFixedWindowActive = true;\n    }\n\n    /**\n     * @private\n     */\n    _removeFixedContainer() {\n        if (this.isFixedWindowActive) {\n            // cleanup event listeners\n            global.removeEventListener('touchmove', this.touchListener);\n            global.document.body.removeEventListener('touchstart', this.touchStartListener);\n            global.document.body.removeEventListener('touchmove', this.touchMoveListener);\n\n            // reset scrollbar nodes\n            Settings.get().scrollbarUpdateNodes.forEach((node) => {\n                if (node instanceof Array) {\n                    const [whatNode, property] = node;\n                    delete whatNode.__fixedWindowMod__;\n                    whatNode.style[property] = '';\n                } else {\n                    delete node.__fixedWindowMod__;\n                    node.style.paddingRight = '';\n                }\n            });\n            global.document.documentElement.classList.remove(CLS_FIXED_WINDOW);\n            Event.dispatchAndFire(global.document, EVENT_AFTER_FIXED_REMOVE);\n            this.isFixedWindowActive = false;\n        }\n    }\n\n    /**\n     * Will close a window when no widgets are opened that need one\n     */\n    resizeListener() {\n        this.windowWidth = global.innerWidth;\n        this._checkFixedNeeded();\n    }\n\n    /**\n     * @returns {FixedWindow}\n     */\n    static getInstance() {\n        if (!fixedWindowInstance) {\n            fixedWindowInstance = new FixedWindow();\n            fixedWindowInstance.windowWidth = global.innerWidth;\n            const eventHandler = fixedWindowInstance.resizeListener.bind(fixedWindowInstance);\n            global.addEventListener(\n                'resize',\n                debounce(eventHandler, 500)\n            );\n            global.addEventListener('orientationchange', eventHandler);\n        }\n        return fixedWindowInstance;\n    }\n\n    /**\n     * Request a close of the fixed window\n     */\n    close() {\n        this.widgets.pop();\n        if (this.widgets.length === 0) {\n            this._removeFixedContainer();\n        }\n    }\n\n    /**\n     * Request to open a fixed windows\n     * @param {Object|DestroyableWidget} instance\n     * @param {HTMLElement} element\n     */\n    open(instance, element) {\n        let fixed = false;\n        if (typeof instance === 'object') {\n            const widget = instance.constructor;\n            const fixedWidget = this.fixedScreenConstraints[instance.constructor];\n            if (widget && fixedWidget) {\n                fixed = fixedWidget(this.windowWidth);\n            }\n            const length = this.widgets.length;\n            this.widgets.push(\n                {\n                    widget,\n                    element\n                }\n            );\n            // open a new window if there is no window active\n            if (length === 0) {\n                if (fixed) {\n                    this._addFixedContainer();\n                }\n            }\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/lib/FixedWindow.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Modal\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n/* global KeyboardEvent */\n\nimport Settings from './util/Settings';\nimport Event from './util/Event';\nimport Util from './util/Util';\nimport Widget from './Widget';\nimport FixedWindow from './lib/FixedWindow';\n\nconst HTML_ELEMENT = global.document.documentElement;\nconst KEY_ESC = 27;\n/* Attribute Names */\nconst ATTR_CREATE_NEW = 'data-new-instance';\nconst ATTR_CLOSE = 'data-close-modal';\nconst ATTR_NAME = 'data-modal';\n\n/* Class names */\nconst CLS_CONTAINER_CURRENT = 'front';\nconst CLS_OPEN = 'open';\nconst CLS_CURRENT = 'current';\nconst CLS_PART_OF_STACK = 'part-of-stack';\nconst CLS_MODAL_OPEN = 'modal-open';\nconst CLS_MODAL_CONTAINER = 'modal-container';\nconst CLS_ANIM_END = 'modal-anim-end';\nconst CLS_LOADER_CONTAINER = 'loader-container';\nconst CLS_LOADER = 'loader';\n\n/* Events */\n\n/**\n * Event triggered when modal is closed\n * @type {string}\n */\nexport const EVENT_MODAL_CLOSED = 'flexcss.modal.closed';\n/**\n * Event triggered before a modal is closed, cancelable\n * @type {string}\n */\nexport const EVENT_MODAL_BEFORE_CLOSED = 'flexcss.modal.beforeClose';\n/**\n * Event triggered when a modal is opened\n * @type {string}\n */\nexport const EVENT_MODAL_OPENED = 'flexcss.modal.opened';\n\n/**\n * Event triggered when modal is initilized, called on target\n * @type {string}\n */\nexport const EVENT_MODAL_INIT = 'flexcss.modal.init';\n\n/**\n * Triggered when the content of an async modal on a target is loaded, called on target\n * @type {string}\n */\nexport const EVENT_MODAL_ASYNC_TARGET_LOADED = 'flexcss.modal.asyncTargetLoaded';\n\n/**\n * A Modal Implementation\n */\nclass Modal {\n    constructor(DelegateContainer, options) {\n        const doc = global.document;\n        const container = DelegateContainer instanceof HTMLElement ?\n            DelegateContainer : doc.getElementById(DelegateContainer);\n\n        // Instance vars:\n        if (!container) {\n            throw new Error(`Could not found container element by given ID/Element: ${DelegateContainer}`);\n        }\n\n        this.currentOpen = null;\n\n        this.loading = false;\n\n        this.container = container;\n\n        /**\n         * Default Options\n         */\n        this.options = {\n            classNames: 'modal',\n            closeOnEscape: true,\n            closeOnBackgroundClick: true,\n            destroyOnFinish: false,\n            fixedContainer: true,\n            containerClassNames: ''\n        };\n\n        Object.assign(this.options, options);\n\n        // Container where events are delegated\n        this.eventContainer = null;\n        this.eventFunction = null;\n\n        this.dataMainPageContainer = global.document.body;\n\n        this.currentScrollTop = 0;\n\n        this.modalContainer = null;\n\n        // Destroy full modal instance when no dialogs are bind to?\n        // Otherwise container is recycled\n        this.destroyOnFinish = this.options.destroyOnFinish;\n    }\n\n    /**\n     * Removes this modal from global stack\n     * Will handle fixing main html element too\n     * @private\n     * @param n\n     */\n    _removeModalFromStack(n) {\n        const t = Modal._modalInstances.indexOf(n);\n        if (t > -1) {\n            Modal._modalInstances.splice(t, 1);\n            FixedWindow.getInstance().close();\n            HTML_ELEMENT.classList.remove(CLS_MODAL_OPEN);\n        }\n    }\n\n\n    /**\n     * Modal container that contains all `stacked` modals for this instance\n     * @returns {HTMLElement}\n     */\n    getModalContainer() {\n        return this.modalContainer;\n    }\n\n    /**\n     * Closes the current open modal of this stack\n     * @params [e], optional event\n     * @returns {*}\n     */\n    close(e) {\n        const self = this;\n\n        const options = self.currentOpen ? Util.applyOptionsFromElement(\n            self.currentOpen, Util.copy(self.options)) : self.options;\n\n        // close only on keyboard if instance should\n        if (!options.closeOnEscape && e instanceof KeyboardEvent) {\n            return false;\n        }\n\n        // close only on background if instance should\n        if (!options.closeOnBackgroundClick && e &&\n            e.type === Settings.getTabEvent() && !e.target.hasAttribute(ATTR_CLOSE)) {\n            return false;\n        }\n\n        // if an instance is currently loading, prevent from closing\n        if (self.loading) {\n            return false;\n        }\n\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (self.currentOpen) {\n            // dispatch beforeClose event, if prevented prevent modal from closing\n            var ev = Event.dispatchAndFire(self.currentOpen, EVENT_MODAL_BEFORE_CLOSED);\n            if (ev.defaultPrevented) {\n                return false;\n            }\n\n            this._finishState(self.currentOpen);\n            // if there is an previous modal\n            if (self.currentOpen.prevModal) {\n                // switch to the next modal\n                return self.switchModals(self.currentOpen.prevModal,\n                    self.currentOpen.prevModal.prevModal || null);\n            }\n\n            // finally trigger closed event\n            Event.dispatch(self.currentOpen, EVENT_MODAL_CLOSED).withOriginal(e).fire();\n\n        }\n        self._removeModalFromStack(self.currentOpen);\n\n        // Full stack closed:\n        self.currentOpen = null;\n        if (self.modalContainer) {\n            // setup next open\n            var lastContainer = Modal._modalInstances[Modal._modalInstances.length - 1],\n                classList = self.modalContainer.classList;\n            classList.remove(CLS_CONTAINER_CURRENT);\n            classList.remove(CLS_OPEN);\n            // Remove all current classes from child-nodes\n            for (var i = 0; i < self.modalContainer.childNodes.length; i++) {\n                var node = self.modalContainer.childNodes[i], cl = node.classList;\n                // remove applied styles\n                self._finishState(node);\n                cl.remove(CLS_CURRENT);\n                cl.remove(CLS_PART_OF_STACK);\n            }\n            if (lastContainer) {\n                lastContainer.parentNode.classList.add(CLS_CONTAINER_CURRENT);\n            }\n        }\n\n        if (self.destroyOnFinish) {\n            self.destroy();\n        }\n        return self;\n    }\n\n    /**\n     * Resets a target when newly initilizes\n     * @param target\n     * @private\n     */\n    _finishState(target) {\n        target.classList.remove(CLS_ANIM_END);\n    }\n\n    /**\n     * Handler called when a Modal has finished an animation\n     * @param e\n     * @param self\n     * @private\n     */\n    _finishAnim(e, self) {\n        e.target.classList.add(CLS_ANIM_END);\n        e.target.removeEventListener(e.type, self, true);\n    }\n\n    /**\n     * Brings the given modal to front\n     * @param co\n     * @param last\n     */\n    switchModals(co, last) {\n        co.prevModal = last;\n        Modal._modalInstances.push(co);\n        FixedWindow.getInstance().open(this, this.modalContainer);\n        if (last) {\n            this._finishState(last);\n            Util.prefixedAnimateEvent(last, 'AnimationEnd', this._finishAnim);\n            last.classList.add(CLS_PART_OF_STACK);\n        }\n        // set new currentOpen\n        this.currentOpen = co;\n\n        // bring current container to the front\n        var instances = Modal._modalInstances;\n\n        for (var m = 0; m < instances.length; m++) {\n            instances[m].parentNode.classList.remove(CLS_CONTAINER_CURRENT);\n        }\n        this.modalContainer.classList.add(CLS_CONTAINER_CURRENT);\n        // remove animations if animations has been completed, fixes various bugs:\n        // - fixes nested scrolling element issue in iOS Browsers / Mobile-Safari\n        Util.prefixedAnimateEvent(co, 'AnimationEnd', this._finishAnim);\n\n        for (var i = 0; i < this.modalContainer.childNodes.length; i++) {\n            var n = this.modalContainer.childNodes[i], isCurrent = n.classList.contains(CLS_CURRENT);\n            if (n === co) {\n                co.classList.add(CLS_CURRENT);\n                co.classList.remove(CLS_PART_OF_STACK);\n                this._finishState(co);\n            } else {\n                n.classList.remove(CLS_CURRENT);\n                if (isCurrent) {\n                    this._removeModalFromStack(n);\n                    Event.dispatchAndFire(n, EVENT_MODAL_CLOSED);\n                }\n            }\n        }\n    }\n\n    handleScrollbar() {\n        if (Modal._modalInstances.length === 0) {\n            HTML_ELEMENT.classList.add(CLS_MODAL_OPEN);\n        }\n    }\n\n    /**\n     * Creates a Modal and opens it (later)\n     * @param e\n     * @returns {Promise|boolean}\n     */\n    createWidget(e) {\n        var self = this;\n        if (this.loading) {\n            return false;\n        }\n\n        // check if another modal has registered events on this dom path:\n        if (e && e.target) {\n            var foundInstance = Util.parentsUntil(e.target, function (node) {\n                return node && node.flexModalInstance;\n            });\n\n            // if another instance has been found, abort\n            if (foundInstance !== this.container) {\n                return false;\n            }\n        }\n        var targetContent, future, widget, target, hasTarget = true,\n            isHtmlElement = e instanceof HTMLElement, isWidget = Widget.isWidget(e);\n        if (isHtmlElement || isWidget) {\n            if (isHtmlElement) {\n                targetContent = e;\n            } else {\n                widget = e;\n                targetContent = widget.element;\n            }\n        } else {\n            target = e.target;\n            if (!target) {\n                throw 'Could not find target, did you pass an event, a HTMLElement or an Widget?';\n            }\n            hasTarget = target.hasAttribute(ATTR_NAME);\n            targetContent = target.getAttribute(ATTR_NAME);\n            widget = Widget.findWidget(target);\n            if (target.hasAttribute(ATTR_CREATE_NEW) && !e.newInstance) {\n                var newInstance = new Modal(this.container)\n                    .setDestroyOnFinish(true);\n                e.newInstance = true;\n                newInstance.fromEvent(e).then(function () {\n                    newInstance.registerEvents(newInstance.getModalContainer());\n                });\n                return false;\n            }\n            if (hasTarget) {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n            }\n        }\n\n        if (!hasTarget) {\n            return false;\n        }\n\n        let modalContainerClasses = this.modalContainer ? this.modalContainer.classList : [];\n\n        // lazy create modal container\n        if (!this.modalContainer) {\n            this.modalContainer = global.document.createElement('div');\n            this.modalContainer.className = `${CLS_MODAL_CONTAINER} ${this.options.containerClassNames} ${CLS_OPEN}`;\n            const closeModalFunction = function (ce) {\n                if (self.loading) {\n                    return false;\n                }\n                if (Util.isPartOfNode(ce.target, self.currentOpen)) {\n                    if (!ce.target.hasAttribute(ATTR_CLOSE)) {\n                        return false;\n                    }\n                }\n                self.close(ce);\n            };\n\n            this.modalContainer.addEventListener(Settings.getTabEvent(), closeModalFunction, false);\n\n            modalContainerClasses = this.modalContainer.classList;\n            this.container.appendChild(this.modalContainer);\n\n        } else {\n            modalContainerClasses.add(CLS_OPEN);\n        }\n\n        let loader, doc = global.document, toggleLoader = function (show) {\n            if (show) {\n                loader = doc.createElement('div');\n                loader.className = CLS_LOADER_CONTAINER;\n                var loaderLoader = doc.createElement('div');\n                loaderLoader.className = CLS_LOADER;\n                loader.appendChild(loaderLoader);\n                self.modalContainer.appendChild(loader);\n            } else {\n                loader.parentNode.removeChild(loader);\n            }\n        };\n\n        this.handleScrollbar();\n\n        modalContainerClasses.add(CLS_CONTAINER_CURRENT);\n        modalContainerClasses.add('loading');\n        this.loading = true;\n        toggleLoader(true);\n        var async = widget ? widget.getAsync() : null;\n        if (Widget.isWidget(widget) && async) {\n            future = async.then(function (r) {\n                var result;\n                if (r instanceof HTMLElement || r instanceof DocumentFragment) {\n                    result = r;\n                } else {\n                    // Create container Element:\n                    var element = doc.createElement('div');\n                    element.className = self.options.classNames;\n                    element.innerHTML = r;\n                    element.id = Util.guid();\n                    result = element;\n                }\n                widget.finalContent = result;\n                Event.dispatchAndFire(target, EVENT_MODAL_ASYNC_TARGET_LOADED);\n                return result;\n            });\n        } else {\n            var el = targetContent instanceof HTMLElement ||\n            targetContent instanceof DocumentFragment ? targetContent : doc.getElementById(targetContent);\n            if (el) {\n                future = new Promise((resolve) => {\n                    resolve(el);\n                });\n            } else {\n                throw 'Could not found given modal element (content) with ID: ' + targetContent;\n            }\n        }\n\n        Event.dispatchAndFire(target, EVENT_MODAL_INIT);\n\n        return future.then((thisEl) => {\n            thisEl.hfWidgetInstance = self;\n            self.modalContainer.appendChild(thisEl);\n            modalContainerClasses.remove('loading');\n            self.loading = false;\n            toggleLoader(false);\n\n            self.open(thisEl, true, e);\n\n            return thisEl;\n        });\n    }\n\n    /**\n     * Open's an already rendered modal\n     * @param {HTMLElement} modal\n     * @param {Boolean} [internal], set to true to prevent container management\n     * @param {Boolean} [maybeEvent], optional event-object that triggered open\n     */\n    open(modal, internal, maybeEvent) {\n\n\n        if (!internal) {\n            this.modalContainer.classList.add('open');\n            this.handleScrollbar();\n        }\n        this.switchModals(modal, this.currentOpen);\n\n        Event.dispatch(modal, EVENT_MODAL_OPENED).withOriginal(maybeEvent).fire();\n    }\n\n\n    registerEvents(delegate) {\n        var delegateContainer = delegate || this.container, self = this;\n        // Modals should always be fixed\n        FixedWindow.getInstance().addScreenConstraint(Modal, (width) => true);\n        // register modal instance so we can detect multiple registrars\n        delegateContainer.flexModalInstance = self;\n        self.eventFunction = function () {\n            self.createWidget.apply(self, arguments);\n        };\n        delegateContainer.addEventListener(Settings.getTabEvent(), self.eventFunction, false);\n\n        self.eventContainer = delegateContainer;\n        return self;\n    }\n\n\n    /**\n     * Creates a new Dialog Instance either directly from HTML Element or a Widget instance\n     * @param {HTMLElement|Widget} widget instance or html element\n     * @returns {Promise}\n     */\n    fromWidget(widget) {\n        return this.createWidget(widget);\n    }\n\n    /**\n     * Creates a Widget from event\n     * @param e\n     * @returns {Promise}\n     */\n    fromEvent(e) {\n        return this.createWidget(e);\n    }\n\n    setDestroyOnFinish(v) {\n        this.destroyOnFinish = v;\n        return this;\n    }\n\n    /**\n     * Destroy this widget instance, cleans empty DOM nodes\n     * Will use fast MutationObserver if available, otherwise falls back to DOMNodeRemoved event\n     */\n    destroy() {\n        let self = this, modalContainer = this.modalContainer;\n        const isEmptyContainer = modalContainer.childNodes.length === 0;\n        // Remove event listener on destroy, do not remove DOM node\n        if (self.eventContainer) {\n            self.eventContainer.removeEventListener(Settings.getTabEvent(), self.eventFunction, true);\n        }\n\n        if (isEmptyContainer) {\n            if (modalContainer.parentNode) {\n                modalContainer.parentNode.removeChild(modalContainer);\n            }\n        }\n        if (global.MutationObserver) {\n            var observer = new MutationObserver(function (mutations) {\n                mutations.forEach(function () {\n                    if (isEmptyContainer) {\n                        modalContainer.parentNode.removeChild(modalContainer);\n                        observer.disconnect();\n                    }\n                });\n            });\n            observer.observe(modalContainer, {childList: true});\n        } else {\n            modalContainer.addEventListener('DOMNodeRemoved', function (e) {\n                if (e.target !== modalContainer && (modalContainer.childNodes.length - 1) === 0) {\n                    modalContainer.parentNode.removeChild(modalContainer);\n                }\n            });\n        }\n    }\n}\n\n\n// Static variable that keeps track of all open modals\nModal._modalInstances = [];\n\n// Global keydown listener for modal\nglobal.addEventListener('keydown', function (e) {\n    if (e.keyCode === KEY_ESC) {\n        var lastModal = Modal._modalInstances[Modal._modalInstances.length - 1];\n        if (lastModal) {\n            Widget.findWidget(lastModal).close(e);\n        }\n    }\n});\n\nexport default Modal;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/Modal.js\n **/","export default (fn, ms) => () => {\n    clearTimeout(fn.timeout);\n    fn.timeout = setTimeout(fn, ms);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/lib/debounce.js\n **/","'use strict';\n\nimport Modal from '../Modal';\nimport Settings from '../util/Settings';\nimport Widget from '../Widget';\n\n// default export as component object\nexport default {\n    Modal,\n    Settings,\n    Widget\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/modules/Modal.js\n **/"],"sourceRoot":""}