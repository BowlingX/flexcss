{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///js/flexcss.min.js","webpack:///webpack/bootstrap d19e6c04019190bf33eb","webpack:///./src/main/util/Util.js","webpack:///./src/main/util/Settings.js","webpack:///./src/main/DestroyableWidget.js","webpack:///./src/main/Widget.js","webpack:///./src/main/util/Event.js","webpack:///./src/main/Tooltip.js","webpack:///./src/main/Modal.js","webpack:///./src/main/Form.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/main/Dropdown.js","webpack:///./src/main/LightBox.js","webpack:///./src/main/OffCanvas.js","webpack:///./src/main/Showcase.js","webpack:///./src/main/Toggleable.js","webpack:///./src/main/modules/All.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","value","PFX","COL_LEFT_CLASS","COL_RIGHT_CLASS","COL_BOTTOM_CLASS","Util","element","type","callback","thisFunction","e","apply","toLowerCase","name","addEventListener","t","undefined","el","document","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","style","parent","now","parentNode","func","s4","Math","floor","random","toString","substring","doc","inner","width","height","outer","position","top","left","visibility","overflow","appendChild","body","w1","offsetWidth","w2","clientWidth","removeChild","ev","capture","event","removeEventListener","offsetHeight","str","replace","g","toUpperCase","input","JSON","parse","stringify","base","attrs","attributes","attr","s","dashToCamelCase","nodeName","val","nodeValue","hasOwnProperty","parseInt","elementToPosition","collisionContainer","centerHorizontal","positionTop","amountTop","amountLeft","parentsUntil","HTMLElement","window","getComputedStyle","isPartOfNode","offsetTop","offsetLeft","targetPosition","getBoundingClientRect","elementRect","colRect","targetTop","targetRight","right","isCollisionTop","isCollisionBottom","innerHeight","isCollisionLeft","targetLeft","isCollisionRight","classList","remove","calcTop","calcLeft","add","rightPosition","leftCentered","collisionCentered","cssText","optionalOffset","scrollIntoView","scrolledY","scrollY","pageYOffset","scroll","_interopRequireDefault","obj","__esModule","default","_extends","assign","arguments","source","_Util","_Util2","FLEXCSS_GLOBAL_SETTINGS","smallBreakpoint","scrollbarUpdateNodes","darkenerFadeDelay","canvasToggledClass","FLEXCSS_CONST_IS_IOS","FLEXCSS_CONST_IS_TOUCH","FLEXCSS_CONST_IS_IE","FLEXCSS_CONST_TAB_EVENT","init","FLEXCSS_CONST_SCROLLBAR_WIDTH","getScrollBarWidth","FLEXCSS_CONST_TRANSITION_EVENT","whichTransitionEndEvent","readyState","Settings","settings","navigator","userAgent","match","msMaxTouchPoints","DestroyableWidget","listeners","forEach","listener","args","push","_typeof","Symbol","constructor","Widget","_this","asyncContent","_isWidget","getElementById","hfWidgetInstance","setAsync","Promise","bind","finalContent","async","self","CustomEvent","params","evt","bubbles","cancelable","detail","createEvent","initCustomEvent","Event","EventHandler","defaultOptions","options","withDetail","originalEvent","o","dispatchEvent","withOptions","fire","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_DestroyableWidget2","_DestroyableWidget3","CLASS_NAMES_TOOLTIP","CLASS_NAMES_OPEN","ATTR_DATA_CLASSNAME","Tooltip","_DestroyableWidget","DelegateContainer","container","tooltipContainer","containerClass","selectorAttribute","text","removeTitle","positionRelative","trim","_restoreClassNames","innerHTML","flexTooltipCurrentTarget","oldTitle","removeAttribute","setupPositionNearby","classNames","maybeTargetClass","getAttribute","className","join","setAttribute","hasAttribute","createTooltip","removeTooltip","EVENT_MODAL_ASYNC_TARGET_LOADED","EVENT_MODAL_INIT","EVENT_MODAL_OPENED","EVENT_MODAL_BEFORE_CLOSED","EVENT_MODAL_CLOSED","_Settings","_Settings2","_Event","_Event2","_Widget","_Widget2","HTML_ELEMENT","documentElement","KEY_ESC","ATTR_CREATE_NEW","ATTR_CLOSE","ATTR_NAME","CLS_CONTAINER_CURRENT","CLS_OPEN","CLS_CURRENT","CLS_PART_OF_STACK","CLS_MODAL_OPEN","CLS_MODAL_CONTAINER","CLS_ANIM_END","CLS_LOADER_CONTAINER","CLS_LOADER","Modal","currentOpen","loading","closeOnEscape","closeOnBackgroundClick","destroyOnFinish","fixedContainer","containerClassNames","eventContainer","eventFunction","dataMainPageContainer","currentScrollTop","modalContainer","n","_modalInstances","indexOf","splice","setTimeout","scrollTop","node","paddingRight","applyOptionsFromElement","copy","KeyboardEvent","getTabEvent","preventDefault","dispatchAndFire","defaultPrevented","_finishState","prevModal","switchModals","dispatch","withOriginal","_removeModalFromStack","lastContainer","childNodes","cl","destroy","co","last","prefixedAnimateEvent","_finishAnim","instances","isCurrent","contains","map","padding","getScrollbarWidth","d","foundInstance","flexModalInstance","targetContent","future","widget","hasTarget","isHtmlElement","isWidget","findWidget","newInstance","setDestroyOnFinish","fromEvent","then","registerEvents","getModalContainer","stopImmediatePropagation","modalContainerClasses","closeModalFunction","ce","close","loader","toggleLoader","show","loaderLoader","handleScrollbar","getAsync","r","result","DocumentFragment","guid","resolve","thisEl","open","modal","internal","maybeEvent","delegate","delegateContainer","createWidget","v","isEmptyContainer","MutationObserver","observer","mutations","disconnect","observe","childList","keyCode","lastModal","EVENT_FORM_AJAX_COMPLETED","EVENT_FORM_AFTER_AJAX_SUBMIT","EVENT_FORM_SUBMIT","EVENT_FORM_READY","_isomorphicFetch","_key","_Tooltip","_Tooltip2","LOADING_CLASS","DATA_ELEMENT_INVALID","REMOTE","REMOTE_ACTION","ATTR_DISABLE_INLINE","ATTR_DISABLE_REALTIME","ATTR_VALIDATOR","ATTR_DATA_CUSTOM_MESSAGE","ATTR_DATA_CUSTOM_LABEL","ATTR_VALIDATE_VISIBILITY","ATTR_ERROR_TARGET_ID","ATTR_DEPENDS","CONST_USE_JSON","CONST_REALTIME_EVENT","FOCUS_TOOLTIP_DELAY","CLICK_TOOLTIP_DELAY","Form","form","_this3","HTMLFormElement","tooltips","currentValidationFuture","createTooltips","appendError","ajaxSubmitType","ajaxJsonContentType","inlineValidation","realtime","realtimeTimeout","formatErrorTooltip","error","inputErrorClass","containerErrorClass","fetchOptions","credentials","scrollToElementDiff","_validators","globalValidators","_remoteValidationFunction","initFormValidation","thisForm","shouldUseAjax","ajaxPostUrl","location","href","useJson","_formStopLoading","submit","defaultHeaders","X-Requested-With","Content-Type","headers","method","serverCall","fetch","serialize","FormData","globalRemoteValidationFunction","response","selectors","inputs","querySelectorAll","Array","exists","field","focus","fields","NodeList","_handleValidation","foundAnyError","toValidateFields","scoped","arr","_createArrayFromInvalidFieldList","isLocalInvalid","_focusElement","validation","_customValidationsForElements","validateCustomFields","thisToValidateFields","from","concat","checkedFields","foundInvalidFields","prepareErrors","firstInvalidField","activeElement","_handleTooltipHideClickAfterChange","showAndOrCreateTooltip","validity","globalErrorMessageHandler","keys","labels","getForm","invalid","labelsIndex","labelEl","_markElementInvalid","_markElementValid","filter","HTMLFieldSetElement","thisParent","errors","inputsWithErrorClasses","elementErrorIndex","inputErrorIndex","validator","validationRef","futures","fieldsLength","iVal","_shouldNotValidateField","customError","valid","_runValidation","console","warn","all","allFutures","l","fI","_removeElementErrors","removeAllErrors","handleAdditionalLabels","isInvalid","thisLabelGroup","additionalLabels","group","removeErrors","labelGroups","invalidFields","errorTarget","_findErrorTarget","flexFormsSavedValidity","_setupErrorMessages","msg","validationMessage","insertAdjacentHTML","flexFormsSavedValidationMessage","setCustomValidity","linkedFields","thisField","_isElementInvalidElement","_handleLabels","_formatErrorTooltip","fieldSelector","slice","_checkIsValidRealtimeElement","clearKeyDownTimeout","KEYDOWN_RUNNING","clearTimeout","TIMEOUT_KEYDOWN","_checkIsValidBlurFocusElement","_checkIsValidInlineCheckElement","_this2","invalidEvent","addEventOnce","handleInvalid","_formLoading","_checkIsInvalid","_handleSubmit","_formIsLoading","isStillTarget","_handleTooltipInline","dependentFields","_getDependentFields","flexcssKeepTooltips","_submitListener","scrollToElement","submitListener","submitEvent","checkValidity","_getInvalidElements","firstError","_submitFunction","isVisible","list","foundTarget","errorFunc","selector","forms","customMsg","normalizeName","String","test","normalizeValue","Headers","append","getOwnPropertyNames","consumed","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","support","Blob","isPrototypeOf","_bodyBlob","formData","_bodyFormData","arrayBuffer","ArrayBuffer","Error","rejected","decode","json","normalizeMethod","upcased","methods","Request","url","mode","referrer","split","bytes","shift","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","Response","bodyInit","status","ok","statusText","values","getAll","has","set","thisArg","clone","redirectStatuses","redirect","RangeError","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","withCredentials","responseType","setRequestHeader","send","polyfill","EVENT_DROPDOWN_CLOSED","ATTR_CC","ATTR_DARKENER","DARKENER_INIT","ATTR_DATA_TARGET","ATTR_CLOSE_DROPDOWN","STATE_LOADING","CLS_DARKENER_DROPDOWN","CLS_DROPDOWN","Dropdown","Darkener","currentTarget","darkener","destroyOnClose","targetHas","parentHas","targetIsCurrent","_delegateFunction","isLoading","createDropdown","cls","darkenerInstance","flexDarkenerInstance","thisCurrentOpen","getTransitionEvent","toggleDarkenerToggler","thisWidget","data","dropdownContainerElement","dropdownContent","isAbsolute","flexCollisionContainer","collisionC","toggle","selfTarget","_Modal","_Modal2","ATTR_MAX_WIDTH","ATTR_MAX_HEIGHT","ATTR_SRC","CLS_HAS_PREV","CLS_HAS_NEXT","CLS_LOADING","ATTR_NO_THUMBNAIL","ATTR_DATA_HREF","ATTR_HREF","KEY_NEXT","KEY_PREV","LightBox","AttributeSelector","ModalAppend","thisDelegateContainer","_modalAppend","_resizeEvent","_keyboardNextEvent","_future","_nextFuture","_imageContainer","_modalContainerDiv","_contentContainer","_closerContainerDiv","_delegateContainer","_attributeSelector","_widget","_isOpen","img","_isLoading","registerPrevNextEvents","closeOnLast","onNext","onClose","getNext","getPrev","onSwitchImage","children","findImmediateNextTarget","nextElementSibling","previousElementSibling","onOpen","validTarget","parentIsValid","direction","next","switchImage","_","hasPrev","hasNext","hasPrevClass","hasNextClass","isIE","nextThumb","nextHighRes","nextSource","src","nextImgObject","Image","backgroundImage","_setupMaxWidthHeight","_calculateContainer","highRes","_setupPrevNextStates","thisThumbnail","thisImgHighResolution","highImageObj","_getSrc","thumbnail","imgHighResolution","imgSrc","imageObj","pageX","TouchEvent","changedTouches","rect","imgX","wrapperWidth","posX","switchImageByDirection","_runOptionalClose","fromWidget","loadedImage","nextMaxWidth","nextMaxHeight","maxWidth","maxHeight","ATTR_CLOSE_SIDEBAR","ATTR_TARGET","TOGGLE_CLASS","INIT_CLASS","OPEN_CLASS","HIDE_FACTOR","OffCanvas","NavigationId","factor","disableTouch","touched","navigationContainer","DARKENER_CLASS_TOGGLE","DARKENER_CLASS_INSTANT_TOGGLE","resetStyles","transform","webkitTransform","webkitTransition","shouldNotTouch","innerWidth","darkenerClassToggle","darkenerClassToggleInstant","navigationContainerId","requestAnimationFrame","touches","clientX","mustHide","x","calc","bounds","compare","_remove","_removeInstant","bodyClass","darkenerClass","navigationControllerClassList","_toggle","Showcase","innerContainer","containerWidth","parentContainerWidth","diff","lastX","lastMove","nextX","normalizedRight","abs","moveX","elements","EVENT_TAB_OPENED","EVENT_TAB_CLOSED","ACTIVE_CLASS","ATTR_TOGGLE_LIST","Toggleable","ContainerId","refId","ref","toggleTarget","_listener","querySelector","maybeToggleNode","parentClassList","elClassList","failure","targetRef","_handleLoaded","reason","_Form","_Form2","_Toggleable","_Toggleable2","_OffCanvas","_OffCanvas2","_Dropdown","_Dropdown2","_LightBox","_LightBox2","_Showcase","_Showcase2"],"mappings":"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","file":"js/flexcss.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlexCss\"] = factory();\n\telse\n\t\troot[\"FlexCss\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlexCss\"] = factory();\n\telse\n\t\troot[\"FlexCss\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"../\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(16);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PFX = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\t\n\tvar COL_LEFT_CLASS = 'is-collision-left';\n\t\n\tvar COL_RIGHT_CLASS = 'is-collision-right';\n\t\n\tvar COL_BOTTOM_CLASS = 'is-collision-bottom';\n\t\n\t/**\n\t * Provides shared DOM-Utility functions\n\t */\n\t\n\tvar Util = (function () {\n\t    function Util() {\n\t        _classCallCheck(this, Util);\n\t    }\n\t\n\t    _createClass(Util, null, [{\n\t        key: \"prefixedAnimateEvent\",\n\t\n\t        /**\n\t         * Will register the right animation event based on browser\n\t         * @param element\n\t         * @param type\n\t         * @param callback\n\t         */\n\t        value: function prefixedAnimateEvent(element, type, callback) {\n\t            var thisFunction = function thisFunction(e) {\n\t                callback.apply(element, [e, thisFunction]);\n\t            };\n\t\n\t            for (var p = 0; p < PFX.length; p++) {\n\t                if (!PFX[p]) {\n\t                    type = type.toLowerCase();\n\t                }\n\t                var name = PFX[p] + type;\n\t                element.addEventListener(name, thisFunction, true);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Get correct transitionend event\n\t         * @returns {String}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: \"whichTransitionEndEvent\",\n\t        value: function whichTransitionEndEvent() {\n\t            var t = undefined;\n\t            var el = document.createElement('fake');\n\t\n\t            var transitions = {\n\t                'transition': 'transitionend',\n\t                'OTransition': 'oTransitionEnd',\n\t                'MozTransition': 'transitionend',\n\t                'WebkitTransition': 'webkitTransitionEnd'\n\t            };\n\t\n\t            for (t in transitions) {\n\t                if (el.style[t] !== undefined) {\n\t                    return transitions[t];\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Check if target is part of parent node\n\t         * @param target\n\t         * @param parent\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: \"isPartOfNode\",\n\t        value: function isPartOfNode(target, parent) {\n\t            if (!target || !parent) {\n\t                return false;\n\t            }\n\t            var now = target;\n\t            while (now !== parent && now !== null) {\n\t                if (now === parent) {\n\t                    break;\n\t                }\n\t                now = now.parentNode;\n\t            }\n\t            return now !== null;\n\t        }\n\t\n\t        /**\n\t         * Walks the tree until func returns true for given argument\n\t         * @param target\n\t         * @param func\n\t         * @returns {boolean|HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: \"parentsUntil\",\n\t        value: function parentsUntil(target, func) {\n\t            if (!target) {\n\t                return false;\n\t            }\n\t            var now = target;\n\t            while (!func(now) && now !== null) {\n\t                now = now.parentNode;\n\t            }\n\t\n\t            return now;\n\t        }\n\t\n\t        /**\n\t         * Generates a unique id\n\t         * @return {String}\n\t         */\n\t\n\t    }, {\n\t        key: \"guid\",\n\t        value: function guid() {\n\t            function s4() {\n\t                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t            }\n\t\n\t            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\t        }\n\t\n\t        /**\n\t         * Detects scrollbar width\n\t         * @see http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: \"getScrollBarWidth\",\n\t        value: function getScrollBarWidth() {\n\t\n\t            var doc = global.document,\n\t                inner = doc.createElement('p');\n\t            inner.style.width = \"100%\";\n\t            inner.style.height = \"200px\";\n\t\n\t            var outer = doc.createElement('div');\n\t            outer.style.position = \"absolute\";\n\t            outer.style.top = \"0px\";\n\t            outer.style.left = \"0px\";\n\t            outer.style.visibility = \"hidden\";\n\t            outer.style.width = \"200px\";\n\t            outer.style.height = \"150px\";\n\t            outer.style.overflow = \"hidden\";\n\t            outer.appendChild(inner);\n\t\n\t            doc.body.appendChild(outer);\n\t            var w1 = inner.offsetWidth;\n\t            outer.style.overflow = 'scroll';\n\t            var w2 = inner.offsetWidth;\n\t            if (w1 === w2) {\n\t                w2 = outer.clientWidth;\n\t            }\n\t            doc.body.removeChild(outer);\n\t\n\t            return w1 - w2;\n\t        }\n\t\n\t        /**\n\t         * Run an event once\n\t         * @param {String} ev\n\t         * @param {HTMLElement|HTMLDocument} target\n\t         * @param {Function} func\n\t         * @param {boolean} [capture]\n\t         * @return Function created listener\n\t         */\n\t\n\t    }, {\n\t        key: \"addEventOnce\",\n\t        value: function addEventOnce(ev, target, func, capture) {\n\t            var thisFunction = function thisFunction(event) {\n\t                func(event, func);\n\t                target.removeEventListener(ev, thisFunction, capture);\n\t            };\n\t            target.addEventListener(ev, thisFunction, capture);\n\t            return thisFunction;\n\t        }\n\t\n\t        /**\n\t         * Checks if an element is visible\n\t         * @param {HTMLElement} element\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: \"isVisible\",\n\t        value: function isVisible(element) {\n\t            return element.offsetWidth > 0 && element.offsetHeight > 0;\n\t        }\n\t\n\t        /**\n\t         * Creates a camelCaseRepresentation of a dashed string\n\t         * @param {String} str\n\t         * @returns String\n\t         */\n\t\n\t    }, {\n\t        key: \"dashToCamelCase\",\n\t        value: function dashToCamelCase(str) {\n\t            return str.replace(/-([a-z])/g, function (g) {\n\t                return g[1].toUpperCase();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates a copy of `input`\n\t         * @param {*} input\n\t         * @return *\n\t         */\n\t\n\t    }, {\n\t        key: \"copy\",\n\t        value: function copy(input) {\n\t            return JSON.parse(JSON.stringify(input));\n\t        }\n\t\n\t        /**\n\t         * Reads options from element (data attributes) and applies to base\n\t         * @param {HTMLElement} element\n\t         * @param {Object} base\n\t         * @return {Object}\n\t         */\n\t\n\t    }, {\n\t        key: \"applyOptionsFromElement\",\n\t        value: function applyOptionsFromElement(element, base) {\n\t            if (!element) {\n\t                return base;\n\t            }\n\t            var attrs = element.attributes;\n\t            for (var i = 0; i < attrs.length; i++) {\n\t                var attr = attrs[i];\n\t                if (attr) {\n\t                    var s = Util.dashToCamelCase(attr.nodeName.replace('data-', '')),\n\t                        val = attr.nodeValue;\n\t                    if (base.hasOwnProperty(s)) {\n\t                        // skip functions\n\t                        if (typeof base[s] === 'function') {\n\t                            continue;\n\t                        }\n\t                        if (typeof base[s] === 'boolean') {\n\t                            base[s] = parseInt(val || 1) === 1;\n\t                        } else {\n\t                            base[s] = val;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return base;\n\t        }\n\t\n\t        /**\n\t         * Will position an element directly at given target\n\t         * Is aware of a given collision container to detect edges\n\t         * Will put elementToPosition either to left, center or right edge (prefer right)\n\t         *  and either to bottom or top (prefers bottom)\n\t         *\n\t         * You may overwrite preferred positioned with `centerHorizontal` and `positionTop`\n\t         *\n\t         * @param {HTMLElement|ClientRect} target the target container to align to\n\t         * @param {HTMLElement} elementToPosition the element to position\n\t         * @param {HTMLElement} collisionContainer the outer container to prevent collisions\n\t         * @param {bool} [centerHorizontal] set true to center element, otherwise it's put on the right border by default\n\t         * @param {bool} [positionTop] flip top, by default element is positioned to the bottom.\n\t         * @returns {HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: \"setupPositionNearby\",\n\t        value: function setupPositionNearby(target, elementToPosition, collisionContainer, centerHorizontal, positionTop) {\n\t\n\t            // determine relative offsets\n\t            var amountTop = 0,\n\t                amountLeft = 0;\n\t            Util.parentsUntil(target.parentNode, function (el) {\n\t                if (!(el instanceof HTMLElement)) {\n\t                    return false;\n\t                }\n\t                var style = window.getComputedStyle(el);\n\t                if (Util.isPartOfNode(elementToPosition, el)) {\n\t                    if (style && style.position === 'relative') {\n\t                        amountTop += el.offsetTop || 0;\n\t                        amountLeft += el.offsetLeft || 0;\n\t                    }\n\t                    return false;\n\t                } else {\n\t                    return true;\n\t                }\n\t            });\n\t\n\t            var targetPosition = target instanceof HTMLElement ? target.getBoundingClientRect() : target,\n\t                elementRect = elementToPosition.getBoundingClientRect(),\n\t                colRect = collisionContainer.getBoundingClientRect(),\n\t                targetTop = targetPosition.top - amountTop,\n\t                targetRight = targetPosition.right,\n\t                isCollisionTop = targetTop - elementRect.height <= 0,\n\t                isCollisionBottom = window.innerHeight < targetTop + amountTop + targetPosition.height + elementRect.height,\n\t                isCollisionLeft = targetRight < elementRect.width,\n\t                targetLeft = targetPosition.left,\n\t                isCollisionRight = targetLeft + elementRect.width > colRect.width,\n\t                classList = elementToPosition.classList;\n\t\n\t            classList.remove(COL_RIGHT_CLASS);\n\t            classList.remove(COL_LEFT_CLASS);\n\t            classList.remove(COL_BOTTOM_CLASS);\n\t\n\t            var calcTop = undefined,\n\t                calcLeft = undefined;\n\t            if (isCollisionLeft && !isCollisionRight) {\n\t                // put element to left if collision with left\n\t                calcLeft = targetPosition.left - colRect.left - amountLeft + 'px';\n\t                classList.add(COL_LEFT_CLASS);\n\t            } else {\n\t                // maybe center if no collision with either side\n\t                var rightPosition = targetRight - elementRect.width - colRect.left - amountLeft + 'px',\n\t                    leftCentered = (targetLeft + targetPosition.width / 2 - elementRect.width / 2 || 0) - colRect.left,\n\t                    collisionCentered = leftCentered + elementRect.width > colRect.width;\n\t                if (centerHorizontal && !collisionCentered) {\n\t                    calcLeft = leftCentered + 'px';\n\t                } else {\n\t                    classList.add(COL_RIGHT_CLASS);\n\t                    calcLeft = rightPosition;\n\t                }\n\t            }\n\t\n\t            if (isCollisionBottom || positionTop && !isCollisionTop) {\n\t                // Put Element on top if collision\n\t                calcTop = targetTop - elementRect.height - colRect.top + 'px';\n\t                classList.add(COL_BOTTOM_CLASS);\n\t            } else {\n\t                calcTop = targetTop + targetPosition.height - colRect.top + 'px';\n\t            }\n\t\n\t            elementToPosition.style.cssText = \"top:\" + calcTop + \";left:\" + calcLeft + \";\";\n\t\n\t            return elementToPosition;\n\t        }\n\t\n\t        /**\n\t         * Brings a given element into viewport\n\t         * @param {HTMLElement} el\n\t         * @param {int|function}[optionalOffset]\n\t         */\n\t\n\t    }, {\n\t        key: \"scrollToElement\",\n\t        value: function scrollToElement(el, optionalOffset) {\n\t            el.scrollIntoView();\n\t            // optionally use a additional scrollDif\n\t            if (optionalOffset) {\n\t                if (typeof optionalOffset === 'function') {\n\t                    optionalOffset = optionalOffset();\n\t                }\n\t                if (optionalOffset > 0) {\n\t                    var scrolledY = window.scrollY || window.pageYOffset;\n\t                    if (scrolledY) {\n\t                        window.scroll(0, scrolledY - optionalOffset);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Util;\n\t})();\n\t\n\texports.default = Util;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// we attach global settings to global once because settings might be shared a lot of times trough the application\n\t// Maybe find a better way to handle that scenario\n\tif (!global.FLEXCSS_GLOBAL_SETTINGS) {\n\t    (function () {\n\t\n\t        global.FLEXCSS_GLOBAL_SETTINGS = {\n\t            // defined breakpoint for small devices < n\n\t            smallBreakpoint: 768,\n\t            // nodes that should be updated when no scrollbar is expected\n\t            scrollbarUpdateNodes: global.document.body !== null ? [global.document.body] : [],\n\t            // additional Delay until darkener is fully hidden\n\t            darkenerFadeDelay: 100,\n\t            // class that is added if canvas has been toggled\n\t            canvasToggledClass: 'toggled-canvas'\n\t        };\n\t\n\t        global.FLEXCSS_CONST_IS_IOS = null;\n\t\n\t        global.FLEXCSS_CONST_IS_TOUCH = null;\n\t\n\t        global.FLEXCSS_CONST_IS_IE = null;\n\t\n\t        global.FLEXCSS_CONST_TAB_EVENT = 'click';\n\t\n\t        var init = function init() {\n\t            // Measure scrollbar width\n\t            global.FLEXCSS_CONST_SCROLLBAR_WIDTH = _Util2.default.getScrollBarWidth();\n\t            // detect right transition end event\n\t            global.FLEXCSS_CONST_TRANSITION_EVENT = _Util2.default.whichTransitionEndEvent();\n\t        };\n\t\n\t        if (global.document.readyState !== 'loading') {\n\t            init();\n\t        } else {\n\t            // it's possible that global.document.body is not available if the document is not\n\t            // loaded completely\n\t            document.addEventListener('DOMContentLoaded', function () {\n\t                init();\n\t            });\n\t        }\n\t    })();\n\t}\n\t\n\t/**\n\t * Utility class that setups global settings\n\t */\n\t\n\tvar Settings = (function () {\n\t    function Settings() {\n\t        _classCallCheck(this, Settings);\n\t    }\n\t\n\t    _createClass(Settings, null, [{\n\t        key: 'setup',\n\t\n\t        /**\n\t         * Setup global settings, overwrite default values\n\t         * @param {Object} settings\n\t         */\n\t        value: function setup(settings) {\n\t            _extends(global.FLEXCSS_GLOBAL_SETTINGS, settings);\n\t        }\n\t\n\t        /**\n\t         * Access to global settings\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'get',\n\t        value: function get() {\n\t            return global.FLEXCSS_GLOBAL_SETTINGS;\n\t        }\n\t\n\t        /**\n\t         * Detects a IOS Device, caches subsequent calls\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isIosDevice',\n\t        value: function isIosDevice() {\n\t            if (!global.FLEXCSS_CONST_IS_IOS) {\n\t                global.FLEXCSS_CONST_IS_IOS = global.navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n\t            }\n\t\n\t            return global.FLEXCSS_CONST_IS_IOS;\n\t        }\n\t\n\t        /**\n\t         * Detects a touch device, caches subsequent calls\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isTouchDevice',\n\t        value: function isTouchDevice() {\n\t            if (!global.FLEXCSS_CONST_IS_TOUCH) {\n\t                global.FLEXCSS_CONST_IS_TOUCH = 'ontouchstart' in window || !!global.navigator.msMaxTouchPoints;\n\t            }\n\t            return global.FLEXCSS_CONST_IS_TOUCH;\n\t        }\n\t\n\t        /**\n\t         * Checks if current browser is Internet Explorer\n\t         * @returns {boolean|*}\n\t         */\n\t\n\t    }, {\n\t        key: 'isIE',\n\t        value: function isIE() {\n\t            if (!global.FLEXCSS_CONST_IS_IE) {\n\t                global.FLEXCSS_CONST_IS_IE = \"ActiveXObject\" in window;\n\t            }\n\t            return global.FLEXCSS_CONST_IS_IE;\n\t        }\n\t\n\t        /**\n\t         * @returns {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTransitionEvent',\n\t        value: function getTransitionEvent() {\n\t            return global.FLEXCSS_CONST_TRANSITION_EVENT;\n\t        }\n\t\n\t        /**\n\t         * @returns {int}\n\t         */\n\t\n\t    }, {\n\t        key: 'getScrollbarWidth',\n\t        value: function getScrollbarWidth() {\n\t            return global.FLEXCSS_CONST_SCROLLBAR_WIDTH;\n\t        }\n\t\n\t        /**\n\t         * @returns {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTabEvent',\n\t        value: function getTabEvent() {\n\t            return global.FLEXCSS_CONST_TAB_EVENT;\n\t        }\n\t    }]);\n\t\n\t    return Settings;\n\t})();\n\t\n\texports.default = Settings;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t'use strict'\n\t\n\t/**\n\t * Provides a Basic Widget\n\t */\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DestroyableWidget = (function () {\n\t    function DestroyableWidget() {\n\t        _classCallCheck(this, DestroyableWidget);\n\t\n\t        this.listeners = [];\n\t    }\n\t\n\t    /**\n\t     * Destroys a Widget\n\t     */\n\t\n\t    _createClass(DestroyableWidget, [{\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            this.listeners.forEach(function (listener) {\n\t                listener.element.removeEventListener.apply(listener.element, listener.args);\n\t            });\n\t            this.listeners = [];\n\t        }\n\t\n\t        /**\n\t         * Adds an event and registers it later to remove bindings\n\t         * @param {HTMLElement} element\n\t         * @param {String} name\n\t         * @param {Function} listener\n\t         * @param {boolean} [capture]\n\t         * @returns {Function}\n\t         */\n\t\n\t    }, {\n\t        key: 'addEventListener',\n\t        value: function addEventListener(element, name, listener, capture) {\n\t            this.listeners.push({\n\t                element: element,\n\t                args: [name, listener, capture]\n\t            });\n\t            element.addEventListener(name, listener, capture);\n\t            return listener;\n\t        }\n\t    }]);\n\t\n\t    return DestroyableWidget;\n\t})();\n\t\n\texports.default = DestroyableWidget;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Widget\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict'\n\t\n\t/**\n\t * A Widget provides async content on a specific target (e.g. a modal link)\n\t */\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\t\n\tvar Widget = (function () {\n\t\n\t  /**\n\t   * Creates a new Widget\n\t   * @param [element], optional define the content of widget\n\t   */\n\t\n\t  function Widget(element) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Widget);\n\t\n\t    /**\n\t     *\n\t     * @type {Promise}\n\t     */\n\t    this.asyncContent = null;\n\t\n\t    /**\n\t     * @type {boolean}\n\t     */\n\t    this._isWidget = true;\n\t\n\t    if (element) {\n\t      /**\n\t       * @type {HTMLElement}\n\t       */\n\t      this.element = element instanceof HTMLElement ? element : global.document.getElementById(element);\n\t      if (this.element) {\n\t        this.element.hfWidgetInstance = this;\n\t        this.setAsync((function () {\n\t          return new Promise((function (s) {\n\t            s(_this.element);\n\t          }).bind(_this));\n\t        }).bind(this));\n\t      } else {\n\t        throw 'Could not found element with ID: ' + element;\n\t      }\n\t    }\n\t    /**\n\t     * The final resulted content that a widget did create (e.g. a modal container)\n\t     * @type {HTMLElement}\n\t     */\n\t    this.finalContent = null;\n\t  }\n\t\n\t  /**\n\t   *\n\t   * @returns {Promise}\n\t   */\n\t\n\t  _createClass(Widget, [{\n\t    key: 'getAsync',\n\t    value: function getAsync() {\n\t      return this.asyncContent();\n\t    }\n\t\n\t    /**\n\t     * @param {Function.<Promise>} async\n\t     * @returns {Widget}\n\t     */\n\t\n\t  }, {\n\t    key: 'setAsync',\n\t    value: function setAsync(async) {\n\t      this.asyncContent = async;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {HTMLElement}\n\t     */\n\t\n\t  }, {\n\t    key: 'getFinalContent',\n\t    value: function getFinalContent() {\n\t      return this.finalContent;\n\t    }\n\t\n\t    /**\n\t     * @param {HTMLElement} element\n\t     * @returns {Widget}\n\t     */\n\t\n\t  }, {\n\t    key: 'setElement',\n\t    value: function setElement(element) {\n\t      this.element = element;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Destroys the generated content of this widget\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t\n\t      if (this.finalContent && this.finalContent.parentNode) {\n\t        this.finalContent.parentNode.removeChild(this.finalContent);\n\t        return true;\n\t      }\n\t\n\t      delete this.element;\n\t      delete this.asyncContent;\n\t      delete this.finalContent;\n\t\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Will find a widget on an Element\n\t     * @param {HTMLElement} element\n\t     * @returns {Widget|undefined}\n\t     */\n\t\n\t  }], [{\n\t    key: 'findWidget',\n\t    value: function findWidget(element) {\n\t      return element ? element.hfWidgetInstance : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a given object is an instance\n\t     * @param {Object} self\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'isWidget',\n\t    value: function isWidget(self) {\n\t      return self instanceof Widget || (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object' && self.hasOwnProperty('_isWidget');\n\t    }\n\t  }]);\n\t\n\t  return Widget;\n\t})();\n\t\n\texports.default = Widget;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t/*global CustomEvent*/\n\t\n\t'use strict'\n\t\n\t// polyfill for custom events to make thinks work in IE\n\t// The needed polyfill is so small that I embedded it here\n\t;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvoid (function () {\n\t    if (!global.CustomEvent || typeof global.CustomEvent !== 'function') {\n\t        var CustomEvent;\n\t        CustomEvent = function (event, params) {\n\t            var evt;\n\t            params = params || {\n\t                bubbles: false,\n\t                cancelable: false,\n\t                detail: undefined\n\t            };\n\t            evt = document.createEvent(\"CustomEvent\");\n\t            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t            return evt;\n\t        };\n\t        CustomEvent.prototype = global.Event.prototype;\n\t        global.CustomEvent = CustomEvent;\n\t    }\n\t})();\n\t/**\n\t * Simpler Event dispatching\n\t */\n\t\n\tvar EventHandler = (function () {\n\t\n\t    /**\n\t     * @param {HTMLElement} target\n\t     * @param {String} name\n\t     */\n\t\n\t    function EventHandler(target, name) {\n\t        _classCallCheck(this, EventHandler);\n\t\n\t        this.target = target;\n\t        this.defaultOptions = {\n\t            bubbles: true,\n\t            cancelable: true\n\t        };\n\t\n\t        this.name = name;\n\t    }\n\t\n\t    /**\n\t     * Set more options\n\t     * @param {Object} options\n\t     * @returns {EventHandler}\n\t     */\n\t\n\t    _createClass(EventHandler, [{\n\t        key: 'withOptions',\n\t        value: function withOptions(options) {\n\t            _extends(this.defaultOptions, options || {});\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Call with the originalEvent\n\t         * @param {Event} e\n\t         * @returns {EventHandler}\n\t         */\n\t\n\t    }, {\n\t        key: 'withOriginal',\n\t        value: function withOriginal(e) {\n\t            return this.withDetail({\n\t                originalEvent: e\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Extends the detail part of the event\n\t         * @param {Object} o\n\t         * @returns {EventHandler}\n\t         */\n\t\n\t    }, {\n\t        key: 'withDetail',\n\t        value: function withDetail(o) {\n\t            if (!this.defaultOptions.detail) {\n\t                this.defaultOptions.detail = {};\n\t            }\n\t            _extends(this.defaultOptions.detail, o);\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * @returns {Window.CustomEvent}\n\t         */\n\t\n\t    }, {\n\t        key: 'fire',\n\t        value: function fire() {\n\t            var e = new CustomEvent(this.name, this.defaultOptions);\n\t            if (this.target) {\n\t                this.target.dispatchEvent(e);\n\t            }\n\t            return e;\n\t        }\n\t    }]);\n\t\n\t    return EventHandler;\n\t})();\n\t\n\tvar Event = (function () {\n\t    function Event() {\n\t        _classCallCheck(this, Event);\n\t    }\n\t\n\t    _createClass(Event, null, [{\n\t        key: 'dispatch',\n\t\n\t        /**\n\t         * Prepares to dispatch a custom event (without firing)\n\t         * @param {HTMLElement} target\n\t         * @param {String} name\n\t         * @returns {EventHandler}\n\t         */\n\t        value: function dispatch(target, name) {\n\t            return new EventHandler(target, name);\n\t        }\n\t\n\t        /**\n\t         * Dispatches a custom event and fires it directly\n\t         * @param {HTMLElement} target\n\t         * @param {String} name\n\t         * @param {Object} [options]\n\t         * @returns {Window.CustomEvent}\n\t         */\n\t\n\t    }, {\n\t        key: 'dispatchAndFire',\n\t        value: function dispatchAndFire(target, name, options) {\n\t            return new EventHandler(target, name).withOptions(options).fire();\n\t        }\n\t    }]);\n\t\n\t    return Event;\n\t})();\n\t\n\texports.default = Event;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Tooltip\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _DestroyableWidget2 = __webpack_require__(3);\n\t\n\tvar _DestroyableWidget3 = _interopRequireDefault(_DestroyableWidget2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar CLASS_NAMES_TOOLTIP = 'tooltip-container';\n\t/**\n\t * @type {string}\n\t */\n\tvar CLASS_NAMES_OPEN = 'open';\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_DATA_CLASSNAME = 'data-class';\n\t\n\t/**\n\t * @type {HTMLDocument}\n\t */\n\tvar doc = global.document;\n\t\n\t/**\n\t * Simple Tooltip\n\t */\n\t\n\tvar Tooltip = (function (_DestroyableWidget) {\n\t    _inherits(Tooltip, _DestroyableWidget);\n\t\n\t    /**\n\t     * Creates a Tooltip\n\t     * @param {HTMLElement|String} DelegateContainer\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    function Tooltip(DelegateContainer, options) {\n\t        _classCallCheck(this, Tooltip);\n\t\n\t        /**\n\t         * The Container where possible events are captured\n\t         */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Tooltip).call(this));\n\t\n\t        _this.container = DelegateContainer instanceof HTMLElement ? DelegateContainer : doc.getElementById(DelegateContainer);\n\t\n\t        if (!_this.container) {\n\t            throw 'Could not create Tooltip, DelegateContainer not found';\n\t        }\n\t\n\t        /**\n\t         * The Container where tooltips are stored for this instance\n\t         * @type {HTMLElement}\n\t         */\n\t        _this.tooltipContainer = null;\n\t\n\t        /**\n\t         * Default Options\n\t         */\n\t        _this.options = {\n\t            containerClass: '',\n\t            selectorAttribute: 'data-tooltip'\n\t        };\n\t\n\t        _extends(_this.options, options || {});\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Creates and shows a tooltip\n\t     * @param {HTMLElement} target where is this tooltip positioned\n\t     * @param {String} text text content in tooltip, will be NOT escaped\n\t     * @param {Boolean} [removeTitle] removes title element if given\n\t     * @param {Node} [positionRelative]\n\t     */\n\t\n\t    _createClass(Tooltip, [{\n\t        key: 'createTooltip',\n\t        value: function createTooltip(target, text, removeTitle, positionRelative) {\n\t            // abort if text is empty\n\t            if (!text || text && text.trim() === '') {\n\t                return;\n\t            }\n\t            var tooltipContainer = this.tooltipContainer;\n\t\n\t            if (!tooltipContainer) {\n\t                tooltipContainer = doc.createElement('div');\n\t                this.container.appendChild(tooltipContainer);\n\t                this.tooltipContainer = tooltipContainer;\n\t            }\n\t            this._restoreClassNames(tooltipContainer, target);\n\t\n\t            tooltipContainer.style.left = 'auto';\n\t            tooltipContainer.style.top = 'auto';\n\t            tooltipContainer.innerHTML = text;\n\t            tooltipContainer.flexTooltipCurrentTarget = target;\n\t            if (removeTitle) {\n\t                target.oldTitle = text;\n\t                target.removeAttribute('title');\n\t            }\n\t\n\t            _Util2.default.setupPositionNearby(positionRelative || target, tooltipContainer, this.container, true, true);\n\t\n\t            tooltipContainer.classList.add(CLASS_NAMES_OPEN);\n\t        }\n\t    }, {\n\t        key: '_restoreClassNames',\n\t        value: function _restoreClassNames(container, target) {\n\t            // allow additional classname per tooltip on target element\n\t            var classNames = [CLASS_NAMES_TOOLTIP, this.options.containerClass],\n\t                maybeTargetClass = target.getAttribute(ATTR_DATA_CLASSNAME);\n\t            if (maybeTargetClass) {\n\t                classNames.push(maybeTargetClass);\n\t            }\n\t            container.className = classNames.join(\" \");\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * @returns {HTMLElement|null}\n\t         */\n\t\n\t    }, {\n\t        key: 'getCurrentTarget',\n\t        value: function getCurrentTarget() {\n\t            return this.tooltipContainer ? this.tooltipContainer.flexTooltipCurrentTarget : null;\n\t        }\n\t\n\t        /**\n\t         * Destroys this Widget\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            _get(Object.getPrototypeOf(Tooltip.prototype), 'destroy', this).call(this);\n\t\n\t            if (this.tooltipContainer) {\n\t                this.tooltipContainer.parentNode.removeChild(this.tooltipContainer);\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\n\t         * Removes a Tooltip on given target\n\t         * @param {HTMLElement} [target], if not given will remove current open tooltip on this instance\n\t         */\n\t\n\t    }, {\n\t        key: 'removeTooltip',\n\t        value: function removeTooltip(target) {\n\t            if (!target && this.tooltipContainer) {\n\t                target = this.tooltipContainer.flexTooltipCurrentTarget;\n\t            }\n\t            if (this.tooltipContainer) {\n\t                if (this.tooltipContainer.flexTooltipCurrentTarget !== target) {\n\t                    return;\n\t                }\n\t                this.tooltipContainer.classList.remove(CLASS_NAMES_OPEN);\n\t                delete this.tooltipContainer.flexTooltipCurrentTarget;\n\t            }\n\t            if (target && target.oldTitle) {\n\t                target.setAttribute('title', target.oldTitle);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Initilizes mouse events on container element\n\t         */\n\t\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents() {\n\t            var self = this;\n\t            this.addEventListener(this.container, 'mouseover', function (e) {\n\t                if (e.target.hasAttribute(self.options.selectorAttribute)) {\n\t                    self.createTooltip(e.target, e.target.getAttribute('title'), true);\n\t                }\n\t            });\n\t\n\t            this.addEventListener(this.container, 'mouseout', function (e) {\n\t                if (e.target.hasAttribute(self.options.selectorAttribute)) {\n\t                    self.removeTooltip(e.target);\n\t                }\n\t            });\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return Tooltip;\n\t})(_DestroyableWidget3.default);\n\t\n\texports.default = Tooltip;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Modal\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict'\n\t\n\t/*global KeyboardEvent*/\n\t\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EVENT_MODAL_ASYNC_TARGET_LOADED = exports.EVENT_MODAL_INIT = exports.EVENT_MODAL_OPENED = exports.EVENT_MODAL_BEFORE_CLOSED = exports.EVENT_MODAL_CLOSED = undefined;\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Event = __webpack_require__(5);\n\t\n\tvar _Event2 = _interopRequireDefault(_Event);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HTML_ELEMENT = global.document.documentElement;\n\tvar KEY_ESC = 27;\n\t/* Attribute Names */\n\tvar ATTR_CREATE_NEW = 'data-new-instance';\n\tvar ATTR_CLOSE = 'data-close-modal';\n\tvar ATTR_NAME = 'data-modal';\n\t\n\t/* Class names */\n\tvar CLS_CONTAINER_CURRENT = 'front';\n\tvar CLS_OPEN = 'open';\n\tvar CLS_CURRENT = 'current';\n\tvar CLS_PART_OF_STACK = 'part-of-stack';\n\tvar CLS_MODAL_OPEN = 'modal-open';\n\tvar CLS_MODAL_CONTAINER = 'modal-container';\n\tvar CLS_ANIM_END = 'modal-anim-end';\n\tvar CLS_LOADER_CONTAINER = 'loader-container';\n\tvar CLS_LOADER = 'loader';\n\t\n\t/* Events */\n\t\n\t/**\n\t * Event triggered when modal is closed\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_CLOSED = exports.EVENT_MODAL_CLOSED = 'flexcss.modal.closed';\n\t/**\n\t * Event triggered before a modal is closed, cancelable\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_BEFORE_CLOSED = exports.EVENT_MODAL_BEFORE_CLOSED = 'flexcss.modal.beforeClose';\n\t/**\n\t * Event triggered when a modal is opened\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_OPENED = exports.EVENT_MODAL_OPENED = 'flexcss.modal.opened';\n\t\n\t/**\n\t * Event triggered when modal is initilized, called on target\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_INIT = exports.EVENT_MODAL_INIT = 'flexcss.modal.init';\n\t\n\t/**\n\t * Triggered when the content of an async modal on a target is loaded, called on target\n\t * @type {string}\n\t */\n\tvar EVENT_MODAL_ASYNC_TARGET_LOADED = exports.EVENT_MODAL_ASYNC_TARGET_LOADED = 'flexcss.modal.asyncTargetLoaded';\n\t\n\t/**\n\t * A Modal Implementation\n\t */\n\t\n\tvar Modal = (function () {\n\t    function Modal(DelegateContainer, options) {\n\t        _classCallCheck(this, Modal);\n\t\n\t        var doc = global.document,\n\t            container = DelegateContainer instanceof HTMLElement ? DelegateContainer : doc.getElementById(DelegateContainer);\n\t\n\t        // Instance vars:\n\t        if (!container) {\n\t            throw 'Could not found container element by given ID/Element: ' + DelegateContainer;\n\t        }\n\t\n\t        this.currentOpen = null;\n\t\n\t        this.loading = false;\n\t\n\t        this.container = container;\n\t\n\t        /**\n\t         * Default Options\n\t         */\n\t        this.options = {\n\t            classNames: 'modal',\n\t            closeOnEscape: true,\n\t            closeOnBackgroundClick: true,\n\t            destroyOnFinish: false,\n\t            fixedContainer: true,\n\t            containerClassNames: ''\n\t        };\n\t\n\t        _extends(this.options, options);\n\t\n\t        // Container where events are delegated\n\t        this.eventContainer = null;\n\t        this.eventFunction = null;\n\t\n\t        this.dataMainPageContainer = global.document.body;\n\t\n\t        this.currentScrollTop = 0;\n\t\n\t        this.modalContainer = null;\n\t\n\t        // Destroy full modal instance when no dialogs are bind to?\n\t        // Otherwise container is recycled\n\t        this.destroyOnFinish = this.options.destroyOnFinish;\n\t    }\n\t\n\t    /**\n\t     * Removes this modal from global stack\n\t     * Will handle fixing main html element too\n\t     * @private\n\t     * @param n\n\t     */\n\t\n\t    _createClass(Modal, [{\n\t        key: '_removeModalFromStack',\n\t        value: function _removeModalFromStack(n) {\n\t            var t = Modal._modalInstances.indexOf(n),\n\t                self = this;\n\t            if (t > -1) {\n\t                Modal._modalInstances.splice(t, 1);\n\t                if (Modal._modalInstances.length === 0) {\n\t                    // restore scrollPosition:\n\t                    if (self.dataMainPageContainer) {\n\t                        setTimeout(function () {\n\t                            if (self.options.fixedContainer) {\n\t                                self.dataMainPageContainer.style.position = \"static\";\n\t                                self.dataMainPageContainer.style.top = \"0px\";\n\t                                // reset scrollTop\n\t                                document.documentElement.scrollTop = self.currentScrollTop;\n\t                                document.body.scrollTop = self.currentScrollTop;\n\t                            }\n\t                            _Settings2.default.get().scrollbarUpdateNodes.forEach(function (node) {\n\t                                node.style.paddingRight = '';\n\t                            });\n\t                            HTML_ELEMENT.classList.remove(CLS_MODAL_OPEN);\n\t                        }, 0);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Modal container that contains all `stacked` modals for this instance\n\t         * @returns {HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: 'getModalContainer',\n\t        value: function getModalContainer() {\n\t            return this.modalContainer;\n\t        }\n\t\n\t        /**\n\t         * Closes the current open modal of this stack\n\t         * @params [e], optional event\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'close',\n\t        value: function close(e) {\n\t            var self = this;\n\t\n\t            var options = self.currentOpen ? _Util2.default.applyOptionsFromElement(self.currentOpen, _Util2.default.copy(self.options)) : self.options;\n\t\n\t            // close only on keyboard if instance should\n\t            if (!options.closeOnEscape && e instanceof KeyboardEvent) {\n\t                return false;\n\t            }\n\t\n\t            // close only on background if instance should\n\t            if (!options.closeOnBackgroundClick && e && e.type === _Settings2.default.getTabEvent() && !e.target.hasAttribute(ATTR_CLOSE)) {\n\t                return false;\n\t            }\n\t\n\t            // if an instance is currently loading, prevent from closing\n\t            if (self.loading) {\n\t                return false;\n\t            }\n\t\n\t            if (e) {\n\t                e.preventDefault();\n\t            }\n\t\n\t            if (self.currentOpen) {\n\t                // dispatch beforeClose event, if prevented prevent modal from closing\n\t                var ev = _Event2.default.dispatchAndFire(self.currentOpen, EVENT_MODAL_BEFORE_CLOSED);\n\t                if (ev.defaultPrevented) {\n\t                    return false;\n\t                }\n\t\n\t                this._finishState(self.currentOpen);\n\t                // if there is an previous modal\n\t                if (self.currentOpen.prevModal) {\n\t                    // switch to the next modal\n\t                    return self.switchModals(self.currentOpen.prevModal, self.currentOpen.prevModal.prevModal || null);\n\t                }\n\t\n\t                // finally trigger closed event\n\t                _Event2.default.dispatch(self.currentOpen, EVENT_MODAL_CLOSED).withOriginal(e).fire();\n\t            }\n\t            self._removeModalFromStack(self.currentOpen);\n\t\n\t            // Full stack closed:\n\t            self.currentOpen = null;\n\t            if (self.modalContainer) {\n\t                // setup next open\n\t                var lastContainer = Modal._modalInstances[Modal._modalInstances.length - 1],\n\t                    classList = self.modalContainer.classList;\n\t                classList.remove(CLS_CONTAINER_CURRENT);\n\t                classList.remove(CLS_OPEN);\n\t                // Remove all current classes from child-nodes\n\t                for (var i = 0; i < self.modalContainer.childNodes.length; i++) {\n\t                    var node = self.modalContainer.childNodes[i],\n\t                        cl = node.classList;\n\t                    // remove applied styles\n\t                    self._finishState(node);\n\t                    cl.remove(CLS_CURRENT);\n\t                    cl.remove(CLS_PART_OF_STACK);\n\t                }\n\t                if (lastContainer) {\n\t                    lastContainer.parentNode.classList.add(CLS_CONTAINER_CURRENT);\n\t                }\n\t            }\n\t\n\t            if (self.destroyOnFinish) {\n\t                self.destroy();\n\t            }\n\t            return self;\n\t        }\n\t\n\t        /**\n\t         * Resets a target when newly initilizes\n\t         * @param target\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_finishState',\n\t        value: function _finishState(target) {\n\t            target.classList.remove(CLS_ANIM_END);\n\t        }\n\t\n\t        /**\n\t         * Handler called when a Modal has finished an animation\n\t         * @param e\n\t         * @param self\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_finishAnim',\n\t        value: function _finishAnim(e, self) {\n\t            e.target.classList.add(CLS_ANIM_END);\n\t            e.target.removeEventListener(e.type, self, true);\n\t        }\n\t\n\t        /**\n\t         * Brings the given modal to front\n\t         * @param co\n\t         * @param last\n\t         */\n\t\n\t    }, {\n\t        key: 'switchModals',\n\t        value: function switchModals(co, last) {\n\t            co.prevModal = last;\n\t            Modal._modalInstances.push(co);\n\t\n\t            if (last) {\n\t                this._finishState(last);\n\t                _Util2.default.prefixedAnimateEvent(last, 'AnimationEnd', this._finishAnim);\n\t                last.classList.add(CLS_PART_OF_STACK);\n\t            }\n\t            // set new currentOpen\n\t            this.currentOpen = co;\n\t\n\t            // bring current container to the front\n\t            var instances = Modal._modalInstances;\n\t\n\t            for (var m = 0; m < instances.length; m++) {\n\t                instances[m].parentNode.classList.remove(CLS_CONTAINER_CURRENT);\n\t            }\n\t            this.modalContainer.classList.add(CLS_CONTAINER_CURRENT);\n\t            // remove animations if animations has been completed, fixes various bugs:\n\t            // - fixes nested scrolling element issue in iOS Browsers / Mobile-Safari\n\t            _Util2.default.prefixedAnimateEvent(co, 'AnimationEnd', this._finishAnim);\n\t\n\t            for (var i = 0; i < this.modalContainer.childNodes.length; i++) {\n\t                var n = this.modalContainer.childNodes[i],\n\t                    isCurrent = n.classList.contains(CLS_CURRENT);\n\t                if (n === co) {\n\t                    co.classList.add(CLS_CURRENT);\n\t                    co.classList.remove(CLS_PART_OF_STACK);\n\t                    this._finishState(co);\n\t                } else {\n\t                    n.classList.remove(CLS_CURRENT);\n\t                    if (isCurrent) {\n\t                        this._removeModalFromStack(n);\n\t                        _Event2.default.dispatchAndFire(n, EVENT_MODAL_CLOSED);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'handleScrollbar',\n\t        value: function handleScrollbar() {\n\t            var self = this;\n\t            if (Modal._modalInstances.length === 0) {\n\t                // save current scrollTop:\n\t                var scrollTop = undefined,\n\t                    c = undefined;\n\t                if (self.options.fixedContainer) {\n\t                    scrollTop = global.pageYOffset;\n\t                    c = self.dataMainPageContainer;\n\t                    self.currentScrollTop = scrollTop;\n\t                }\n\t                // this causes reflow/paint and should be optimized\n\t                // At lest we write in a batch later\n\t                _Settings2.default.get().scrollbarUpdateNodes.map(function (n) {\n\t                    return {\n\t                        n: n, padding: parseInt(global.getComputedStyle(n).paddingRight) + _Settings2.default.getScrollbarWidth() + 'px'\n\t                    };\n\t                }).forEach(function (d) {\n\t                    d.n.style.paddingRight = d.padding;\n\t                });\n\t                if (self.options.fixedContainer) {\n\t                    if (c) {\n\t                        c.style.cssText += 'top:' + (scrollTop * -1 + 'px') + ';position:fixed';\n\t                    }\n\t                }\n\t                HTML_ELEMENT.classList.add(CLS_MODAL_OPEN);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Creates a Modal and opens it (later)\n\t         * @param e\n\t         * @returns {Promise|boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'createWidget',\n\t        value: function createWidget(e) {\n\t            var self = this;\n\t            if (this.loading) {\n\t                return false;\n\t            }\n\t\n\t            // check if another modal has registered events on this dom path:\n\t            if (e && e.target) {\n\t                var foundInstance = _Util2.default.parentsUntil(e.target, function (node) {\n\t                    return node && node.flexModalInstance;\n\t                });\n\t\n\t                // if another instance has been found, abort\n\t                if (foundInstance !== this.container) {\n\t                    return false;\n\t                }\n\t            }\n\t            var targetContent,\n\t                future,\n\t                widget,\n\t                target,\n\t                hasTarget = true,\n\t                isHtmlElement = e instanceof HTMLElement,\n\t                isWidget = _Widget2.default.isWidget(e);\n\t            if (isHtmlElement || isWidget) {\n\t                if (isHtmlElement) {\n\t                    targetContent = e;\n\t                } else {\n\t                    widget = e;\n\t                    targetContent = widget.element;\n\t                }\n\t            } else {\n\t                target = e.target;\n\t                if (!target) {\n\t                    throw 'Could not find target, did you pass an event, a HTMLElement or an Widget?';\n\t                }\n\t                hasTarget = target.hasAttribute(ATTR_NAME);\n\t                targetContent = target.getAttribute(ATTR_NAME);\n\t                widget = _Widget2.default.findWidget(target);\n\t                if (target.hasAttribute(ATTR_CREATE_NEW) && !e.newInstance) {\n\t                    var newInstance = new Modal(this.container).setDestroyOnFinish(true);\n\t                    e.newInstance = true;\n\t                    newInstance.fromEvent(e).then(function () {\n\t                        newInstance.registerEvents(newInstance.getModalContainer());\n\t                    });\n\t                    return false;\n\t                }\n\t                if (hasTarget) {\n\t                    e.stopImmediatePropagation();\n\t                    e.preventDefault();\n\t                }\n\t            }\n\t\n\t            if (!hasTarget) {\n\t                return false;\n\t            }\n\t\n\t            var modalContainerClasses = this.modalContainer ? this.modalContainer.classList : [];\n\t\n\t            // lazy create modal container\n\t            if (!this.modalContainer) {\n\t                this.modalContainer = global.document.createElement('div');\n\t                this.modalContainer.className = CLS_MODAL_CONTAINER + ' ' + this.options.containerClassNames + ' ' + CLS_OPEN;\n\t                var closeModalFunction = function closeModalFunction(ce) {\n\t                    if (self.loading) {\n\t                        return false;\n\t                    }\n\t                    if (_Util2.default.isPartOfNode(ce.target, self.currentOpen)) {\n\t                        if (!ce.target.hasAttribute(ATTR_CLOSE)) {\n\t                            return false;\n\t                        }\n\t                    }\n\t                    self.close(ce);\n\t                };\n\t\n\t                this.modalContainer.addEventListener(_Settings2.default.getTabEvent(), closeModalFunction, false);\n\t\n\t                modalContainerClasses = this.modalContainer.classList;\n\t                this.container.appendChild(this.modalContainer);\n\t            } else {\n\t                modalContainerClasses.add(CLS_OPEN);\n\t            }\n\t\n\t            var loader = undefined,\n\t                doc = global.document,\n\t                toggleLoader = function toggleLoader(show) {\n\t                if (show) {\n\t                    loader = doc.createElement('div');\n\t                    loader.className = CLS_LOADER_CONTAINER;\n\t                    var loaderLoader = doc.createElement('div');\n\t                    loaderLoader.className = CLS_LOADER;\n\t                    loader.appendChild(loaderLoader);\n\t                    self.modalContainer.appendChild(loader);\n\t                } else {\n\t                    loader.parentNode.removeChild(loader);\n\t                }\n\t            };\n\t\n\t            this.handleScrollbar();\n\t\n\t            modalContainerClasses.add(CLS_CONTAINER_CURRENT);\n\t            modalContainerClasses.add('loading');\n\t            this.loading = true;\n\t            toggleLoader(true);\n\t            var async = widget ? widget.getAsync() : null;\n\t            if (_Widget2.default.isWidget(widget) && async) {\n\t                future = async.then(function (r) {\n\t                    var result;\n\t                    if (r instanceof HTMLElement || r instanceof DocumentFragment) {\n\t                        result = r;\n\t                    } else {\n\t                        // Create container Element:\n\t                        var element = doc.createElement('div');\n\t                        element.className = self.options.classNames;\n\t                        element.innerHTML = r;\n\t                        element.id = _Util2.default.guid();\n\t                        result = element;\n\t                    }\n\t                    widget.finalContent = result;\n\t                    _Event2.default.dispatchAndFire(target, EVENT_MODAL_ASYNC_TARGET_LOADED);\n\t                    return result;\n\t                });\n\t            } else {\n\t                var el = targetContent instanceof HTMLElement || targetContent instanceof DocumentFragment ? targetContent : doc.getElementById(targetContent);\n\t                if (el) {\n\t                    future = new Promise(function (resolve) {\n\t                        resolve(el);\n\t                    });\n\t                } else {\n\t                    throw 'Could not found given modal element (content) with ID: ' + targetContent;\n\t                }\n\t            }\n\t\n\t            _Event2.default.dispatchAndFire(target, EVENT_MODAL_INIT);\n\t\n\t            return future.then(function (thisEl) {\n\t                thisEl.hfWidgetInstance = self;\n\t                self.modalContainer.appendChild(thisEl);\n\t                modalContainerClasses.remove('loading');\n\t                self.loading = false;\n\t                toggleLoader(false);\n\t\n\t                self.open(thisEl, true, e);\n\t\n\t                return thisEl;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Open's an already rendered modal\n\t         * @param {HTMLElement} modal\n\t         * @param {Boolean} [internal], set to true to prevent container management\n\t         * @param {Boolean} [maybeEvent], optional event-object that triggered open\n\t         */\n\t\n\t    }, {\n\t        key: 'open',\n\t        value: function open(modal, internal, maybeEvent) {\n\t\n\t            if (!internal) {\n\t                this.modalContainer.classList.add('open');\n\t                this.handleScrollbar();\n\t            }\n\t            this.switchModals(modal, this.currentOpen);\n\t\n\t            _Event2.default.dispatch(modal, EVENT_MODAL_OPENED).withOriginal(maybeEvent).fire();\n\t        }\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents(delegate) {\n\t            var delegateContainer = delegate || this.container,\n\t                self = this;\n\t\n\t            // register modal instance so we can detect multiple registrars\n\t            delegateContainer.flexModalInstance = self;\n\t            self.eventFunction = function () {\n\t                self.createWidget.apply(self, arguments);\n\t            };\n\t            delegateContainer.addEventListener(_Settings2.default.getTabEvent(), self.eventFunction, false);\n\t\n\t            self.eventContainer = delegateContainer;\n\t            return self;\n\t        }\n\t\n\t        /**\n\t         * Creates a new Dialog Instance either directly from HTML Element or a Widget instance\n\t         * @param {HTMLElement|Widget} widget instance or html element\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'fromWidget',\n\t        value: function fromWidget(widget) {\n\t            return this.createWidget(widget);\n\t        }\n\t\n\t        /**\n\t         * Creates a Widget from event\n\t         * @param e\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'fromEvent',\n\t        value: function fromEvent(e) {\n\t            return this.createWidget(e);\n\t        }\n\t    }, {\n\t        key: 'setDestroyOnFinish',\n\t        value: function setDestroyOnFinish(v) {\n\t            this.destroyOnFinish = v;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Destroy this widget instance, cleans empty DOM nodes\n\t         * Will use fast MutationObserver if available, otherwise falls back to DOMNodeRemoved event\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            var self = this,\n\t                modalContainer = this.modalContainer;\n\t            var isEmptyContainer = modalContainer.childNodes.length === 0;\n\t            // Remove event listener on destroy, do not remove DOM node\n\t            if (self.eventContainer) {\n\t                self.eventContainer.removeEventListener(_Settings2.default.getTabEvent(), self.eventFunction, true);\n\t            }\n\t\n\t            if (isEmptyContainer) {\n\t                if (modalContainer.parentNode) {\n\t                    modalContainer.parentNode.removeChild(modalContainer);\n\t                }\n\t            }\n\t            if (global.MutationObserver) {\n\t                var observer = new MutationObserver(function (mutations) {\n\t                    mutations.forEach(function () {\n\t                        if (isEmptyContainer) {\n\t                            modalContainer.parentNode.removeChild(modalContainer);\n\t                            observer.disconnect();\n\t                        }\n\t                    });\n\t                });\n\t                observer.observe(modalContainer, { childList: true });\n\t            } else {\n\t                modalContainer.addEventListener('DOMNodeRemoved', function (e) {\n\t                    if (e.target !== modalContainer && modalContainer.childNodes.length - 1 === 0) {\n\t                        modalContainer.parentNode.removeChild(modalContainer);\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Modal;\n\t})();\n\t\n\t// Static variable that keeps track of all open modals\n\t\n\texports.default = Modal;\n\tModal._modalInstances = [];\n\t\n\t// Global keydown listener for modal\n\tglobal.addEventListener('keydown', function (e) {\n\t    if (e.keyCode === KEY_ESC) {\n\t        var lastModal = Modal._modalInstances[Modal._modalInstances.length - 1];\n\t        if (lastModal) {\n\t            _Widget2.default.findWidget(lastModal).close(e);\n\t        }\n\t    }\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Form\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict'\n\t\n\t/*global HTMLFormElement, fetch, FormData, clearTimeout, NodeList*/\n\t\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EVENT_FORM_AJAX_COMPLETED = exports.EVENT_FORM_AFTER_AJAX_SUBMIT = exports.EVENT_FORM_SUBMIT = exports.EVENT_FORM_READY = undefined;\n\t\n\tvar _isomorphicFetch = __webpack_require__(9);\n\t\n\tfor (var _key in _isomorphicFetch) {\n\t    if (_key === \"default\") continue;\n\t    Object.defineProperty(exports, _key, {\n\t        enumerable: true,\n\t        get: function get() {\n\t            return _isomorphicFetch[_key];\n\t        }\n\t    });\n\t}\n\t\n\tvar _Tooltip = __webpack_require__(6);\n\t\n\tvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\t\n\tvar _Event = __webpack_require__(5);\n\t\n\tvar _Event2 = _interopRequireDefault(_Event);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _DestroyableWidget2 = __webpack_require__(3);\n\t\n\tvar _DestroyableWidget3 = _interopRequireDefault(_DestroyableWidget2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar LOADING_CLASS = 'loading';\n\tvar DATA_ELEMENT_INVALID = 'data-flexcss-invalid';\n\tvar REMOTE = 'data-remote';\n\tvar REMOTE_ACTION = 'data-remote-action';\n\tvar ATTR_DISABLE_INLINE = 'data-disable-inline-validation';\n\tvar ATTR_DISABLE_REALTIME = 'data-disable-realtime-validation';\n\tvar ATTR_VALIDATOR = 'data-validate';\n\tvar ATTR_DATA_CUSTOM_MESSAGE = 'data-validation-message';\n\tvar ATTR_DATA_CUSTOM_LABEL = 'data-custom-label';\n\tvar ATTR_VALIDATE_VISIBILITY = 'data-validate-visibility';\n\tvar ATTR_ERROR_TARGET_ID = 'data-error-target';\n\tvar ATTR_DEPENDS = 'data-depends-selector';\n\tvar CONST_USE_JSON = 'json';\n\tvar CONST_REALTIME_EVENT = 'input';\n\tvar FOCUS_TOOLTIP_DELAY = 20;\n\tvar CLICK_TOOLTIP_DELAY = 150;\n\t/**\n\t * Triggered when form is fully initialized and handlers are binded\n\t * @type {string}\n\t */\n\tvar EVENT_FORM_READY = exports.EVENT_FORM_READY = 'flexcss.form.ready';\n\t/**\n\t * Fires when a form is submitted, cancelable\n\t * @type {string}\n\t */\n\tvar EVENT_FORM_SUBMIT = exports.EVENT_FORM_SUBMIT = 'flexcss.form.submit';\n\t/**\n\t * Fired directly after the form has been submitted via ajax\n\t * @type {string}\n\t */\n\tvar EVENT_FORM_AFTER_AJAX_SUBMIT = exports.EVENT_FORM_AFTER_AJAX_SUBMIT = 'flexcss.form.afterAjaxSubmit';\n\t/**\n\t * Fired when ajax events did complete\n\t * @type {string}\n\t */\n\tvar EVENT_FORM_AJAX_COMPLETED = exports.EVENT_FORM_AJAX_COMPLETED = 'flexcss.form.ajaxCompleted';\n\t\n\t/**\n\t * A HTML5 Form Validation replacement\n\t */\n\t\n\tvar Form = (function (_DestroyableWidget) {\n\t    _inherits(Form, _DestroyableWidget);\n\t\n\t    /**\n\t     * @param {HTMLElement} form\n\t     * @param [options] optional options\n\t     */\n\t\n\t    function Form(form, options) {\n\t        _classCallCheck(this, Form);\n\t\n\t        var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(Form).call(this));\n\t\n\t        if (!(form instanceof HTMLFormElement)) {\n\t            throw 'argument {0} form needs to be an form element';\n\t        }\n\t\n\t        /**\n\t         * The Form\n\t         * @type {HTMLElement}\n\t         */\n\t        _this3.form = form;\n\t\n\t        /**\n\t         * @type {Tooltip}\n\t         */\n\t        _this3.tooltips = null;\n\t\n\t        /**\n\t         * @type {Promise}\n\t         */\n\t        _this3.currentValidationFuture = new Promise(function () {});\n\t\n\t        /**\n\t         * Default options\n\t         * @type {Object}\n\t         */\n\t        _this3.options = {\n\t            // if true creates tooltips above element, uses FlexCss Tooltips\n\t            createTooltips: true,\n\t            // if true appends error message after input element\n\t            appendError: false,\n\t            // type of ajax submit\n\t            ajaxSubmitType: 'POST',\n\t            // json content type if ajax method is set to json\n\t            ajaxJsonContentType: 'application/json; charset=utf-8',\n\t            // allow inline validation\n\t            inlineValidation: true,\n\t            // validate in realtime (on `input` event)\n\t            realtime: true,\n\t            // timeout when realtime event should be captured\n\t            realtimeTimeout: 250,\n\t            // formatting method for an error\n\t            formatErrorTooltip: function formatErrorTooltip(error) {\n\t                return '<i class=\"icon-attention\"></i> ' + error;\n\t            },\n\t            // the class that will be put on the element to mark it failed validation\n\t            inputErrorClass: 'invalid',\n\t            // the container class for error messages below an element\n\t            containerErrorClass: 'form-error',\n\t            // additional options for fetch\n\t            fetchOptions: {\n\t                credentials: 'include'\n\t            },\n\t            // the container for tooltips\n\t            tooltipContainer: form,\n\t            // if you have a fixed header, either set a number or function here\n\t            scrollToElementDiff: 0\n\t        };\n\t\n\t        // overwrite default options\n\t        _extends(_this3.options, options);\n\t\n\t        // apply settings from attributes\n\t        _Util2.default.applyOptionsFromElement(form, _this3.options);\n\t\n\t        // set form class as widget\n\t        // Forms are very different to classical widgets,\n\t        // we will not use our base widget class for this but just self\n\t        form.hfWidgetInstance = _this3;\n\t\n\t        /**\n\t         * A List of Validators\n\t         * @type {Object}\n\t         * @private\n\t         */\n\t        _this3._validators = Form.globalValidators;\n\t\n\t        /**\n\t         * @type {Function}\n\t         * @private\n\t         */\n\t        _this3._remoteValidationFunction = null;\n\t\n\t        _this3.initFormValidation();\n\t        return _this3;\n\t    }\n\t\n\t    _createClass(Form, [{\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            _get(Object.getPrototypeOf(Form.prototype), 'destroy', this).call(this);\n\t            if (this.tooltips) {\n\t                this.tooltips.destroy();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Submits this form, either via ajax or just classical (default)\n\t         * @param {HTMLFormElement} thisForm\n\t         * @param {Event} e\n\t         * @private\n\t         * @returns {Promise|boolean} returns false if submit is cancled\n\t         */\n\t\n\t    }, {\n\t        key: '_submitFunction',\n\t        value: function _submitFunction(thisForm, e) {\n\t            var shouldUseAjax = thisForm.getAttribute(REMOTE),\n\t                ajaxPostUrl = thisForm.getAttribute(REMOTE_ACTION) || thisForm.getAttribute('action') || window.location.href,\n\t                useJson = CONST_USE_JSON === shouldUseAjax,\n\t                self = this;\n\t\n\t            var ev = _Event2.default.dispatch(thisForm, EVENT_FORM_SUBMIT).withOriginal(e).fire();\n\t\n\t            // abort execution is event was prevented\n\t            if (ev.defaultPrevented) {\n\t                self._formStopLoading();\n\t                return false;\n\t            }\n\t\n\t            if (shouldUseAjax === null) {\n\t                // submit\n\t                return thisForm.submit();\n\t            }\n\t            // prevent form from submit normally\n\t            e.preventDefault();\n\t\n\t            // add information that this is an XMLHttpRequest request (used by some frameworks)\n\t            var defaultHeaders = {\n\t                'X-Requested-With': 'XMLHttpRequest'\n\t            };\n\t\n\t            // setup default headers\n\t            if (useJson) {\n\t                _extends(defaultHeaders, {\n\t                    'Content-Type': this.options.ajaxJsonContentType\n\t                });\n\t            }\n\t            var defaultOptions = _extends(this.options.fetchOptions, {\n\t                headers: defaultHeaders,\n\t                method: this.options.ajaxSubmitType\n\t            });\n\t\n\t            // support either JSON request payload or normal payload submission\n\t            var serverCall = useJson ? fetch(ajaxPostUrl, _extends(defaultOptions, {\n\t                body: JSON.stringify(this.serialize())\n\t            })) : fetch(ajaxPostUrl, _extends(defaultOptions, {\n\t                body: new FormData(thisForm)\n\t            }));\n\t\n\t            _Event2.default.dispatch(thisForm, EVENT_FORM_AFTER_AJAX_SUBMIT).withOriginal(e).fire();\n\t\n\t            return serverCall.then(function (r) {\n\t                (self._remoteValidationFunction || Form.globalRemoteValidationFunction).apply(self, [r]);\n\t\n\t                _Event2.default.dispatch(thisForm, EVENT_FORM_AJAX_COMPLETED).withOriginal(e).withDetail({ response: r }).fire();\n\t                // always remove error class\n\t                self._formStopLoading();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Serializes a form to a json object\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'serialize',\n\t        value: function serialize() {\n\t            var selectors = ['input[name]:not([type=\"radio\"]):enabled', 'input[type=\"radio\"][name]:checked', 'select[name]:enabled', 'textarea[name]:enabled'],\n\t                inputs = this.form.querySelectorAll(selectors.join(',')),\n\t                result = {};\n\t\n\t            Array.prototype.forEach.call(inputs, function (input) {\n\t                var exists = result[input.name],\n\t                    value = input.value;\n\t                if (exists instanceof Array) {\n\t                    exists.push(value);\n\t                } else if (exists) {\n\t                    result[input.name] = [result[input.name], value];\n\t                } else {\n\t                    result[input.name] = value;\n\t                }\n\t            });\n\t\n\t            return result;\n\t        }\n\t\n\t        /**\n\t         * Handles the chain of validation on given fields\n\t         *\n\t         * @param {HTMLElement|Array|NodeList} field\n\t         * @param [focus] optional focus first error\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'handleValidation',\n\t        value: function handleValidation(field, focus) {\n\t            var _this = this;\n\t\n\t            var fields = field instanceof Array || field instanceof NodeList ? field : [field];\n\t            return this._handleValidation(fields, focus, true).then((function (r) {\n\t                if (!r.foundAnyError) {\n\t                    // remove tooltips\n\t                    if (_this.tooltips) {\n\t                        _this.tooltips.removeTooltip();\n\t                    }\n\t                }\n\t                return r;\n\t            }).bind(this));\n\t        }\n\t\n\t        /**\n\t         * Handles errors on given node list\n\t         * @param {NodeList} toValidateFields\n\t         * @param {boolean} focus\n\t         * @param {boolean} scoped if true, will only validate the fields `invalidFields`\n\t         * @returns {Promise}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_handleValidation',\n\t        value: function _handleValidation(toValidateFields, focus, scoped) {\n\t            var self = this;\n\t            var arr = Form._createArrayFromInvalidFieldList(toValidateFields),\n\t                isLocalInvalid = arr.length > 0;\n\t            // focus must appear in the same frame for iOS devices\n\t            if (isLocalInvalid && focus) {\n\t                self._focusElement(arr[0]);\n\t            }\n\t            var validation = scoped ? this._customValidationsForElements(toValidateFields) : self.validateCustomFields();\n\t            return validation.then(function (r) {\n\t                if (isLocalInvalid) {\n\t                    // combine browser and custom validators\n\t                    r.foundAnyError = true;\n\t                }\n\t                // get a unique field list of all fields that need to be checked and rendered\n\t                // it's possible that we have duplicates in non scoped mode\n\t                var thisToValidateFields = scoped ? toValidateFields : Array.from(arr).concat(r.checkedFields);\n\t                r.checkedFields = thisToValidateFields;\n\t                var foundInvalidFields = self.prepareErrors(thisToValidateFields, false),\n\t                    firstInvalidField = foundInvalidFields[0];\n\t                if (firstInvalidField) {\n\t                    if (focus) {\n\t                        self._focusElement(firstInvalidField);\n\t                        // if element could not be focused:\n\t                        if (document.activeElement !== firstInvalidField) {\n\t                            self._handleTooltipHideClickAfterChange();\n\t                        }\n\t                    } else {\n\t                        self._handleTooltipHideClickAfterChange();\n\t                    }\n\t                    self.showAndOrCreateTooltip(firstInvalidField);\n\t                }\n\t                return r;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * @param {HTMLElement} field\n\t         * @param {ValidityState} validity\n\t         * @returns {*}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_setupErrorMessages',\n\t        value: function _setupErrorMessages(field, validity) {\n\t            return Form.globalErrorMessageHandler ? Form.globalErrorMessageHandler.apply(this, [field, validity]) : false;\n\t        }\n\t\n\t        /**\n\t         * Handles class labels for elements\n\t         * @param {Object} fields\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_handleLabels',\n\t        value: function _handleLabels(fields) {\n\t            Object.keys(fields).forEach((function (id) {\n\t                var labels = this.getForm().querySelectorAll('[for=\"' + id + '\"]'),\n\t                    invalid = fields[id];\n\t                if (labels.length) {\n\t                    for (var labelsIndex = 0; labelsIndex < labels.length; labelsIndex++) {\n\t                        var labelEl = labels[labelsIndex];\n\t                        // we can't use toggle attribute, not supported in IE\n\t                        if (invalid) {\n\t                            this._markElementInvalid(labelEl);\n\t                        } else {\n\t                            this._markElementValid(labelEl);\n\t                        }\n\t                    }\n\t                }\n\t            }).bind(this));\n\t        }\n\t\n\t        /**\n\t         * @param el\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_markElementInvalid',\n\t        value: function _markElementInvalid(el) {\n\t            el.setAttribute(DATA_ELEMENT_INVALID, \"true\");\n\t            el.classList.add(this.options.inputErrorClass);\n\t        }\n\t\n\t        /**\n\t         * @param el\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_markElementValid',\n\t        value: function _markElementValid(el) {\n\t            el.removeAttribute(DATA_ELEMENT_INVALID);\n\t            el.classList.remove(this.options.inputErrorClass);\n\t        }\n\t\n\t        /**\n\t         * A List of invalid elements (:invalid)\n\t         * @returns {Array}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_getInvalidElements',\n\t        value: function _getInvalidElements() {\n\t            return Array.prototype.filter.call(this.getForm().querySelectorAll(\":invalid\"), function (r) {\n\t                return !(r instanceof HTMLFieldSetElement);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * @param {HTMLElement} thisParent\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_removeElementErrors',\n\t        value: function _removeElementErrors(thisParent) {\n\t            var errors = thisParent.querySelectorAll('.' + this.options.containerErrorClass),\n\t                inputsWithErrorClasses = thisParent.querySelectorAll('[' + DATA_ELEMENT_INVALID + ']');\n\t            for (var elementErrorIndex = 0; elementErrorIndex < errors.length; elementErrorIndex++) {\n\t                errors[elementErrorIndex].parentNode.removeChild(errors[elementErrorIndex]);\n\t            }\n\t            for (var inputErrorIndex = 0; inputErrorIndex < inputsWithErrorClasses.length; inputErrorIndex++) {\n\t                var el = inputsWithErrorClasses[inputErrorIndex];\n\t                this._markElementValid(el);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Registers a custom validator\n\t         * @param {String} name\n\t         * @param {Function} validator a validation function should always return either a Future(true) or Future(false)\n\t         * even when the field has been invalidated with `setCustomValidity`, because of different browser `bugs`\n\t         * we can't rely on that\n\t         * @returns {Form}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerValidator',\n\t        value: function registerValidator(name, validator) {\n\t            this._validators[name] = validator;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Runs async validation\n\t         * @param {String} validationRef\n\t         * @param {HTMLElement} field\n\t         * @returns {Promise}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_runValidation',\n\t        value: function _runValidation(validationRef, field) {\n\t            if (!this._validators[validationRef]) {\n\t                throw 'Could not found validator: ' + validationRef;\n\t            }\n\t            var cl = field.classList,\n\t                future = this._validators[validationRef].apply(this, [field, this.form]);\n\t            cl.add(LOADING_CLASS);\n\t            future.then(function () {\n\t                cl.remove(LOADING_CLASS);\n\t            });\n\t            return future;\n\t        }\n\t\n\t        /**\n\t         * Run custom validations for elements, validations are done async do support XHR Requests or other stuff\n\t         *\n\t         * @param {Array|NodeList} fields\n\t         * @returns {Promise} contains either true if validations passed or false if something went wrong\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_customValidationsForElements',\n\t        value: function _customValidationsForElements(fields) {\n\t            var futures = [],\n\t                fieldsLength = fields.length,\n\t                checkedFields = [];\n\t            for (var iVal = 0; iVal < fieldsLength; iVal++) {\n\t                var field = fields[iVal],\n\t                    validationRef = field.getAttribute(ATTR_VALIDATOR),\n\t                    validity = field.validity;\n\t                if (this._validators[validationRef]) {\n\t                    // use local validation first and then continue with custom validations\n\t                    if (Form._shouldNotValidateField(field) || validity && !validity.customError && !validity.valid) {\n\t                        continue;\n\t                    }\n\t                    checkedFields.push(field);\n\t                    futures.push(this._runValidation(validationRef, field));\n\t                } else {\n\t                    if (validationRef) {\n\t                        console.warn('data-validate was set but no validator was found');\n\t                    }\n\t                }\n\t            }\n\t            return Promise.all(futures).then(function (allFutures) {\n\t                var l = allFutures.length;\n\t                var result = {\n\t                    checkedFields: checkedFields,\n\t                    foundAnyError: false\n\t                };\n\t                for (var fI = 0; fI < l; fI++) {\n\t                    if (!allFutures[fI]) {\n\t                        result.foundAnyError = true;\n\t                        break;\n\t                    }\n\t                }\n\t                return result;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Remove all errors for this form\n\t         * @returns {Form}\n\t         */\n\t\n\t    }, {\n\t        key: 'removeErrors',\n\t        value: function removeErrors() {\n\t            this._removeElementErrors(this.form);\n\t            if (this.tooltips) {\n\t                this.tooltips.removeTooltip();\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Will handle errors for given fields\n\t         * @param {Array|NodeList} fields\n\t         * @param {Boolean} removeAllErrors\n\t         */\n\t\n\t    }, {\n\t        key: 'prepareErrors',\n\t        value: function prepareErrors(fields, removeAllErrors) {\n\t            if (removeAllErrors) {\n\t                this.removeErrors();\n\t            }\n\t            var labelGroups = {},\n\t                invalidFields = [];\n\t\n\t            function handleAdditionalLabels(isInvalid, thisLabelGroup, field) {\n\t                var additionalLabels = field.getAttribute(ATTR_DATA_CUSTOM_LABEL) || field.id,\n\t                    group = thisLabelGroup[additionalLabels];\n\t                if (additionalLabels) {\n\t                    // check additionally if field is currently marked as invalid\n\t                    // so the label is not marked as error if no field is marked as one\n\t                    group = group ? group : isInvalid;\n\t                    thisLabelGroup[additionalLabels] = group;\n\t                }\n\t            }\n\t\n\t            // We save all validations in an extra property because we need to reset the validity due some\n\t            // implementation errors in other browsers then chrome\n\t            for (var i = 0; i < fields.length; i++) {\n\t                var field = fields[i],\n\t                    errorTarget = Form._findErrorTarget(field),\n\t                    parent = errorTarget.parentNode,\n\t                    validity = field.validity,\n\t                    isInvalid = validity && !validity.valid;\n\t                if (Form._shouldNotValidateField(field)) {\n\t                    continue;\n\t                }\n\t                field.flexFormsSavedValidity = JSON.parse(JSON.stringify(validity));\n\t                handleAdditionalLabels(isInvalid, labelGroups, field);\n\t                if (isInvalid) {\n\t                    if (!removeAllErrors) {\n\t                        // Remove current errors:\n\t                        this._removeElementErrors(parent);\n\t                    }\n\t                    // setup custom error messages:\n\t                    this._setupErrorMessages(field, validity);\n\t                    var msg = field.validationMessage;\n\t\n\t                    // mark fields as invalid\n\t                    this._markElementInvalid(errorTarget);\n\t                    this._markElementInvalid(field);\n\t\n\t                    if (this.options.appendError) {\n\t                        parent.insertAdjacentHTML(\"beforeend\", '<div class=\"' + this.options.containerErrorClass + '\">' + msg + '</div>');\n\t                    }\n\t                    invalidFields.push(field);\n\t                    field.flexFormsSavedValidationMessage = msg;\n\t                } else {\n\t                    // restore invalid fields\n\t                    this._markElementValid(errorTarget);\n\t                    this._markElementValid(field);\n\t\n\t                    // cleanup\n\t                    delete field.flexFormsSavedValidationMessage;\n\t\n\t                    // remove error markup\n\t                    this._removeElementErrors(parent);\n\t                }\n\t                // We have to reset the custom validity here to allow native validations work again\n\t                field.setCustomValidity('');\n\t            }\n\t            // if validates a single field we need to check the linked fields to a label:\n\t            if (fields.length === 1) {\n\t                var field = fields[0];\n\t                var id = field.getAttribute(ATTR_DATA_CUSTOM_LABEL) || field.id;\n\t                if (id) {\n\t                    var linkedFields = Array.from(this.getForm().querySelectorAll('[' + ATTR_DATA_CUSTOM_LABEL + '=\"' + id + '\"], #' + id));\n\t                    linkedFields.forEach((function (thisField) {\n\t                        var validity = thisField.validity,\n\t                            isInvalid = validity && !validity.valid && this._isElementInvalidElement(thisField);\n\t                        handleAdditionalLabels(isInvalid, labelGroups, thisField);\n\t                    }).bind(this));\n\t                }\n\t            }\n\t            this._handleLabels(labelGroups);\n\t            return invalidFields;\n\t        }\n\t\n\t        /**\n\t         * Validates all custom fields\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'validateCustomFields',\n\t        value: function validateCustomFields() {\n\t            return this._customValidationsForElements(this.form.querySelectorAll(\"[data-validate]\"));\n\t        }\n\t\n\t        /**\n\t         * Tests if a field should be validated\n\t         * @param {HTMLElement} field\n\t         * @returns {boolean}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'getForm',\n\t\n\t        /**\n\t         * This form\n\t         * @returns {HTMLElement}\n\t         */\n\t        value: function getForm() {\n\t            return this.form;\n\t        }\n\t\n\t        /**\n\t         * Registers a function that handles remote validation\n\t         * @param {Function} func\n\t         * @returns {Form}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerRemoteValidation',\n\t        value: function registerRemoteValidation(func) {\n\t            this._remoteValidationFunction = func;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Formats the error content for the tooltip\n\t         * @param {String} error\n\t         * @returns {String}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_formatErrorTooltip',\n\t        value: function _formatErrorTooltip(error) {\n\t            return this.options.formatErrorTooltip.apply(this, [error]);\n\t        }\n\t\n\t        /**\n\t         * Tries to find a custom error target on given target\n\t         * @param target\n\t         * @returns {HTMLElement}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'showAndOrCreateTooltip',\n\t\n\t        /**\n\t         * Creates a tooltip at given element, will only create a new instance if not created\n\t         * @param {HTMLElement} target\n\t         * @param {Boolean} [remove]\n\t         */\n\t        value: function showAndOrCreateTooltip(target, remove) {\n\t            var self = this;\n\t            if (!this.tooltips && this.options.createTooltips) {\n\t                this.tooltips = new _Tooltip2.default(this.options.tooltipContainer, {\n\t                    containerClass: 'error-tooltip'\n\t                });\n\t            }\n\t            if (!this.options.createTooltips) {\n\t                return false;\n\t            }\n\t\n\t            if (!target.flexFormsSavedValidity) {\n\t                return false;\n\t            }\n\t            var errorTarget = Form._findErrorTarget(target);\n\t            if (!target.flexFormsSavedValidity.valid && self._isElementInvalidElement(errorTarget)) {\n\t                self.tooltips.createTooltip(errorTarget, self._formatErrorTooltip(target.flexFormsSavedValidationMessage), false);\n\t                return true;\n\t            } else {\n\t                if (remove) {\n\t                    self.tooltips.removeTooltip();\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\n\t         * Checks if element is marked as invalid\n\t         * @param {HTMLElement} el\n\t         * @returns {boolean}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_isElementInvalidElement',\n\t        value: function _isElementInvalidElement(el) {\n\t            return el.hasAttribute(DATA_ELEMENT_INVALID);\n\t        }\n\t\n\t        /**\n\t         * Handles invalid event of a form\n\t         * @param {Event} e\n\t         * @returns {Promise|boolean}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_checkIsInvalid',\n\t        value: function _checkIsInvalid(e) {\n\t            e.preventDefault();\n\t            var invalidFields = this.getForm().querySelectorAll(\":invalid\");\n\t            return this._handleValidation(invalidFields, true, false);\n\t        }\n\t\n\t        /**\n\t         * Will query dependent fields (by selector) that should be validated with given field\n\t         * @param field\n\t         * @returns {NodeList|[]}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_getDependentFields',\n\t        value: function _getDependentFields(field) {\n\t            var fieldSelector = field.getAttribute(ATTR_DEPENDS),\n\t                base = [field];\n\t            if (fieldSelector) {\n\t                base.push.apply(base, Array.prototype.slice.apply(this.getForm().querySelectorAll(fieldSelector)));\n\t            }\n\t            return base;\n\t        }\n\t\n\t        /**\n\t         * @private\n\t         * @param {HTMLElement} [target]\n\t         */\n\t\n\t    }, {\n\t        key: '_handleTooltipInline',\n\t        value: function _handleTooltipInline(target) {\n\t            if (this.tooltips) {\n\t                this.tooltips.removeTooltip(target);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Initializes validation for a given form, registers event handlers\n\t         */\n\t\n\t    }, {\n\t        key: 'initFormValidation',\n\t        value: function initFormValidation() {\n\t            var _this2 = this;\n\t\n\t            // Suppress the default bubbles\n\t            var form = this.getForm(),\n\t                self = this,\n\t                invalidEvent = 'invalid';\n\t\n\t            /**\n\t             * Validates if is valid realtime element\n\t             * @param {HTMLElement} target\n\t             * @returns {boolean}\n\t             * @private\n\t             */\n\t            function _checkIsValidRealtimeElement(target) {\n\t                return !target.hasAttribute(ATTR_DISABLE_REALTIME) && !target.hasAttribute(ATTR_DISABLE_INLINE);\n\t            }\n\t\n\t            form.addEventListener(invalidEvent, function (e) {\n\t                e.preventDefault();\n\t            }, true);\n\t\n\t            _Util2.default.addEventOnce(invalidEvent, form, function handleInvalid(e) {\n\t                self._formLoading();\n\t                var result = self._checkIsInvalid(e);\n\t                if (result) {\n\t                    self.currentValidationFuture = new Promise(function (resolve) {\n\t                        result.then(function (r) {\n\t                            setTimeout(function () {\n\t                                _Util2.default.addEventOnce(invalidEvent, form, handleInvalid, true);\n\t                            }, 0);\n\t                            resolve(r);\n\t                            self._formStopLoading();\n\t                            if (!r.foundAnyError) {\n\t                                self._formLoading();\n\t                                self._handleSubmit(e);\n\t                            }\n\t                        });\n\t                    });\n\t                }\n\t            }, true);\n\t\n\t            this.addEventListener(form, 'reset', function () {\n\t                _this2.removeErrors();\n\t            });\n\t\n\t            // Timeout for keys:\n\t            var TIMEOUT_KEYDOWN,\n\t                KEYDOWN_RUNNING = false;\n\t\n\t            // resets keydown events\n\t            function clearKeyDownTimeout() {\n\t                KEYDOWN_RUNNING = false;\n\t                clearTimeout(TIMEOUT_KEYDOWN);\n\t            }\n\t\n\t            // setup custom realtime event if given\n\t            if (self.options.realtime) {\n\t                this.addEventListener(form, CONST_REALTIME_EVENT, function (e) {\n\t                    if (self._formIsLoading()) {\n\t                        return;\n\t                    }\n\t                    var target = e.target;\n\t                    clearTimeout(TIMEOUT_KEYDOWN);\n\t                    if (KEYDOWN_RUNNING) {\n\t                        return;\n\t                    }\n\t                    TIMEOUT_KEYDOWN = setTimeout(function () {\n\t                        var isStillTarget = document.activeElement === e.target;\n\t                        if (!_checkIsValidRealtimeElement(target)) {\n\t                            return;\n\t                        }\n\t                        if (isStillTarget) {\n\t                            self._handleTooltipInline();\n\t                        }\n\t                        KEYDOWN_RUNNING = true;\n\t                        var dependentFields = self._getDependentFields(target);\n\t                        self._customValidationsForElements(dependentFields).then(function () {\n\t                            self.prepareErrors(dependentFields, false);\n\t                            if (isStillTarget) {\n\t                                self.showAndOrCreateTooltip(e.target);\n\t                            }\n\t                            // future must be resolved before another event can be started\n\t                            KEYDOWN_RUNNING = false;\n\t                        });\n\t                    }, self.options.realtimeTimeout);\n\t                }, true);\n\t            }\n\t\n\t            /**\n\t             * Validates if target is a valid input field to check blur and focus events\n\t             *\n\t             * @param {HTMLElement} target\n\t             * @returns {boolean}\n\t             * @private\n\t             */\n\t            function _checkIsValidBlurFocusElement(target) {\n\t                var attr = target.getAttribute(\"type\");\n\t                return attr !== \"radio\" && attr !== \"checkbox\" && attr !== \"submit\";\n\t            }\n\t\n\t            /**\n\t             * Validates if is valid inline-check element\n\t             * @param {HTMLElement} target\n\t             * @returns {boolean}\n\t             * @private\n\t             */\n\t            function _checkIsValidInlineCheckElement(target) {\n\t                return !target.hasAttribute(ATTR_DISABLE_INLINE);\n\t            }\n\t\n\t            this.addEventListener(form, 'blur', function (e) {\n\t                // do not hide tooltip after change event\n\t                if (!e.target.flexcssKeepTooltips) {\n\t                    self._handleTooltipInline(e.target);\n\t                }\n\t                delete e.target.flexcssKeepTooltips;\n\t            }, true);\n\t\n\t            // handle focus on input elements\n\t            // will show an error if field is invalid\n\t            this.addEventListener(form, \"focus\", function (e) {\n\t                if (self._formIsLoading()) {\n\t                    return;\n\t                }\n\t                // do not track errors for checkbox and radios on focus:\n\t                if (!_checkIsValidBlurFocusElement(e.target)) {\n\t                    return;\n\t                }\n\t                // we need to delay this a little, because Firefox and Safari do not show a tooltip after it\n\t                // just have been hidden (on blur). Maybe fix this with a queue later\n\t                setTimeout(function () {\n\t                    self.showAndOrCreateTooltip(e.target);\n\t                }, FOCUS_TOOLTIP_DELAY);\n\t            }, true);\n\t\n\t            if (self.options.inlineValidation) {\n\t                // Handle change for checkbox, radios and selects\n\t                this.addEventListener(form, \"change\", function (e) {\n\t                    var target = e.target;\n\t                    if (self._formIsLoading() || !_checkIsValidInlineCheckElement(target)) {\n\t                        return;\n\t                    }\n\t                    clearKeyDownTimeout();\n\t                    var name = target.getAttribute('name');\n\t                    var inputs = name ? form.querySelectorAll('[name=\"' + name + '\"]') : [target];\n\t                    // we only support dependent fields for a single widgets right now\n\t                    if (inputs.length === 1) {\n\t                        inputs = self._getDependentFields(target);\n\t                    }\n\t                    self._customValidationsForElements(inputs).then(function () {\n\t                        self.prepareErrors(inputs, false);\n\t                        target.flexcssKeepTooltips = self.showAndOrCreateTooltip(target, true);\n\t                        if (target.flexcssKeepTooltips) {\n\t                            self._handleTooltipHideClickAfterChange();\n\t                        }\n\t                    });\n\t                });\n\t            }\n\t\n\t            // prevent default if form is invalid\n\t            this.addEventListener(form, \"submit\", function listener(e) {\n\t                self._submitListener(e, listener);\n\t            });\n\t\n\t            _Event2.default.dispatchAndFire(form, EVENT_FORM_READY);\n\t        }\n\t\n\t        /* Loading states, unfortunately we can't check if a promise is pending :/*/\n\t        /* TODO: Maybe wrap promise to extend this functionality */\n\t\n\t    }, {\n\t        key: '_formLoading',\n\t        value: function _formLoading() {\n\t            this.getForm().classList.add(LOADING_CLASS);\n\t        }\n\t    }, {\n\t        key: '_formStopLoading',\n\t        value: function _formStopLoading() {\n\t            this.getForm().classList.remove(LOADING_CLASS);\n\t        }\n\t    }, {\n\t        key: '_formIsLoading',\n\t        value: function _formIsLoading() {\n\t            return this.getForm().classList.contains(LOADING_CLASS);\n\t        }\n\t\n\t        // this defines the logic after a change event when a tooltip is shown\n\t        // because we call this method inside the change event, the click would be immeditally executed with the change\n\t        // event when not using setTimeout(). There might be another solution for this...\n\t\n\t    }, {\n\t        key: '_handleTooltipHideClickAfterChange',\n\t        value: function _handleTooltipHideClickAfterChange() {\n\t            var self = this;\n\t            if (this.options.createTooltips) {\n\t                setTimeout(function () {\n\t                    _Util2.default.addEventOnce(_Settings2.default.getTabEvent(), global.document.body, function (t) {\n\t                        if (!self._isElementInvalidElement(t.target)) {\n\t                            self._handleTooltipInline();\n\t                        }\n\t                    });\n\t                }, CLICK_TOOLTIP_DELAY);\n\t            }\n\t        }\n\t    }, {\n\t        key: '_focusElement',\n\t        value: function _focusElement(el) {\n\t            el.focus();\n\t            _Util2.default.scrollToElement(el, this.options.scrollToElementDiff);\n\t        }\n\t\n\t        /**\n\t         * Listener that is executed on form submit\n\t         * @param e\n\t         * @param submitListener\n\t         * @returns {boolean}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_submitListener',\n\t        value: function _submitListener(e, submitListener) {\n\t\n\t            var form = this.getForm(),\n\t                self = this,\n\t                submitEvent = 'submit';\n\t\n\t            if (this._formIsLoading()) {\n\t                e.preventDefault();\n\t                return false;\n\t            }\n\t            this._formLoading();\n\t            form.removeEventListener(submitEvent, submitListener);\n\t            this.removeErrors();\n\t            e.preventDefault();\n\t            // reset:\n\t            if (form.checkValidity()) {\n\t                form.addEventListener(submitEvent, submitListener);\n\t                // It's possible that the form is valid but the custom validations need to be checked again:\n\t                self.currentValidationFuture = new Promise(function (resolve) {\n\t                    var validation = self.validateCustomFields();\n\t                    validation.then(function (r) {\n\t                        // because custom validators may mark multiple fields as invalid, we get all of them in the form\n\t                        var fields = self._getInvalidElements(),\n\t                            errors = self.prepareErrors(fields, false),\n\t                            firstError = errors[0];\n\t                        if (firstError) {\n\t                            self._focusElement(firstError);\n\t                            self.showAndOrCreateTooltip(firstError, true);\n\t                        }\n\t                        resolve(r);\n\t                    });\n\t                });\n\t                self.currentValidationFuture.then(function (r) {\n\t                    if (!r.foundAnyError) {\n\t                        // Handle submitting the form to server:\n\t                        self._handleSubmit(e);\n\t                    } else {\n\t                        self._formStopLoading();\n\t                    }\n\t                });\n\t            } else {\n\t                self._formStopLoading();\n\t                form.addEventListener(submitEvent, submitListener);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Handles submitting, optionally allows to stop submitting\n\t         * @param e\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_handleSubmit',\n\t        value: function _handleSubmit(e) {\n\t            this._submitFunction(this.form, e);\n\t        }\n\t\n\t        /**\n\t         * Registers a global event Handler\n\t         * @param errorFunc\n\t         */\n\t\n\t    }], [{\n\t        key: '_shouldNotValidateField',\n\t        value: function _shouldNotValidateField(field) {\n\t            var target = Form._findErrorTarget(field);\n\t            return target instanceof HTMLFieldSetElement || target.hasAttribute(ATTR_VALIDATE_VISIBILITY) && !_Util2.default.isVisible(target);\n\t        }\n\t\n\t        /**\n\t         * Creates an array from a node list with invalid items\n\t         * This Method expicitly checks if field should not be validated so it can be used to foucs a field\n\t         * @param list\n\t         * @returns {Array}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_createArrayFromInvalidFieldList',\n\t        value: function _createArrayFromInvalidFieldList(list) {\n\t            var arr = [];\n\t            for (var i = 0; i < list.length; ++i) {\n\t                var n = list[i];\n\t                if (n.validity && !n.validity.valid) {\n\t                    if (!Form._shouldNotValidateField(n)) {\n\t                        arr.push(n);\n\t                    }\n\t                }\n\t            }\n\t            return arr;\n\t        }\n\t    }, {\n\t        key: '_findErrorTarget',\n\t        value: function _findErrorTarget(target) {\n\t            var el = target.getAttribute(ATTR_ERROR_TARGET_ID) || target,\n\t                foundTarget = el instanceof HTMLElement ? el : global.document.getElementById(el);\n\t            if (!foundTarget) {\n\t                throw 'Given error target did not exsits:' + target;\n\t            }\n\t            return foundTarget;\n\t        }\n\t    }, {\n\t        key: 'registerErrorMessageHandler',\n\t        value: function registerErrorMessageHandler(errorFunc) {\n\t            Form.globalErrorMessageHandler = errorFunc;\n\t        }\n\t\n\t        /**\n\t         * Initialize forms for a specific selector\n\t         * @param {String} selector\n\t         * @param {Object} [options]\n\t         * @return {array.<Form>}\n\t         */\n\t\n\t    }, {\n\t        key: 'init',\n\t        value: function init(selector, options) {\n\t            var forms = selector instanceof HTMLElement ? selector.querySelectorAll('form') : document.querySelectorAll(selector),\n\t                instances = [];\n\t            for (var i = 0; i < forms.length; i++) {\n\t                instances.push(new Form(forms[i], options));\n\t            }\n\t            return instances;\n\t        }\n\t\n\t        /**\n\t         * Registers a global validator that is usable on all form instances\n\t         * @param {String} name\n\t         * @param {Function} validator\n\t         * @returns {Function}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerValidator',\n\t        value: function registerValidator(name, validator) {\n\t            Form.globalValidators[name] = validator;\n\t            return Form;\n\t        }\n\t\n\t        /**\n\t         * Registers a global function that is called when a form should validate the response of a server\n\t         * @param {Function} func\n\t         * @returns {Form}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerGlobalRemoteValidationFunction',\n\t        value: function registerGlobalRemoteValidationFunction(func) {\n\t            Form.globalRemoteValidationFunction = func;\n\t            return Form;\n\t        }\n\t    }]);\n\t\n\t    return Form;\n\t})(_DestroyableWidget3.default);\n\t\n\t/**\n\t * Global validators\n\t * @type {Array}\n\t */\n\t\n\texports.default = Form;\n\tForm.globalValidators = [];\n\t\n\t/**\n\t * Global Remote validation function\n\t */\n\tForm.globalRemoteValidationFunction = function () {};\n\t\n\t/**\n\t * Handles custom error messages extracts custom message by default\n\t */\n\tForm.globalErrorMessageHandler = function (field, validity) {\n\t    if (!validity.customError) {\n\t        var customMsg = field.getAttribute(ATTR_DATA_CUSTOM_MESSAGE);\n\t        if (customMsg) {\n\t            field.setCustomValidity(customMsg);\n\t        }\n\t    }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(10);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t(function() {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  var support = {\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob();\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this._initBody(bodyInit)\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers;\n\t  self.Request = Request;\n\t  self.Response = Response;\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return;\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var status = (xhr.status === 1223) ? 204 : xhr.status\n\t        if (status < 100 || status > 599) {\n\t          reject(new TypeError('Network request failed'))\n\t          return\n\t        }\n\t        var options = {\n\t          status: status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})();\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Dropdown\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EVENT_DROPDOWN_CLOSED = undefined;\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Event = __webpack_require__(5);\n\t\n\tvar _Event2 = _interopRequireDefault(_Event);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_CC = 'data-collision-container';\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_DARKENER = 'data-darkener-container';\n\t/**\n\t * @type {string}\n\t */\n\tvar DARKENER_INIT = 'init';\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_DATA_TARGET = 'data-target';\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_CLOSE_DROPDOWN = 'data-close-dropdown';\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_NAME = 'data-dropdown';\n\t/**\n\t * @type {string}\n\t */\n\tvar STATE_LOADING = 'loading';\n\t\n\tvar CLS_DARKENER_DROPDOWN = 'darkener-dropdown';\n\t/**\n\t * @type {string}\n\t */\n\tvar CLS_OPEN = 'open';\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar CLS_DROPDOWN = 'dropdown';\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar EVENT_DROPDOWN_CLOSED = exports.EVENT_DROPDOWN_CLOSED = 'flexcss.dropdown.closed';\n\t\n\t/**\n\t * A Dropdown\n\t */\n\t\n\tvar Dropdown = (function () {\n\t    function Dropdown(DelegateContainer, Darkener) {\n\t        _classCallCheck(this, Dropdown);\n\t\n\t        var doc = global.document;\n\t\n\t        /**\n\t         * Container Element\n\t         * @type {HTMLElement}\n\t         */\n\t        this.container = DelegateContainer instanceof HTMLElement ? DelegateContainer : doc.getElementById(DelegateContainer);\n\t\n\t        this.currentOpen = null;\n\t        this.currentTarget = null;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this.darkener = Darkener instanceof HTMLElement ? Darkener : document.getElementById(Darkener);\n\t\n\t        this.destroyOnClose = false;\n\t\n\t        if (!this.darkener || !this.container) {\n\t            throw 'required elements not found (darkener and container element)';\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Method that handles delegation events for dropdowns\n\t     * @param e\n\t     * @returns {boolean}\n\t     * @private\n\t     */\n\t\n\t    _createClass(Dropdown, [{\n\t        key: '_delegateFunction',\n\t        value: function _delegateFunction(e) {\n\t            var currentOpen = this.currentOpen,\n\t                targetHas = e.target.hasAttribute(ATTR_NAME),\n\t                parentHas = e.target.parentNode ? e.target.parentNode.hasAttribute(ATTR_NAME) : false,\n\t                target = targetHas ? e.target : e.target.parentNode,\n\t                targetIsCurrent = target === this.currentTarget;\n\t\n\t            if (currentOpen && !_Util2.default.isPartOfNode(e.target, currentOpen) || targetIsCurrent) {\n\t                this.close();\n\t                if (targetIsCurrent) {\n\t                    e.preventDefault();\n\t                }\n\t                return targetIsCurrent ? false : this._delegateFunction(e);\n\t            }\n\t\n\t            if (targetHas || parentHas && !currentOpen) {\n\t                e.preventDefault();\n\t                e.stopImmediatePropagation();\n\t\n\t                if (target.isLoading) {\n\t                    return false;\n\t                }\n\t                this.createDropdown(target);\n\t            } else {\n\t                if (currentOpen) {\n\t                    if (e.target.hasAttribute(ATTR_CLOSE_DROPDOWN)) {\n\t                        e.preventDefault();\n\t                        this.close();\n\t                    }\n\t                    if (!_Util2.default.isPartOfNode(e.target, currentOpen)) {\n\t                        this.close();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Register Events for this dropdown container\n\t         * @returns {Dropdown}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents() {\n\t            this.container.addEventListener(_Settings2.default.getTabEvent(), this._delegateFunction.bind(this), true);\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Destroys this instance, unbinds events\n\t         * @returns {Dropdown}\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            this.container.removeEventListener(_Settings2.default.getTabEvent(), this._delegateFunction.bind(this), true);\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Destroys instance on close of dropdown\n\t         * @param v\n\t         * @returns {Dropdown}\n\t         */\n\t\n\t    }, {\n\t        key: 'setDestroyOnClose',\n\t        value: function setDestroyOnClose(v) {\n\t            this.destroyOnClose = v;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Will add the right class to container for specific darkener id\n\t         * @param instance\n\t         * @param show\n\t         */\n\t\n\t    }, {\n\t        key: 'toggleDarkenerToggler',\n\t        value: function toggleDarkenerToggler(instance, show) {\n\t            var cls = 'toggle-' + (instance.id || CLS_DARKENER_DROPDOWN),\n\t                classList = this.container.classList;\n\t            if (show) {\n\t                classList.add(cls);\n\t            } else {\n\t                classList.remove(cls);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Closes Dropdown on current instance\n\t         * @return {Boolean|Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'close',\n\t        value: function close() {\n\t            var _this = this;\n\t\n\t            var currentOpen = this.currentOpen;\n\t            if (!currentOpen) {\n\t                return false;\n\t            }\n\t            var future,\n\t                darkenerInstance = currentOpen.flexDarkenerInstance || this.darkener,\n\t                thisCurrentOpen = currentOpen;\n\t\n\t            future = new Promise(function (resolve) {\n\t                if (window.getComputedStyle(currentOpen).position === 'fixed') {\n\t                    _Util2.default.addEventOnce(_Settings2.default.getTransitionEvent(), currentOpen, (function () {\n\t                        setTimeout((function () {\n\t                            _Event2.default.dispatchAndFire(thisCurrentOpen, EVENT_DROPDOWN_CLOSED);\n\t                            // if a new dropdown has been opened in the meantime, do not remove darkener\n\t                            if (this.currentOpen !== null) {\n\t                                return false;\n\t                            }\n\t                            this.toggleDarkenerToggler(darkenerInstance, false);\n\t                            this.container.classList.remove(_Settings2.default.get().canvasToggledClass);\n\t                            resolve(true);\n\t                        }).bind(this), _Settings2.default.get().darkenerFadeDelay);\n\t                    }).bind(_this));\n\t                } else {\n\t                    resolve(true);\n\t                    _Event2.default.dispatchAndFire(thisCurrentOpen, EVENT_DROPDOWN_CLOSED);\n\t                }\n\t            });\n\t\n\t            currentOpen.classList.remove(CLS_OPEN);\n\t\n\t            if (currentOpen.flexDarkenerInstance) {\n\t                currentOpen.flexDarkenerInstance.classList.remove(DARKENER_INIT);\n\t            } else {\n\t                this.darkener.classList.remove(DARKENER_INIT);\n\t            }\n\t\n\t            this.currentOpen = null;\n\t            this.currentTarget = null;\n\t\n\t            if (this.destroyOnClose) {\n\t                this.destroy();\n\t            }\n\t\n\t            return future;\n\t        }\n\t\n\t        /**\n\t         * Creates a dropdown on given target and opens it\n\t         * @param {HTMLElement} target target where this dropdown is placed\n\t         * @param {FlexCss.Widget} [thisWidget] if given will use widget instead of widget instance\n\t         * @return {FlexCss.Dropdown}\n\t         */\n\t\n\t    }, {\n\t        key: 'createDropdown',\n\t        value: function createDropdown(target, thisWidget) {\n\t            var doc = global.document;\n\t\n\t            if (!target) {\n\t                throw 'Dropdown target not found';\n\t            }\n\t\n\t            var widget = thisWidget || _Widget2.default.findWidget(target),\n\t                future,\n\t                data = target.getAttribute(ATTR_NAME),\n\t                dropdownContainerElement = doc.getElementById(data),\n\t                async = !dropdownContainerElement && _Widget2.default.isWidget(widget) ? widget.getAsync() : false;\n\t\n\t            if (async) {\n\t                target.classList.add(STATE_LOADING);\n\t                target.isLoading = true;\n\t                future = async.then(function (r) {\n\t                    if (r instanceof HTMLElement) {\n\t                        if (r.id) {\n\t                            target.setAttribute(ATTR_NAME, r.id);\n\t                        }\n\t                        return r;\n\t                    } else {\n\t                        // Create container Element:\n\t                        var element = doc.createElement('div');\n\t                        element.className = CLS_DROPDOWN;\n\t                        element.innerHTML = r;\n\t                        element.id = _Util2.default.guid();\n\t                        // Cache target for later use:\n\t                        target.setAttribute(ATTR_NAME, element.id);\n\t                        this.container.appendChild(element);\n\t                        return element;\n\t                    }\n\t                }).then(function (r) {\n\t                    target.isLoading = false;\n\t                    target.classList.remove(STATE_LOADING);\n\t                    return r;\n\t                });\n\t            } else {\n\t                if (!dropdownContainerElement) {\n\t                    throw 'Could not found Dropdown container with ID \"' + data + '\"';\n\t                }\n\t                future = new Promise(function (r) {\n\t                    r(dropdownContainerElement);\n\t                });\n\t            }\n\t\n\t            future.then((function (dropdownContent) {\n\t                if (this.currentOpen) {\n\t                    this.close();\n\t                }\n\t                // Skip one frame to show animation\n\t                target.dropdownContent = dropdownContent;\n\t                var isAbsolute = global.getComputedStyle(dropdownContent).position === 'absolute';\n\t\n\t                if (!target.flexCollisionContainer) {\n\t                    var collisionC = target.getAttribute(ATTR_CC);\n\t                    target.flexCollisionContainer = collisionC ? doc.getElementById(collisionC) || document.documentElement : document.documentElement;\n\t                }\n\t\n\t                dropdownContent.classList.toggle(CLS_OPEN);\n\t                if (dropdownContent.classList.contains(CLS_OPEN)) {\n\t                    this.currentOpen = dropdownContent;\n\t                    this.currentTarget = target;\n\t                }\n\t                if (isAbsolute) {\n\t                    // Check collision:\n\t                    var selfTarget = target.getAttribute(ATTR_DATA_TARGET);\n\t                    selfTarget = selfTarget ? doc.getElementById(selfTarget) : target;\n\t                    _Util2.default.setupPositionNearby(selfTarget, dropdownContent, target.flexCollisionContainer);\n\t                } else {\n\t                    this.container.classList.add(_Settings2.default.get().canvasToggledClass);\n\t                    // optionally get custom darkener container for target\n\t                    var d = target.getAttribute(ATTR_DARKENER);\n\t                    if (d) {\n\t                        dropdownContent.flexDarkenerInstance = doc.getElementById(d);\n\t                        (dropdownContent.flexDarkenerInstance || this.darkener).classList.toggle(DARKENER_INIT);\n\t                    } else {\n\t                        this.darkener.classList.toggle(DARKENER_INIT);\n\t                    }\n\t\n\t                    this.toggleDarkenerToggler(dropdownContent.flexDarkenerInstance || this.darkener, true);\n\t\n\t                    dropdownContent.style.left = '0';\n\t                    dropdownContent.style.top = 'auto';\n\t                }\n\t            }).bind(this));\n\t        }\n\t    }]);\n\t\n\t    return Dropdown;\n\t})();\n\t\n\texports.default = Dropdown;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.LightBox\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict'\n\t\n\t/* global Image, TouchEvent*/\n\t\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Modal = __webpack_require__(7);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ATTR_MAX_WIDTH = 'data-original-width';\n\tvar ATTR_MAX_HEIGHT = 'data-original-height';\n\tvar ATTR_SRC = 'data-src';\n\t\n\tvar CLS_HAS_PREV = 'has-prev';\n\tvar CLS_HAS_NEXT = 'has-next';\n\tvar CLS_LOADING = 'loading';\n\t\n\tvar ATTR_NO_THUMBNAIL = 'data-no-thumbnail';\n\tvar ATTR_DATA_HREF = 'data-href';\n\tvar ATTR_HREF = 'href';\n\t\n\tvar KEY_NEXT = 39;\n\tvar KEY_PREV = 37;\n\tvar ATTR_CLOSE = 'data-close-modal';\n\t/**\n\t * A Simple LightBox\n\t */\n\t\n\tvar LightBox = (function () {\n\t\n\t    /**\n\t     * Creates a new Lightbox\n\t     * @param DelegateContainer\n\t     * @param AttributeSelector\n\t     * @param ModalAppend\n\t     * @param [options]\n\t     */\n\t\n\t    function LightBox(DelegateContainer, AttributeSelector, ModalAppend, options) {\n\t        _classCallCheck(this, LightBox);\n\t\n\t        var thisDelegateContainer = DelegateContainer instanceof HTMLElement ? DelegateContainer : document.getElementById(DelegateContainer);\n\t\n\t        this._modalAppend = ModalAppend || DelegateContainer;\n\t        /**\n\t         * @type {Function}\n\t         */\n\t        this._resizeEvent = null;\n\t        /**\n\t         * @type {Function}\n\t         */\n\t        this._keyboardNextEvent = null;\n\t        /**\n\t         * @type {Promise}\n\t         */\n\t        this._future = null;\n\t        /**\n\t         * @type {Promise}\n\t         */\n\t        this._nextFuture = this._future;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this._imageContainer = null;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this._modalContainerDiv = null;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this._contentContainer = null;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this._closerContainerDiv = null;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this._delegateContainer = thisDelegateContainer;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this._attributeSelector = AttributeSelector;\n\t        /**\n\t         * @type {Widget}\n\t         */\n\t        this._widget = null;\n\t        /**\n\t         * @type {boolean}\n\t         */\n\t        this._isOpen = false;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this.target = null;\n\t        /**\n\t         * @type {HTMLElement}\n\t         */\n\t        this.img = null;\n\t        /**\n\t         * @type {boolean}\n\t         */\n\t        this._isLoading = false;\n\t\n\t        /**\n\t         * Default options\n\t         */\n\t        this.options = {\n\t            // set if prev and next should be available\n\t            registerPrevNextEvents: true,\n\t            // set if modal should be closed after last image\n\t            closeOnLast: true,\n\t            // called when next image is requested (either by keyboard or click), return false to abort\n\t            onNext: function onNext() {\n\t                return true;\n\t            },\n\t            onClose: function onClose() {},\n\t            getNext: null,\n\t            getPrev: null,\n\t            // called when underlying target changed\n\t            onSwitchImage: function onSwitchImage() {}\n\t        };\n\t\n\t        _extends(this.options, options);\n\t    }\n\t\n\t    /**\n\t     * @param {HTMLElement} node\n\t     * @returns {HTMLElement|null}\n\t     */\n\t\n\t    _createClass(LightBox, [{\n\t        key: 'findImmediateNextTarget',\n\t        value: function findImmediateNextTarget(node) {\n\t            if (node && node.children[0].hasAttribute(this._attributeSelector)) {\n\t                return node.children[0];\n\t            }\n\t            return null;\n\t        }\n\t\n\t        /**\n\t         * Will fetch the next element of a lightBox\n\t         * @param {HTMLElement} target\n\t         * @returns {null|HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: 'getNext',\n\t        value: function getNext(target) {\n\t            if (this.options.getNext) {\n\t                return this.options.getNext.apply(this, [target]);\n\t            }\n\t            return this.findImmediateNextTarget(target.parentNode.nextElementSibling);\n\t        }\n\t\n\t        /**\n\t         * Will fetch the previous element of a lightBox\n\t         * @param {HTMLElement} target\n\t         * @returns {null|HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: 'getPrev',\n\t        value: function getPrev(target) {\n\t            if (this.options.getPrev) {\n\t                return this.options.getPrev.apply(this, [target]);\n\t            }\n\t            return this.findImmediateNextTarget(target.parentNode.previousElementSibling);\n\t        }\n\t\n\t        /**\n\t         * Registers events for delegate container\n\t         */\n\t\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents(onOpen) {\n\t            var _this = this;\n\t\n\t            this._delegateContainer.addEventListener(_Settings2.default.getTabEvent(), function (e) {\n\t                var target = e.target,\n\t                    parent = target.parentNode,\n\t                    validTarget = target.hasAttribute(_this._attributeSelector),\n\t                    parentIsValid = parent && parent.hasAttribute(_this._attributeSelector);\n\t                if (!validTarget && parentIsValid) {\n\t                    validTarget = true;\n\t                    target = parent;\n\t                }\n\t                if (validTarget) {\n\t                    e.preventDefault();\n\t                    _this.open(target).then(function (r) {\n\t                        if (onOpen) {\n\t                            onOpen.apply(_this, [r, target]);\n\t                        }\n\t                    });\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * @returns {HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: 'getContentContainer',\n\t        value: function getContentContainer() {\n\t            return this._contentContainer;\n\t        }\n\t\n\t        /**\n\t         * Setup max-width and max-height\n\t         * @param {HTMLElement} target\n\t         * @param {HTMLElement} img\n\t         * @param {HTMLElement} loadedImage\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'switchImageByDirection',\n\t\n\t        /**\n\t         * Switches to the next image\n\t         * @param {boolean} direction\n\t         */\n\t        value: function switchImageByDirection(direction) {\n\t            var next = direction ? this.getPrev(this.target) : this.getNext(this.target);\n\t            if (this.options.onNext.apply(this, [next])) {\n\t                return this.switchImage(next);\n\t            }\n\t            return new Promise(function (_, reject) {\n\t                return reject(next);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Checks if lightbox is currently loading\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isLoading',\n\t        value: function isLoading() {\n\t            return this._isLoading;\n\t        }\n\t\n\t        /**\n\t         * Checks if modal should be closed\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_runOptionalClose',\n\t        value: function _runOptionalClose() {\n\t            if (this.options.closeOnLast) {\n\t                this.modal.close();\n\t            }\n\t        }\n\t    }, {\n\t        key: '_setupPrevNextStates',\n\t        value: function _setupPrevNextStates() {\n\t            var target = this.target,\n\t                hasPrev = this.getPrev(target),\n\t                hasNext = this.getNext(target),\n\t                hasPrevClass = CLS_HAS_PREV,\n\t                hasNextClass = CLS_HAS_NEXT;\n\t            // because IE does not support the second toggle parameter, we need to do this manually\n\t            if (hasPrev) {\n\t                this._imageContainer.classList.add(hasPrevClass);\n\t            } else {\n\t                this._imageContainer.classList.remove(hasPrevClass);\n\t            }\n\t            if (hasNext) {\n\t                this._imageContainer.classList.add(hasNextClass);\n\t            } else {\n\t                this._imageContainer.classList.remove(hasNextClass);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * @param img\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_calculateContainer',\n\t        value: function _calculateContainer(img) {\n\t            if (_Settings2.default.isIE()) {\n\t                setTimeout((function () {\n\t                    this._imageContainer.style.height = img.offsetHeight + 'px';\n\t                }).bind(this), 0);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Switch to a specific image\n\t         * @param next\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'switchImage',\n\t        value: function switchImage(next) {\n\t            var _this2 = this;\n\t\n\t            var self = this,\n\t                img = this.img;\n\t            this._isLoading = true;\n\t            self._nextFuture = new Promise((function (resolve, reject) {\n\t                // notify observers about image switching\n\t                self.options.onSwitchImage.apply(self, [self._nextFuture]);\n\t                if (next) {\n\t                    var nextThumb = next.hasAttribute(ATTR_NO_THUMBNAIL) ? next : next.children[0] || next,\n\t                        nextHighRes = next.getAttribute(ATTR_DATA_HREF) || next.getAttribute(ATTR_HREF),\n\t                        nextSource = nextThumb.getAttribute(ATTR_SRC) || nextThumb.src || nextHighRes,\n\t                        nextImgObject = new Image();\n\t\n\t                    if (!nextSource) {\n\t                        reject(next);\n\t                        return;\n\t                    }\n\t                    // set new target to next element\n\t                    _this2.target = next;\n\t                    nextImgObject.src = nextSource;\n\t                    self._imageContainer.classList.add(CLS_LOADING);\n\t                    nextImgObject.addEventListener('load', (function () {\n\t                        img.src = nextSource;\n\t                        self._imageContainer.style.backgroundImage = 'url(' + nextSource + ')';\n\t                        LightBox._setupMaxWidthHeight(next, img, nextImgObject);\n\t                        self._calculateContainer(img);\n\t                        self.highRes(nextThumb, nextHighRes);\n\t                        self._setupPrevNextStates();\n\t                        self._imageContainer.classList.remove(CLS_LOADING);\n\t                        this._isLoading = false;\n\t                        resolve(nextSource, this.target);\n\t                    }).bind(_this2));\n\t                } else {\n\t                    reject(_this2);\n\t                }\n\t            }).bind(this));\n\t            return self._nextFuture;\n\t        }\n\t\n\t        /**\n\t         * Setup High-Resolution picture\n\t         * @param {HTMLElement} thisThumbnail\n\t         * @param {String} thisImgHighResolution\n\t         */\n\t\n\t    }, {\n\t        key: 'highRes',\n\t        value: function highRes(thisThumbnail, thisImgHighResolution) {\n\t\n\t            if (thisImgHighResolution && thisThumbnail.src !== thisImgHighResolution) {\n\t                var highImageObj = new Image();\n\t                highImageObj.src = thisImgHighResolution;\n\t                highImageObj.addEventListener('load', (function () {\n\t                    // if current image is still available\n\t                    if (this._getSrc(thisThumbnail) === this.img.src) {\n\t                        this.img.src = thisImgHighResolution;\n\t                        this._imageContainer.style.backgroundImage = 'url(' + thisImgHighResolution + ')';\n\t                    }\n\t                }).bind(this));\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Extracts the source of an image\n\t         * @param target\n\t         * @returns {String|null}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_getSrc',\n\t        value: function _getSrc(target) {\n\t            return target.getAttribute(ATTR_SRC) || target.src;\n\t        }\n\t\n\t        /**\n\t         * Will show a lightBox on given target\n\t         * @param {HTMLElement} target\n\t         * @returns {$.Deferred|*}\n\t         */\n\t\n\t    }, {\n\t        key: 'open',\n\t        value: function open(target) {\n\t            var self = this;\n\t\n\t            if (!target) {\n\t                return false;\n\t            }\n\t\n\t            this.target = target;\n\t\n\t            // if lightBox is open, we just switch to the new target image\n\t            if (this._isOpen && target) {\n\t                return this.switchImage(target).then((function () {\n\t                    return this;\n\t                }).bind(this));\n\t            }\n\t\n\t            this._isOpen = true;\n\t\n\t            /**\n\t             * Setup Widget for modal\n\t             * @type {Widget}\n\t             */\n\t            this._widget = new _Widget2.default().setAsync((function () {\n\t                var _this3 = this;\n\t\n\t                // thumbnail is either target itself or expected to be first childNode\n\t                var thumbnail = target.hasAttribute(ATTR_NO_THUMBNAIL) ? target : target.children[0] || target;\n\t\n\t                var imgHighResolution = target.getAttribute(ATTR_DATA_HREF) || target.getAttribute(ATTR_HREF),\n\t                    imgSrc = this._getSrc(thumbnail) || imgHighResolution;\n\t\n\t                var imageObj = new Image();\n\t                imageObj.src = imgSrc;\n\t                this._imageContainer = document.createElement('div');\n\t                this._modalContainerDiv = document.createElement('div');\n\t                this._closerContainerDiv = document.createElement('i');\n\t                this._contentContainer = document.createElement('div');\n\t\n\t                this._closerContainerDiv.className = 'modal-close modal-close-lightbox icon-cancel-1';\n\t                this._closerContainerDiv.setAttribute(ATTR_CLOSE, ATTR_CLOSE);\n\t\n\t                this._modalContainerDiv.className = 'modal image-modal';\n\t                this._modalContainerDiv.appendChild(this._imageContainer);\n\t                this._modalContainerDiv.appendChild(this._contentContainer);\n\t                this._modalContainerDiv.appendChild(this._closerContainerDiv);\n\t                this._contentContainer.className = 'content-container';\n\t                this._isLoading = true;\n\t                this._future = new Promise((function (resolve) {\n\t                    imageObj.addEventListener('load', (function () {\n\t                        this._imageContainer.className = 'image-container';\n\t                        var img = document.createElement('img');\n\t                        // current image\n\t                        this.img = img;\n\t\n\t                        img.src = imgSrc;\n\t                        LightBox._setupMaxWidthHeight(target, img, imageObj);\n\t                        this._imageContainer.appendChild(img);\n\t                        this._imageContainer.style.backgroundImage = 'url(' + imgSrc + ')';\n\t\n\t                        resolve(self._modalContainerDiv);\n\t                        this._isLoading = false;\n\t\n\t                        if (_Settings2.default.isIE()) {\n\t                            self._resizeEvent = global.addEventListener('resize', function () {\n\t                                setTimeout(function () {\n\t                                    self._imageContainer.style.height = img.offsetHeight + 'px';\n\t                                }, 0);\n\t                            });\n\t                        }\n\t\n\t                        if (self.options.registerPrevNextEvents) {\n\t                            self._setupPrevNextStates();\n\t                            // prev or next on touch/click\n\t                            self._imageContainer.addEventListener(_Settings2.default.getTabEvent(), function (e) {\n\t                                if (self.isLoading()) {\n\t                                    return;\n\t                                }\n\t                                e.preventDefault();\n\t\n\t                                var ev = e;\n\t                                var pageX = global.TouchEvent && ev instanceof TouchEvent ? ev.changedTouches[0].pageX : ev.pageX;\n\t                                var rect = self._imageContainer.getBoundingClientRect(),\n\t                                    imgX = rect.left,\n\t                                    wrapperWidth = rect.width,\n\t                                    posX = pageX - imgX;\n\t\n\t                                self.switchImageByDirection(wrapperWidth / 2 > posX).catch(function () {\n\t                                    self._runOptionalClose();\n\t                                });\n\t                            });\n\t\n\t                            // register keyboard events\n\t                            self._keyboardNextEvent = function (e) {\n\t                                if (e.keyCode === KEY_NEXT || e.keyCode === KEY_PREV) {\n\t                                    if (self.isLoading()) {\n\t                                        return;\n\t                                    }\n\t                                    self.switchImageByDirection(e.keyCode === KEY_PREV).catch(function () {\n\t                                        self._runOptionalClose();\n\t                                    });\n\t                                }\n\t                            };\n\t                            global.addEventListener('keydown', self._keyboardNextEvent);\n\t                        } else {\n\t                            self._imageContainer.addEventListener(_Settings2.default.getTabEvent(), function () {\n\t                                self._runOptionalClose();\n\t                            });\n\t                        }\n\t\n\t                        self.highRes(thumbnail, imgHighResolution);\n\t                    }).bind(_this3));\n\t                }).bind(this));\n\t                this._future.then((function () {\n\t                    self._calculateContainer(this.img);\n\t                }).bind(this));\n\t                self._modalContainerDiv.addEventListener(_Modal.EVENT_MODAL_CLOSED, (function () {\n\t                    // cleanup:\n\t                    this._modalContainerDiv.parentNode.removeChild(this._modalContainerDiv);\n\t                    this.options.onClose.apply(self);\n\t                    this._isOpen = false;\n\t                    this.modal.destroy();\n\t                    // unbind events\n\t                    if (this._keyboardNextEvent) {\n\t                        global.removeEventListener('keydown', self._keyboardNextEvent);\n\t                    }\n\t                    if (this._resizeEvent) {\n\t                        global.removeEventListener('resize', self._resizeEvent);\n\t                    }\n\t                }).bind(this));\n\t\n\t                return this._future;\n\t            }).bind(this));\n\t\n\t            this._nextFuture = this._future;\n\t\n\t            if (self._widget) {\n\t                this.modal = new _Modal2.default(this._modalAppend);\n\t                // make sure we close stack before\n\t                return this.modal.close().fromWidget(self._widget).then(function () {\n\t                    return self._future.then(function () {\n\t                        return self;\n\t                    });\n\t                });\n\t            } else {\n\t                return false;\n\t            }\n\t        }\n\t    }], [{\n\t        key: '_setupMaxWidthHeight',\n\t        value: function _setupMaxWidthHeight(target, img, loadedImage) {\n\t            var nextMaxWidth = target.getAttribute(ATTR_MAX_WIDTH),\n\t                nextMaxHeight = target.getAttribute(ATTR_MAX_HEIGHT);\n\t            if (nextMaxWidth && nextMaxHeight) {\n\t                img.style.maxWidth = nextMaxWidth + \"px\";\n\t                img.style.maxHeight = nextMaxHeight + \"px\";\n\t            } else {\n\t                img.style.maxWidth = loadedImage.width + \"px\";\n\t                img.style.maxHeight = loadedImage.height + \"px\";\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return LightBox;\n\t})();\n\t\n\texports.default = LightBox;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.OffCanvas\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_CLOSE_SIDEBAR = 'data-close-offcanvas';\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_TARGET = 'data-offcanvas';\n\t/**\n\t * @type {string}\n\t */\n\tvar TOGGLE_CLASS = 'toggled-canvas';\n\t/**\n\t * @type {string}\n\t */\n\tvar INIT_CLASS = 'init';\n\t/**\n\t * @type {string}\n\t */\n\tvar OPEN_CLASS = 'open';\n\t/**\n\t * @type {number}\n\t */\n\tvar HIDE_FACTOR = 3;\n\t\n\t/**\n\t * A OffCanvas Implementation\n\t */\n\t\n\tvar OffCanvas = (function () {\n\t\n\t    /**\n\t     * Creates an off-canvas navigation\n\t     * @param {HTMLElement|String} NavigationId\n\t     * @param {HTMLElement|String} Darkener\n\t     * @param {int} factor positive will expect right sidebar, positive left\n\t     * @param {bool} [disableTouch] if true all touch events are disabled\n\t     * @constructor\n\t     */\n\t\n\t    function OffCanvas(NavigationId, Darkener, factor, disableTouch) {\n\t        _classCallCheck(this, OffCanvas);\n\t\n\t        var doc = global.document,\n\t            touched = 0,\n\t            navigationContainer = NavigationId instanceof HTMLElement ? NavigationId : doc.getElementById(NavigationId),\n\t            darkener = Darkener instanceof HTMLElement ? Darkener : doc.getElementById(Darkener),\n\t            DARKENER_CLASS_TOGGLE = 'toggle-' + darkener.id || 'darkener',\n\t            DARKENER_CLASS_INSTANT_TOGGLE = DARKENER_CLASS_TOGGLE + '-open',\n\t            resetStyles = function resetStyles(s) {\n\t            s.transform = '';\n\t            s.transition = '';\n\t            s.webkitTransform = '';\n\t            s.webkitTransition = '';\n\t        },\n\t            shouldNotTouch = function shouldNotTouch() {\n\t            return window.innerWidth >= _Settings2.default.get().smallBreakpoint;\n\t        };\n\t\n\t        if (!darkener || !navigationContainer) {\n\t            throw 'Could not find needed elements (Darkener and/or NavigationId)';\n\t        }\n\t\n\t        this.darkener = darkener;\n\t        this.darkenerClassToggle = DARKENER_CLASS_TOGGLE;\n\t        this.darkenerClassToggleInstant = DARKENER_CLASS_INSTANT_TOGGLE;\n\t\n\t        this.navigationContainer = navigationContainer;\n\t        this.navigationContainerId = navigationContainer.id;\n\t\n\t        // create id if id does not exist\n\t        if (!this.navigationContainerId) {\n\t            this.navigationContainerId = _Util2.default.guid();\n\t            navigationContainer.id = this.navigationContainerId;\n\t        }\n\t\n\t        if (!disableTouch) {\n\t            navigationContainer.addEventListener('touchstart', function (e) {\n\t                requestAnimationFrame(function () {\n\t                    if (shouldNotTouch()) {\n\t                        return;\n\t                    }\n\t                    touched = e.touches[0].clientX;\n\t                    var target = navigationContainer,\n\t                        style = target.style;\n\t                    target.mustHide = false;\n\t                    style.transition = 'transform 0s ease';\n\t                    style.webkitTransition = '-webkit-transform 0s ease';\n\t                });\n\t            });\n\t            navigationContainer.addEventListener('touchmove', function (e) {\n\t\n\t                if (shouldNotTouch()) {\n\t                    return;\n\t                }\n\t                var x = e.touches[0].clientX,\n\t                    target = navigationContainer,\n\t                    style = target.style,\n\t                    calc = touched - x,\n\t                    bounds = target.getBoundingClientRect(),\n\t                    compare = factor > 0 ? calc <= 0 : calc >= 0;\n\t                if (compare) {\n\t                    target.mustHide = factor > 0 ? calc * -1 > bounds.width / HIDE_FACTOR : calc > bounds.width / HIDE_FACTOR;\n\t                    style.transform = 'translate3d(' + calc * -1 + 'px,0,0)';\n\t                    style.webkitTransform = 'translate3d(' + calc * -1 + 'px,0,0)';\n\t                }\n\t            });\n\t            navigationContainer.addEventListener('touchend', (function () {\n\t                requestAnimationFrame((function () {\n\t                    if (shouldNotTouch()) {\n\t                        return;\n\t                    }\n\t                    var target = navigationContainer,\n\t                        style = target.style;\n\t                    if (target.mustHide) {\n\t                        var width = target.getBoundingClientRect().width * factor;\n\t                        style.transition = 'transform .2s ease';\n\t                        style.webkitTransition = '-webkit-transform .2s ease';\n\t\n\t                        style.transform = 'translate3d(' + width + 'px,0,0)';\n\t                        style.webkitTransform = 'translate3d(' + width + 'px,0,0)';\n\t                        this._remove(function () {\n\t                            resetStyles(style);\n\t                        });\n\t                        this._removeInstant();\n\t                    } else {\n\t                        resetStyles(style);\n\t                    }\n\t                }).bind(this));\n\t            }).bind(this));\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t\n\t    _createClass(OffCanvas, [{\n\t        key: '_remove',\n\t        value: function _remove(callback) {\n\t            _Util2.default.addEventOnce(_Settings2.default.getTransitionEvent(), this.navigationContainer, (function () {\n\t                // add timeout because transition event fires a little to early\n\t                setTimeout((function () {\n\t                    requestAnimationFrame((function () {\n\t                        var body = global.document.body;\n\t                        OffCanvas.currentOpen = null;\n\t                        body.classList.remove(TOGGLE_CLASS);\n\t                        body.classList.remove(this.darkenerClassToggle);\n\t                        if (callback) {\n\t                            callback();\n\t                        }\n\t                    }).bind(this));\n\t                }).bind(this), _Settings2.default.get().darkenerFadeDelay);\n\t            }).bind(this));\n\t        }\n\t\n\t        /**\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_removeInstant',\n\t        value: function _removeInstant() {\n\t            this.navigationContainer.classList.remove(OPEN_CLASS);\n\t            global.document.body.classList.remove(this.darkenerClassToggleInstant);\n\t            this.darkener.classList.remove(INIT_CLASS);\n\t        }\n\t\n\t        /**\n\t         * Toggles a an off-canvas element\n\t         * @param e\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_toggle',\n\t        value: function _toggle(e) {\n\t            e.preventDefault();\n\t            var bodyClass = global.document.body.classList,\n\t                darkenerClass = this.darkener.classList,\n\t                DARKENER_CLASS_TOGGLE = this.darkenerClassToggle,\n\t                DARKENER_CLASS_INSTANT_TOGGLE = this.darkenerClassToggleInstant,\n\t                navigationControllerClassList = this.navigationContainer.classList;\n\t            if (this.navigationContainer.classList.contains(OPEN_CLASS)) {\n\t                this._remove();\n\t                this._removeInstant(navigationControllerClassList);\n\t            } else if (!OffCanvas.currentOpen) {\n\t                OffCanvas.currentOpen = this;\n\t                bodyClass.add(DARKENER_CLASS_INSTANT_TOGGLE);\n\t                bodyClass.add(TOGGLE_CLASS);\n\t                bodyClass.add(DARKENER_CLASS_TOGGLE);\n\t                darkenerClass.add(INIT_CLASS);\n\t                navigationControllerClassList.add(OPEN_CLASS);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Register events\n\t         * @param [delegate]\n\t         */\n\t\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents(delegate) {\n\t            delegate = delegate || global.document;\n\t            delegate.addEventListener(_Settings2.default.getTabEvent(), (function (e) {\n\t                if (OffCanvas.currentOpen && OffCanvas.currentOpen !== this) {\n\t                    return;\n\t                }\n\t                var id = this.navigationContainerId,\n\t                    validTarget = e.target.getAttribute(ATTR_TARGET) === id;\n\t                if (!_Util2.default.isPartOfNode(e.target, this.navigationContainer)) {\n\t                    if (validTarget || OffCanvas.currentOpen === this && e.target === this.darkener) {\n\t                        this._toggle(e);\n\t                    }\n\t                } else {\n\t                    if (e.target.hasAttribute(ATTR_CLOSE_SIDEBAR)) {\n\t                        this._toggle(e);\n\t                    }\n\t                }\n\t            }).bind(this));\n\t        }\n\t    }]);\n\t\n\t    return OffCanvas;\n\t})();\n\t\n\texports.default = OffCanvas;\n\t\n\tOffCanvas.currentOpen = null;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict'\n\t\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t;\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _DestroyableWidget2 = __webpack_require__(3);\n\t\n\tvar _DestroyableWidget3 = _interopRequireDefault(_DestroyableWidget2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Showcase = (function (_DestroyableWidget) {\n\t    _inherits(Showcase, _DestroyableWidget);\n\t\n\t    function Showcase(container) {\n\t        _classCallCheck(this, Showcase);\n\t\n\t        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Showcase).call(this));\n\t\n\t        _this2.container = container;\n\t\n\t        _this2.registerEvents();\n\t        return _this2;\n\t    }\n\t\n\t    _createClass(Showcase, [{\n\t        key: 'registerEvents',\n\t        value: function registerEvents() {\n\t            var _this = this;\n\t\n\t            var innerContainer = this.container.children[0],\n\t                containerWidth = innerContainer.getBoundingClientRect().width,\n\t                parentContainerWidth = this.container.getBoundingClientRect().width;\n\t            var diff = containerWidth - parentContainerWidth;\n\t\n\t            var lastX = 0,\n\t                lastMove = undefined;\n\t\n\t            this.container.addEventListener('mouseenter', function (e) {\n\t                var rect = _this.container.getBoundingClientRect();\n\t\n\t                lastX = e.clientX;\n\t            });\n\t\n\t            this.container.addEventListener('mousemove', function (e) {\n\t                var rect = _this.container.getBoundingClientRect();\n\t                var nextX = e.clientX;\n\t                var normalizedRight = Math.abs(nextX - rect.left) / (rect.width / 2);\n\t                requestAnimationFrame(function () {\n\t                    var moveX = (1 - normalizedRight) * diff;\n\t                    innerContainer.style.webkitTransform = 'translate3d(' + moveX + 'px,0,0)';\n\t                    innerContainer.style.transform = 'translate3d(' + moveX + 'px,0,0)';\n\t                    lastMove = moveX;\n\t                });\n\t            });\n\t        }\n\t    }], [{\n\t        key: 'init',\n\t        value: function init(selector) {\n\t            var elements = document.querySelectorAll(selector);\n\t            return Array.prototype.slice.call(elements).map(function (el) {\n\t                return new Showcase(el);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Showcase;\n\t})(_DestroyableWidget3.default);\n\t\n\texports.default = Showcase;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Toggleable\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EVENT_TAB_OPENED = exports.EVENT_TAB_CLOSED = undefined;\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _Event = __webpack_require__(5);\n\t\n\tvar _Event2 = _interopRequireDefault(_Event);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Event that is fired when a tab is closed\n\t * @type {string}\n\t */\n\t\n\tvar EVENT_TAB_CLOSED = exports.EVENT_TAB_CLOSED = 'flexcss.tab.closed';\n\t\n\t/**\n\t * Event that is fired when a tab has been opened\n\t * @type {string}\n\t */\n\tvar EVENT_TAB_OPENED = exports.EVENT_TAB_OPENED = 'flexcss.tab.opened';\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_NAME = 'data-toggle';\n\t/**\n\t * @type {string}\n\t */\n\tvar ACTIVE_CLASS = 'active';\n\t/**\n\t * @type {string}\n\t */\n\tvar LOADING_CLASS = 'loading';\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_TOGGLE_LIST = 'data-toggle-list';\n\t\n\t/**\n\t * Creates a toggleable element, either for tabs or a single toggle\n\t */\n\t\n\tvar Toggleable = (function () {\n\t    function Toggleable(ContainerId) {\n\t        _classCallCheck(this, Toggleable);\n\t\n\t        var doc = global.document;\n\t\n\t        this.container = ContainerId instanceof HTMLElement ? ContainerId : doc.getElementById(ContainerId);\n\t\n\t        this.loading = false;\n\t\n\t        if (!this.container) {\n\t            throw 'Toggleable container with id \"' + ContainerId + '\" not found';\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Listener\n\t     * @param {Event} e\n\t     * @private\n\t     */\n\t\n\t    _createClass(Toggleable, [{\n\t        key: '_listener',\n\t        value: function _listener(e) {\n\t            var target = e.target,\n\t                parent = target.parentNode,\n\t                doc = global.document;\n\t\n\t            // support target child element to clicked\n\t            if (!target.hasAttribute(ATTR_NAME)) {\n\t                if (parent && parent.hasAttribute(ATTR_NAME)) {\n\t                    target = parent;\n\t                } else {\n\t                    return;\n\t                }\n\t            }\n\t\n\t            if (!target.hasAttribute(ATTR_NAME)) {\n\t                return;\n\t            }\n\t\n\t            var refId = target.getAttribute(ATTR_NAME),\n\t                ref = doc.getElementById(refId);\n\t\n\t            e.preventDefault();\n\t\n\t            if (this.loading) {\n\t                return;\n\t            }\n\t\n\t            this.toggleTarget(ref, target);\n\t        }\n\t\n\t        /**\n\t         * Registers Events for this instance\n\t         * @returns {Toggleable}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents() {\n\t            this.container.addEventListener(_Settings2.default.getTabEvent(), this._listener.bind(this));\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Toggles given `ref`\n\t         * @param {HTMLElement} ref\n\t         * @param {HTMLElement} [target] optional target node\n\t         */\n\t\n\t    }, {\n\t        key: 'toggleTarget',\n\t        value: function toggleTarget(ref, target) {\n\t            var _this = this;\n\t\n\t            if (!target && !ref) {\n\t                return;\n\t            }\n\t            if (!target) {\n\t                target = document.querySelector('[' + ATTR_NAME + '=\"' + ref.id + '\"]');\n\t            }\n\t\n\t            var maybeToggleNode,\n\t                future,\n\t                elClassList = target.classList,\n\t                parentClassList,\n\t                parent = target.parentNode,\n\t                doc = global.document;\n\t\n\t            future = new Promise(function (resolve, failure) {\n\t                if (ref) {\n\t                    resolve(ref);\n\t                } else {\n\t                    var widget = _Widget2.default.findWidget(target),\n\t                        async = widget ? widget.getAsync() : null;\n\t                    if (_Widget2.default.isWidget(widget) && async) {\n\t                        future = async.then(function (r) {\n\t                            if (r instanceof HTMLElement) {\n\t                                var id = _Util2.default.guid();\n\t                                r.id = id;\n\t                                target.setAttribute(ATTR_NAME, id);\n\t                                resolve(r);\n\t                            } else {\n\t                                throw 'Dynamically creating toggle-content is not supported right now. ' + 'Return an HTMLElement instance';\n\t                            }\n\t                        });\n\t                    } else {\n\t                        failure('Target not given');\n\t                    }\n\t                }\n\t            });\n\t\n\t            if (parent) {\n\t                maybeToggleNode = _Util2.default.parentsUntil(target, function (node) {\n\t                    return node && node.hasAttribute && node.hasAttribute(ATTR_TOGGLE_LIST);\n\t                });\n\t\n\t                parentClassList = parent.classList;\n\t                // Abort if element is already active and if is part of a toggle list\n\t                if (maybeToggleNode) {\n\t                    if (!parentClassList.contains(ACTIVE_CLASS)) {\n\t                        parentClassList.toggle(ACTIVE_CLASS);\n\t                        parentClassList.add(LOADING_CLASS);\n\t                    } else {\n\t                        return;\n\t                    }\n\t                }\n\t\n\t                if (maybeToggleNode) {\n\t                    for (var i = 0; i < maybeToggleNode.children.length; i++) {\n\t                        var n = maybeToggleNode.children[i],\n\t                            targetRef = n.children[0];\n\t                        if (n !== parent) {\n\t                            n.classList.remove(ACTIVE_CLASS);\n\t                            if (targetRef) {\n\t                                var attr = targetRef.getAttribute(ATTR_NAME),\n\t                                    el = attr ? doc.getElementById(attr) : null;\n\t                                if (el) {\n\t                                    _Event2.default.dispatchAndFire(el, EVENT_TAB_CLOSED);\n\t                                    el.classList.remove(ACTIVE_CLASS);\n\t                                    targetRef.classList.remove(ACTIVE_CLASS);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (elClassList) {\n\t                elClassList.toggle(ACTIVE_CLASS);\n\t                elClassList.add(LOADING_CLASS);\n\t            }\n\t            this.loading = true;\n\t            future.then((function (r) {\n\t                _Event2.default.dispatchAndFire(r, EVENT_TAB_OPENED);\n\t                Toggleable._handleLoaded(target);\n\t                r.classList.toggle(ACTIVE_CLASS);\n\t                this.loading = false;\n\t            }).bind(this)).catch(function (reason) {\n\t                _this.loading = false;\n\t                Toggleable._handleLoaded(target);\n\t                console.warn(reason);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * @param el\n\t         * @private\n\t         */\n\t\n\t    }], [{\n\t        key: '_handleLoaded',\n\t        value: function _handleLoaded(el) {\n\t            var parentClassList = el.parentNode.classList;\n\t            el.classList.remove(LOADING_CLASS);\n\t            if (parentClassList) {\n\t                parentClassList.remove(LOADING_CLASS);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Toggleable;\n\t})();\n\t\n\texports.default = Toggleable;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Form = __webpack_require__(8);\n\t\n\tvar _Form2 = _interopRequireDefault(_Form);\n\t\n\tvar _Tooltip = __webpack_require__(6);\n\t\n\tvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\t\n\tvar _Modal = __webpack_require__(7);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Widget = __webpack_require__(4);\n\t\n\tvar _Widget2 = _interopRequireDefault(_Widget);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _Toggleable = __webpack_require__(15);\n\t\n\tvar _Toggleable2 = _interopRequireDefault(_Toggleable);\n\t\n\tvar _OffCanvas = __webpack_require__(13);\n\t\n\tvar _OffCanvas2 = _interopRequireDefault(_OffCanvas);\n\t\n\tvar _Dropdown = __webpack_require__(11);\n\t\n\tvar _Dropdown2 = _interopRequireDefault(_Dropdown);\n\t\n\tvar _LightBox = __webpack_require__(12);\n\t\n\tvar _LightBox2 = _interopRequireDefault(_LightBox);\n\t\n\tvar _Showcase = __webpack_require__(14);\n\t\n\tvar _Showcase2 = _interopRequireDefault(_Showcase);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// default export as component object\n\texports.default = {\n\t    Form: _Form2.default,\n\t    Tooltip: _Tooltip2.default,\n\t    Modal: _Modal2.default,\n\t    Widget: _Widget2.default,\n\t    Settings: _Settings2.default,\n\t    Util: _Util2.default,\n\t    Toggleable: _Toggleable2.default,\n\t    OffCanvas: _OffCanvas2.default,\n\t    Dropdown: _Dropdown2.default,\n\t    LightBox: _LightBox2.default,\n\t    Showcase: _Showcase2.default\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** js/flexcss.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d19e6c04019190bf33eb\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\nconst PFX = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\nconst COL_LEFT_CLASS = 'is-collision-left';\n\nconst COL_RIGHT_CLASS = 'is-collision-right';\n\nconst COL_BOTTOM_CLASS = 'is-collision-bottom';\n\n/**\n * Provides shared DOM-Utility functions\n */\nexport default\nclass Util {\n\n    /**\n     * Will register the right animation event based on browser\n     * @param element\n     * @param type\n     * @param callback\n     */\n    static prefixedAnimateEvent(element, type, callback) {\n        const thisFunction = function (e) {\n            callback.apply(element, [e, thisFunction]);\n        };\n\n        for (var p = 0; p < PFX.length; p++) {\n            if (!PFX[p]) {\n                type = type.toLowerCase();\n            }\n            var name = PFX[p] + type;\n            element.addEventListener(name, thisFunction, true);\n        }\n    }\n\n    /**\n     * Get correct transitionend event\n     * @returns {String}\n     * @private\n     */\n    static whichTransitionEndEvent() {\n        let t;\n        const el = document.createElement('fake');\n\n        var transitions = {\n            'transition': 'transitionend',\n            'OTransition': 'oTransitionEnd',\n            'MozTransition': 'transitionend',\n            'WebkitTransition': 'webkitTransitionEnd'\n        };\n\n        for (t in transitions) {\n            if (el.style[t] !== undefined) {\n                return transitions[t];\n            }\n        }\n    }\n\n    /**\n     * Check if target is part of parent node\n     * @param target\n     * @param parent\n     * @returns {boolean}\n     */\n    static isPartOfNode(target, parent) {\n        if (!target || !parent) {\n            return false;\n        }\n        let now = target;\n        while (now !== parent && now !== null) {\n            if (now === parent) {\n                break;\n            }\n            now = now.parentNode;\n        }\n        return now !== null;\n    }\n\n    /**\n     * Walks the tree until func returns true for given argument\n     * @param target\n     * @param func\n     * @returns {boolean|HTMLElement}\n     */\n    static parentsUntil(target, func) {\n        if (!target) {\n            return false;\n        }\n        let now = target;\n        while (!func(now) && now !== null) {\n            now = now.parentNode;\n        }\n\n        return now;\n    }\n\n    /**\n     * Generates a unique id\n     * @return {String}\n     */\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    /**\n     * Detects scrollbar width\n     * @see http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n     * @returns {number}\n     */\n    static getScrollBarWidth() {\n\n        const doc = global.document, inner = doc.createElement('p');\n        inner.style.width = \"100%\";\n        inner.style.height = \"200px\";\n\n        const outer = doc.createElement('div');\n        outer.style.position = \"absolute\";\n        outer.style.top = \"0px\";\n        outer.style.left = \"0px\";\n        outer.style.visibility = \"hidden\";\n        outer.style.width = \"200px\";\n        outer.style.height = \"150px\";\n        outer.style.overflow = \"hidden\";\n        outer.appendChild(inner);\n\n        doc.body.appendChild(outer);\n        const w1 = inner.offsetWidth;\n        outer.style.overflow = 'scroll';\n        let w2 = inner.offsetWidth;\n        if (w1 === w2) {\n            w2 = outer.clientWidth;\n        }\n        doc.body.removeChild(outer);\n\n        return (w1 - w2);\n    }\n\n\n    /**\n     * Run an event once\n     * @param {String} ev\n     * @param {HTMLElement|HTMLDocument} target\n     * @param {Function} func\n     * @param {boolean} [capture]\n     * @return Function created listener\n     */\n    static addEventOnce(ev, target, func, capture) {\n        const thisFunction = function thisFunction(event) {\n            func(event, func);\n            target.removeEventListener(ev, thisFunction, capture);\n        };\n        target.addEventListener(ev, thisFunction, capture);\n        return thisFunction;\n    }\n\n    /**\n     * Checks if an element is visible\n     * @param {HTMLElement} element\n     * @returns bool\n     */\n    static isVisible(element) {\n        return element.offsetWidth > 0 && element.offsetHeight > 0;\n    }\n\n    /**\n     * Creates a camelCaseRepresentation of a dashed string\n     * @param {String} str\n     * @returns String\n     */\n    static dashToCamelCase(str) {\n        return str.replace(/-([a-z])/g, function (g) {\n            return g[1].toUpperCase();\n        });\n    }\n\n    /**\n     * Creates a copy of `input`\n     * @param {*} input\n     * @return *\n     */\n    static copy(input) {\n        return JSON.parse(JSON.stringify(input));\n    }\n\n    /**\n     * Reads options from element (data attributes) and applies to base\n     * @param {HTMLElement} element\n     * @param {Object} base\n     * @return {Object}\n     */\n    static applyOptionsFromElement(element, base) {\n        if (!element) {\n            return base;\n        }\n        const attrs = element.attributes;\n        for (let i = 0; i < attrs.length; i++) {\n            let attr = attrs[i];\n            if (attr) {\n                let s = Util.dashToCamelCase(attr.nodeName.replace('data-', '')),\n                    val = attr.nodeValue;\n                if (base.hasOwnProperty(s)) {\n                    // skip functions\n                    if (typeof base[s] === 'function') {\n                        continue;\n                    }\n                    if (typeof base[s] === 'boolean') {\n                        base[s] = parseInt(val || 1) === 1;\n                    } else {\n                        base[s] = val;\n                    }\n                }\n            }\n        }\n        return base;\n    }\n\n    /**\n     * Will position an element directly at given target\n     * Is aware of a given collision container to detect edges\n     * Will put elementToPosition either to left, center or right edge (prefer right)\n     *  and either to bottom or top (prefers bottom)\n     *\n     * You may overwrite preferred positioned with `centerHorizontal` and `positionTop`\n     *\n     * @param {HTMLElement|ClientRect} target the target container to align to\n     * @param {HTMLElement} elementToPosition the element to position\n     * @param {HTMLElement} collisionContainer the outer container to prevent collisions\n     * @param {bool} [centerHorizontal] set true to center element, otherwise it's put on the right border by default\n     * @param {bool} [positionTop] flip top, by default element is positioned to the bottom.\n     * @returns {HTMLElement}\n     */\n    static setupPositionNearby(target, elementToPosition, collisionContainer, centerHorizontal, positionTop) {\n\n        // determine relative offsets\n        let amountTop = 0, amountLeft = 0;\n        Util.parentsUntil(target.parentNode, function (el) {\n            if (!(el instanceof HTMLElement)) {\n                return false;\n            }\n            var style = window.getComputedStyle(el);\n            if (Util.isPartOfNode(elementToPosition, el)) {\n                if (style && style.position === 'relative') {\n                    amountTop += el.offsetTop || 0;\n                    amountLeft += el.offsetLeft || 0;\n                }\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        const targetPosition = target instanceof HTMLElement ? target.getBoundingClientRect() : target,\n            elementRect = elementToPosition.getBoundingClientRect(),\n            colRect = collisionContainer.getBoundingClientRect(),\n            targetTop = targetPosition.top - amountTop, targetRight = targetPosition.right,\n            isCollisionTop = (targetTop - elementRect.height) <= 0,\n            isCollisionBottom = window.innerHeight < (targetTop + amountTop + targetPosition.height + elementRect.height),\n            isCollisionLeft = targetRight < elementRect.width, targetLeft = targetPosition.left,\n            isCollisionRight = (targetLeft + elementRect.width) > colRect.width,\n            classList = elementToPosition.classList;\n\n        classList.remove(COL_RIGHT_CLASS);\n        classList.remove(COL_LEFT_CLASS);\n        classList.remove(COL_BOTTOM_CLASS);\n\n        let calcTop, calcLeft;\n        if (isCollisionLeft && !isCollisionRight) {\n            // put element to left if collision with left\n            calcLeft = (targetPosition.left - colRect.left - amountLeft) + 'px';\n            classList.add(COL_LEFT_CLASS);\n        } else {\n            // maybe center if no collision with either side\n            var rightPosition = (targetRight - elementRect.width - colRect.left - amountLeft) + 'px',\n                leftCentered = ((targetLeft + targetPosition.width / 2) -\n                    (elementRect.width / 2) || 0) - colRect.left,\n                collisionCentered = (leftCentered + elementRect.width) > colRect.width;\n            if (centerHorizontal && !collisionCentered) {\n                calcLeft = leftCentered + 'px';\n            } else {\n                classList.add(COL_RIGHT_CLASS);\n                calcLeft = rightPosition;\n            }\n        }\n\n        if (isCollisionBottom || (positionTop && !isCollisionTop)) {\n            // Put Element on top if collision\n            calcTop = (targetTop - elementRect.height) - colRect.top + 'px';\n            classList.add(COL_BOTTOM_CLASS);\n        } else {\n            calcTop = (targetTop + targetPosition.height) - colRect.top + 'px';\n        }\n\n        elementToPosition.style.cssText = `top:${calcTop};left:${calcLeft};`;\n\n        return elementToPosition;\n    }\n\n    /**\n     * Brings a given element into viewport\n     * @param {HTMLElement} el\n     * @param {int|function}[optionalOffset]\n     */\n    static scrollToElement(el, optionalOffset) {\n        el.scrollIntoView();\n        // optionally use a additional scrollDif\n        if (optionalOffset) {\n            if (typeof optionalOffset === 'function') {\n                optionalOffset = optionalOffset();\n            }\n            if (optionalOffset > 0) {\n                const scrolledY = window.scrollY || window.pageYOffset;\n                if (scrolledY) {\n                    window.scroll(0, scrolledY - optionalOffset);\n                }\n            }\n        }\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/util/Util.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n'use strict';\n\nimport Util from 'util/Util';\n\n// we attach global settings to global once because settings might be shared a lot of times trough the application\n// Maybe find a better way to handle that scenario\nif (!global.FLEXCSS_GLOBAL_SETTINGS) {\n\n    global.FLEXCSS_GLOBAL_SETTINGS = {\n        // defined breakpoint for small devices < n\n        smallBreakpoint: 768,\n        // nodes that should be updated when no scrollbar is expected\n        scrollbarUpdateNodes: global.document.body !== null ? [global.document.body] : [],\n        // additional Delay until darkener is fully hidden\n        darkenerFadeDelay: 100,\n        // class that is added if canvas has been toggled\n        canvasToggledClass: 'toggled-canvas'\n    };\n\n    global.FLEXCSS_CONST_IS_IOS = null;\n\n    global.FLEXCSS_CONST_IS_TOUCH = null;\n\n    global.FLEXCSS_CONST_IS_IE = null;\n\n    global.FLEXCSS_CONST_TAB_EVENT = 'click';\n\n    const init = () => {\n        // Measure scrollbar width\n        global.FLEXCSS_CONST_SCROLLBAR_WIDTH = Util.getScrollBarWidth();\n        // detect right transition end event\n        global.FLEXCSS_CONST_TRANSITION_EVENT = Util.whichTransitionEndEvent();\n    };\n\n    if (global.document.readyState !== 'loading') {\n        init();\n    } else {\n        // it's possible that global.document.body is not available if the document is not\n        // loaded completely\n        document.addEventListener('DOMContentLoaded', () => {\n            init();\n        });\n    }\n}\n\n/**\n * Utility class that setups global settings\n */\nexport default\nclass Settings {\n\n    /**\n     * Setup global settings, overwrite default values\n     * @param {Object} settings\n     */\n    static setup(settings) {\n        Object.assign(global.FLEXCSS_GLOBAL_SETTINGS, settings);\n    }\n\n    /**\n     * Access to global settings\n     * @returns {Object}\n     */\n    static get() {\n        return global.FLEXCSS_GLOBAL_SETTINGS;\n    }\n\n    /**\n     * Detects a IOS Device, caches subsequent calls\n     * @returns {boolean}\n     */\n    static isIosDevice() {\n        if (!global.FLEXCSS_CONST_IS_IOS) {\n            global.FLEXCSS_CONST_IS_IOS = global.navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n        }\n\n        return global.FLEXCSS_CONST_IS_IOS;\n    }\n\n    /**\n     * Detects a touch device, caches subsequent calls\n     * @returns {boolean}\n     */\n    static isTouchDevice() {\n        if (!global.FLEXCSS_CONST_IS_TOUCH) {\n            global.FLEXCSS_CONST_IS_TOUCH = 'ontouchstart' in window || !!(global.navigator.msMaxTouchPoints);\n        }\n        return global.FLEXCSS_CONST_IS_TOUCH;\n    }\n\n    /**\n     * Checks if current browser is Internet Explorer\n     * @returns {boolean|*}\n     */\n    static isIE() {\n        if (!global.FLEXCSS_CONST_IS_IE) {\n            global.FLEXCSS_CONST_IS_IE = \"ActiveXObject\" in window;\n        }\n        return global.FLEXCSS_CONST_IS_IE;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static getTransitionEvent() {\n        return global.FLEXCSS_CONST_TRANSITION_EVENT;\n    }\n\n    /**\n     * @returns {int}\n     */\n    static getScrollbarWidth() {\n        return global.FLEXCSS_CONST_SCROLLBAR_WIDTH;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static getTabEvent() {\n        return global.FLEXCSS_CONST_TAB_EVENT;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/util/Settings.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Provides a Basic Widget\n */\nexport default class DestroyableWidget {\n\n    constructor() {\n        this.listeners = [];\n    }\n\n    /**\n     * Destroys a Widget\n     */\n    destroy() {\n        this.listeners.forEach((listener) => {\n            listener.element.removeEventListener.apply(listener.element, listener.args);\n        });\n        this.listeners = [];\n    }\n\n    /**\n     * Adds an event and registers it later to remove bindings\n     * @param {HTMLElement} element\n     * @param {String} name\n     * @param {Function} listener\n     * @param {boolean} [capture]\n     * @returns {Function}\n     */\n    addEventListener(element, name, listener, capture) {\n        this.listeners.push({\n            element: element,\n            args: [name, listener, capture]\n        });\n        element.addEventListener(name, listener, capture);\n        return listener;\n    }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/DestroyableWidget.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Widget\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\n/**\n * A Widget provides async content on a specific target (e.g. a modal link)\n */\nexport default\nclass Widget {\n\n    /**\n     * Creates a new Widget\n     * @param [element], optional define the content of widget\n     */\n    constructor(element) {\n\n        /**\n         *\n         * @type {Promise}\n         */\n        this.asyncContent = null;\n\n        /**\n         * @type {boolean}\n         */\n        this._isWidget = true;\n\n        if (element) {\n            /**\n             * @type {HTMLElement}\n             */\n            this.element = element instanceof HTMLElement ? element : global.document.getElementById(element);\n            if (this.element) {\n                this.element.hfWidgetInstance = this;\n                this.setAsync((() => {\n                    return new Promise(((s) => {\n                        s(this.element);\n                    }).bind(this));\n                }).bind(this));\n            } else {\n                throw 'Could not found element with ID: ' + element;\n            }\n        }\n        /**\n         * The final resulted content that a widget did create (e.g. a modal container)\n         * @type {HTMLElement}\n         */\n        this.finalContent = null;\n    }\n\n    /**\n     *\n     * @returns {Promise}\n     */\n    getAsync() {\n        return this.asyncContent();\n    }\n\n    /**\n     * @param {Function.<Promise>} async\n     * @returns {Widget}\n     */\n    setAsync(async) {\n        this.asyncContent = async;\n        return this;\n    }\n\n    /**\n     * @returns {HTMLElement}\n     */\n    getFinalContent() {\n        return this.finalContent;\n    }\n\n    /**\n     * @param {HTMLElement} element\n     * @returns {Widget}\n     */\n    setElement(element) {\n        this.element = element;\n        return this;\n    }\n\n    /**\n     * Destroys the generated content of this widget\n     * @returns {boolean}\n     */\n    destroy() {\n\n        if (this.finalContent && this.finalContent.parentNode) {\n            this.finalContent.parentNode.removeChild(this.finalContent);\n            return true;\n        }\n\n        delete this.element;\n        delete this.asyncContent;\n        delete this.finalContent;\n\n        return false;\n    }\n\n    /**\n     * Will find a widget on an Element\n     * @param {HTMLElement} element\n     * @returns {Widget|undefined}\n     */\n    static findWidget(element) {\n        return element ? element.hfWidgetInstance : undefined;\n    }\n\n    /**\n     * Checks if a given object is an instance\n     * @param {Object} self\n     * @returns {boolean}\n     */\n    static isWidget(self) {\n        return self instanceof Widget || typeof self === 'object' && self.hasOwnProperty('_isWidget');\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Widget.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/*global CustomEvent*/\n\n'use strict';\n\n// polyfill for custom events to make thinks work in IE\n// The needed polyfill is so small that I embedded it here\nvoid function () {\n    if (!global.CustomEvent || typeof global.CustomEvent !== 'function') {\n        var CustomEvent;\n        CustomEvent = function (event, params) {\n            var evt;\n            params = params || {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: undefined\n                };\n            evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n        CustomEvent.prototype = global.Event.prototype;\n        global.CustomEvent = CustomEvent;\n    }\n}();\n/**\n * Simpler Event dispatching\n */\nclass EventHandler {\n\n    /**\n     * @param {HTMLElement} target\n     * @param {String} name\n     */\n    constructor(target, name) {\n\n        this.target = target;\n        this.defaultOptions = {\n            bubbles: true,\n            cancelable: true\n        };\n\n        this.name = name;\n    }\n\n    /**\n     * Set more options\n     * @param {Object} options\n     * @returns {EventHandler}\n     */\n    withOptions(options) {\n        Object.assign(this.defaultOptions, (options || {}));\n        return this;\n    }\n\n    /**\n     * Call with the originalEvent\n     * @param {Event} e\n     * @returns {EventHandler}\n     */\n    withOriginal(e) {\n        return this.withDetail({\n            originalEvent: e\n        });\n    }\n\n    /**\n     * Extends the detail part of the event\n     * @param {Object} o\n     * @returns {EventHandler}\n     */\n    withDetail(o) {\n        if (!this.defaultOptions.detail) {\n            this.defaultOptions.detail = {};\n        }\n        Object.assign(this.defaultOptions.detail, o);\n        return this;\n    }\n\n    /**\n     * @returns {Window.CustomEvent}\n     */\n    fire() {\n        var e = new CustomEvent(this.name, this.defaultOptions);\n        if (this.target) {\n            this.target.dispatchEvent(e);\n        }\n        return e;\n    }\n}\n\nexport default\nclass Event {\n    /**\n     * Prepares to dispatch a custom event (without firing)\n     * @param {HTMLElement} target\n     * @param {String} name\n     * @returns {EventHandler}\n     */\n    static dispatch(target, name) {\n        return new EventHandler(target, name);\n    }\n\n    /**\n     * Dispatches a custom event and fires it directly\n     * @param {HTMLElement} target\n     * @param {String} name\n     * @param {Object} [options]\n     * @returns {Window.CustomEvent}\n     */\n    static dispatchAndFire(target, name, options) {\n        return new EventHandler(target, name).withOptions(options).fire();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/util/Event.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Tooltip\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\nimport Util from 'util/Util';\nimport DestroyableWidget from 'DestroyableWidget';\n\n/**\n * @type {string}\n */\nconst CLASS_NAMES_TOOLTIP = 'tooltip-container';\n/**\n * @type {string}\n */\nconst CLASS_NAMES_OPEN = 'open';\n\n/**\n * @type {string}\n */\nconst ATTR_DATA_CLASSNAME = 'data-class';\n\n/**\n * @type {HTMLDocument}\n */\nconst doc = global.document;\n\n/**\n * Simple Tooltip\n */\nexport default\nclass Tooltip extends DestroyableWidget {\n\n    /**\n     * Creates a Tooltip\n     * @param {HTMLElement|String} DelegateContainer\n     * @param {Object} [options]\n     */\n    constructor(DelegateContainer, options) {\n        super();\n        /**\n         * The Container where possible events are captured\n         */\n        this.container = DelegateContainer instanceof HTMLElement ?\n            DelegateContainer : doc.getElementById(DelegateContainer);\n\n        if (!this.container) {\n            throw 'Could not create Tooltip, DelegateContainer not found';\n        }\n\n        /**\n         * The Container where tooltips are stored for this instance\n         * @type {HTMLElement}\n         */\n        this.tooltipContainer = null;\n\n        /**\n         * Default Options\n         */\n        this.options = {\n            containerClass: '',\n            selectorAttribute: 'data-tooltip'\n        };\n\n        Object.assign(this.options, options || {});\n    }\n\n    /**\n     * Creates and shows a tooltip\n     * @param {HTMLElement} target where is this tooltip positioned\n     * @param {String} text text content in tooltip, will be NOT escaped\n     * @param {Boolean} [removeTitle] removes title element if given\n     * @param {Node} [positionRelative]\n     */\n    createTooltip(target, text, removeTitle, positionRelative) {\n        // abort if text is empty\n        if (!text || text && text.trim() === '') {\n            return;\n        }\n        let tooltipContainer = this.tooltipContainer;\n\n        if (!tooltipContainer) {\n            tooltipContainer = doc.createElement('div');\n            this.container.appendChild(tooltipContainer);\n            this.tooltipContainer = tooltipContainer;\n        }\n        this._restoreClassNames(tooltipContainer, target);\n\n        tooltipContainer.style.left = 'auto';\n        tooltipContainer.style.top = 'auto';\n        tooltipContainer.innerHTML = text;\n        tooltipContainer.flexTooltipCurrentTarget = target;\n        if (removeTitle) {\n            target.oldTitle = text;\n            target.removeAttribute('title');\n        }\n\n        Util.setupPositionNearby(positionRelative || target, tooltipContainer, this.container, true, true);\n\n        tooltipContainer.classList.add(CLASS_NAMES_OPEN);\n\n    }\n\n    _restoreClassNames(container, target) {\n        // allow additional classname per tooltip on target element\n        const classNames = [CLASS_NAMES_TOOLTIP, this.options.containerClass],\n            maybeTargetClass = target.getAttribute(ATTR_DATA_CLASSNAME);\n        if (maybeTargetClass) {\n            classNames.push(maybeTargetClass);\n        }\n        container.className = classNames.join(\" \");\n        return this;\n    }\n\n    /**\n     * @returns {HTMLElement|null}\n     */\n    getCurrentTarget() {\n        return this.tooltipContainer ? this.tooltipContainer.flexTooltipCurrentTarget : null;\n    }\n\n    /**\n     * Destroys this Widget\n     * @returns {boolean}\n     */\n    destroy() {\n        super.destroy();\n\n        if (this.tooltipContainer) {\n            this.tooltipContainer.parentNode.removeChild(this.tooltipContainer);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Removes a Tooltip on given target\n     * @param {HTMLElement} [target], if not given will remove current open tooltip on this instance\n     */\n    removeTooltip(target) {\n        if (!target && this.tooltipContainer) {\n            target = this.tooltipContainer.flexTooltipCurrentTarget;\n        }\n        if (this.tooltipContainer) {\n            if (this.tooltipContainer.flexTooltipCurrentTarget !== target) {\n                return;\n            }\n            this.tooltipContainer.classList.remove(CLASS_NAMES_OPEN);\n            delete this.tooltipContainer.flexTooltipCurrentTarget;\n        }\n        if (target && target.oldTitle) {\n            target.setAttribute('title', target.oldTitle);\n        }\n    }\n\n    /**\n     * Initilizes mouse events on container element\n     */\n    registerEvents() {\n        const self = this;\n        this.addEventListener(this.container, 'mouseover', function (e) {\n            if (e.target.hasAttribute(self.options.selectorAttribute)) {\n                self.createTooltip(e.target, e.target.getAttribute('title'), true);\n            }\n        });\n\n        this.addEventListener(this.container, 'mouseout', function (e) {\n            if (e.target.hasAttribute(self.options.selectorAttribute)) {\n                self.removeTooltip(e.target);\n            }\n        });\n        return this;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Tooltip.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Modal\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\n\n/*global KeyboardEvent*/\n\nimport Settings from 'util/Settings';\nimport Event from 'util/Event';\nimport Util from 'util/Util';\nimport Widget from 'Widget';\n\nconst HTML_ELEMENT = global.document.documentElement;\nconst KEY_ESC = 27;\n/* Attribute Names */\nconst ATTR_CREATE_NEW = 'data-new-instance';\nconst ATTR_CLOSE = 'data-close-modal';\nconst ATTR_NAME = 'data-modal';\n\n/* Class names */\nconst CLS_CONTAINER_CURRENT = 'front';\nconst CLS_OPEN = 'open';\nconst CLS_CURRENT = 'current';\nconst CLS_PART_OF_STACK = 'part-of-stack';\nconst CLS_MODAL_OPEN = 'modal-open';\nconst CLS_MODAL_CONTAINER = 'modal-container';\nconst CLS_ANIM_END = 'modal-anim-end';\nconst CLS_LOADER_CONTAINER = 'loader-container';\nconst CLS_LOADER = 'loader';\n\n/* Events */\n\n/**\n * Event triggered when modal is closed\n * @type {string}\n */\nexport const EVENT_MODAL_CLOSED = 'flexcss.modal.closed';\n/**\n * Event triggered before a modal is closed, cancelable\n * @type {string}\n */\nexport const EVENT_MODAL_BEFORE_CLOSED = 'flexcss.modal.beforeClose';\n/**\n * Event triggered when a modal is opened\n * @type {string}\n */\nexport const EVENT_MODAL_OPENED = 'flexcss.modal.opened';\n\n/**\n * Event triggered when modal is initilized, called on target\n * @type {string}\n */\nexport const EVENT_MODAL_INIT = 'flexcss.modal.init';\n\n/**\n * Triggered when the content of an async modal on a target is loaded, called on target\n * @type {string}\n */\nexport const EVENT_MODAL_ASYNC_TARGET_LOADED = 'flexcss.modal.asyncTargetLoaded';\n\n/**\n * A Modal Implementation\n */\nexport default\nclass Modal {\n    constructor(DelegateContainer, options) {\n        var doc = global.document, container = DelegateContainer instanceof HTMLElement ?\n            DelegateContainer : doc.getElementById(DelegateContainer);\n\n        // Instance vars:\n        if (!container) {\n            throw 'Could not found container element by given ID/Element: ' + DelegateContainer;\n        }\n\n        this.currentOpen = null;\n\n        this.loading = false;\n\n        this.container = container;\n\n        /**\n         * Default Options\n         */\n        this.options = {\n            classNames: 'modal',\n            closeOnEscape: true,\n            closeOnBackgroundClick: true,\n            destroyOnFinish: false,\n            fixedContainer: true,\n            containerClassNames: ''\n        };\n\n        Object.assign(this.options, options);\n\n        // Container where events are delegated\n        this.eventContainer = null;\n        this.eventFunction = null;\n\n        this.dataMainPageContainer = global.document.body;\n\n        this.currentScrollTop = 0;\n\n        this.modalContainer = null;\n\n        // Destroy full modal instance when no dialogs are bind to?\n        // Otherwise container is recycled\n        this.destroyOnFinish = this.options.destroyOnFinish;\n    }\n\n    /**\n     * Removes this modal from global stack\n     * Will handle fixing main html element too\n     * @private\n     * @param n\n     */\n    _removeModalFromStack(n) {\n        var t = Modal._modalInstances.indexOf(n), self = this;\n        if (t > -1) {\n            Modal._modalInstances.splice(t, 1);\n            if (Modal._modalInstances.length === 0) {\n                // restore scrollPosition:\n                if (self.dataMainPageContainer) {\n                    setTimeout(function () {\n                        if (self.options.fixedContainer) {\n                            self.dataMainPageContainer.style.position = \"static\";\n                            self.dataMainPageContainer.style.top = \"0px\";\n                            // reset scrollTop\n                            document.documentElement.scrollTop = self.currentScrollTop;\n                            document.body.scrollTop = self.currentScrollTop;\n                        }\n                        Settings.get().scrollbarUpdateNodes.forEach(function (node) {\n                            node.style.paddingRight = '';\n                        });\n                        HTML_ELEMENT.classList.remove(CLS_MODAL_OPEN);\n                    }, 0);\n                }\n            }\n        }\n    }\n\n\n    /**\n     * Modal container that contains all `stacked` modals for this instance\n     * @returns {HTMLElement}\n     */\n    getModalContainer() {\n        return this.modalContainer;\n    }\n\n    /**\n     * Closes the current open modal of this stack\n     * @params [e], optional event\n     * @returns {*}\n     */\n    close(e) {\n        var self = this;\n\n        const options = self.currentOpen ? Util.applyOptionsFromElement(\n            self.currentOpen, Util.copy(self.options)) : self.options;\n\n        // close only on keyboard if instance should\n        if (!options.closeOnEscape && e instanceof KeyboardEvent) {\n            return false;\n        }\n\n        // close only on background if instance should\n        if (!options.closeOnBackgroundClick && e &&\n            e.type === Settings.getTabEvent() && !e.target.hasAttribute(ATTR_CLOSE)) {\n            return false;\n        }\n\n        // if an instance is currently loading, prevent from closing\n        if (self.loading) {\n            return false;\n        }\n\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (self.currentOpen) {\n            // dispatch beforeClose event, if prevented prevent modal from closing\n            var ev = Event.dispatchAndFire(self.currentOpen, EVENT_MODAL_BEFORE_CLOSED);\n            if (ev.defaultPrevented) {\n                return false;\n            }\n\n            this._finishState(self.currentOpen);\n            // if there is an previous modal\n            if (self.currentOpen.prevModal) {\n                // switch to the next modal\n                return self.switchModals(self.currentOpen.prevModal,\n                    self.currentOpen.prevModal.prevModal || null);\n            }\n\n            // finally trigger closed event\n            Event.dispatch(self.currentOpen, EVENT_MODAL_CLOSED).withOriginal(e).fire();\n\n        }\n        self._removeModalFromStack(self.currentOpen);\n\n        // Full stack closed:\n        self.currentOpen = null;\n        if (self.modalContainer) {\n            // setup next open\n            var lastContainer = Modal._modalInstances[Modal._modalInstances.length - 1],\n                classList = self.modalContainer.classList;\n            classList.remove(CLS_CONTAINER_CURRENT);\n            classList.remove(CLS_OPEN);\n            // Remove all current classes from child-nodes\n            for (var i = 0; i < self.modalContainer.childNodes.length; i++) {\n                var node = self.modalContainer.childNodes[i], cl = node.classList;\n                // remove applied styles\n                self._finishState(node);\n                cl.remove(CLS_CURRENT);\n                cl.remove(CLS_PART_OF_STACK);\n            }\n            if (lastContainer) {\n                lastContainer.parentNode.classList.add(CLS_CONTAINER_CURRENT);\n            }\n        }\n\n        if (self.destroyOnFinish) {\n            self.destroy();\n        }\n        return self;\n    }\n\n    /**\n     * Resets a target when newly initilizes\n     * @param target\n     * @private\n     */\n    _finishState(target) {\n        target.classList.remove(CLS_ANIM_END);\n    }\n\n    /**\n     * Handler called when a Modal has finished an animation\n     * @param e\n     * @param self\n     * @private\n     */\n    _finishAnim(e, self) {\n        e.target.classList.add(CLS_ANIM_END);\n        e.target.removeEventListener(e.type, self, true);\n    }\n\n    /**\n     * Brings the given modal to front\n     * @param co\n     * @param last\n     */\n    switchModals(co, last) {\n        co.prevModal = last;\n        Modal._modalInstances.push(co);\n\n        if (last) {\n            this._finishState(last);\n            Util.prefixedAnimateEvent(last, 'AnimationEnd', this._finishAnim);\n            last.classList.add(CLS_PART_OF_STACK);\n        }\n        // set new currentOpen\n        this.currentOpen = co;\n\n        // bring current container to the front\n        var instances = Modal._modalInstances;\n\n        for (var m = 0; m < instances.length; m++) {\n            instances[m].parentNode.classList.remove(CLS_CONTAINER_CURRENT);\n        }\n        this.modalContainer.classList.add(CLS_CONTAINER_CURRENT);\n        // remove animations if animations has been completed, fixes various bugs:\n        // - fixes nested scrolling element issue in iOS Browsers / Mobile-Safari\n        Util.prefixedAnimateEvent(co, 'AnimationEnd', this._finishAnim);\n\n        for (var i = 0; i < this.modalContainer.childNodes.length; i++) {\n            var n = this.modalContainer.childNodes[i], isCurrent = n.classList.contains(CLS_CURRENT);\n            if (n === co) {\n                co.classList.add(CLS_CURRENT);\n                co.classList.remove(CLS_PART_OF_STACK);\n                this._finishState(co);\n            } else {\n                n.classList.remove(CLS_CURRENT);\n                if (isCurrent) {\n                    this._removeModalFromStack(n);\n                    Event.dispatchAndFire(n, EVENT_MODAL_CLOSED);\n                }\n            }\n        }\n    }\n\n    handleScrollbar() {\n        var self = this;\n        if (Modal._modalInstances.length === 0) {\n            // save current scrollTop:\n            let scrollTop, c;\n            if (self.options.fixedContainer) {\n                scrollTop = global.pageYOffset;\n                c = self.dataMainPageContainer;\n                self.currentScrollTop = scrollTop;\n            }\n            // this causes reflow/paint and should be optimized\n            // At lest we write in a batch later\n            Settings.get().scrollbarUpdateNodes.map(function (n) {\n                return {\n                    n: n, padding: parseInt(global.getComputedStyle(n).paddingRight) +\n                    Settings.getScrollbarWidth() + 'px'\n                };\n            }).forEach(function (d) {\n                d.n.style.paddingRight = d.padding;\n            });\n            if (self.options.fixedContainer) {\n                if (c) {\n                    c.style.cssText += `top:${scrollTop * -1 + 'px'};position:fixed`;\n                }\n            }\n            HTML_ELEMENT.classList.add(CLS_MODAL_OPEN);\n        }\n    }\n\n    /**\n     * Creates a Modal and opens it (later)\n     * @param e\n     * @returns {Promise|boolean}\n     */\n    createWidget(e) {\n        var self = this;\n        if (this.loading) {\n            return false;\n        }\n\n        // check if another modal has registered events on this dom path:\n        if (e && e.target) {\n            var foundInstance = Util.parentsUntil(e.target, function (node) {\n                return node && node.flexModalInstance;\n            });\n\n            // if another instance has been found, abort\n            if (foundInstance !== this.container) {\n                return false;\n            }\n        }\n        var targetContent, future, widget, target, hasTarget = true,\n            isHtmlElement = e instanceof HTMLElement, isWidget = Widget.isWidget(e);\n        if (isHtmlElement || isWidget) {\n            if (isHtmlElement) {\n                targetContent = e;\n            } else {\n                widget = e;\n                targetContent = widget.element;\n            }\n        } else {\n            target = e.target;\n            if (!target) {\n                throw 'Could not find target, did you pass an event, a HTMLElement or an Widget?';\n            }\n            hasTarget = target.hasAttribute(ATTR_NAME);\n            targetContent = target.getAttribute(ATTR_NAME);\n            widget = Widget.findWidget(target);\n            if (target.hasAttribute(ATTR_CREATE_NEW) && !e.newInstance) {\n                var newInstance = new Modal(this.container)\n                    .setDestroyOnFinish(true);\n                e.newInstance = true;\n                newInstance.fromEvent(e).then(function () {\n                    newInstance.registerEvents(newInstance.getModalContainer());\n                });\n                return false;\n            }\n            if (hasTarget) {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n            }\n        }\n\n        if (!hasTarget) {\n            return false;\n        }\n\n        let modalContainerClasses = this.modalContainer ? this.modalContainer.classList : [];\n\n        // lazy create modal container\n        if (!this.modalContainer) {\n            this.modalContainer = global.document.createElement('div');\n            this.modalContainer.className = `${CLS_MODAL_CONTAINER} ${this.options.containerClassNames} ${CLS_OPEN}`;\n            const closeModalFunction = function (ce) {\n                if (self.loading) {\n                    return false;\n                }\n                if (Util.isPartOfNode(ce.target, self.currentOpen)) {\n                    if (!ce.target.hasAttribute(ATTR_CLOSE)) {\n                        return false;\n                    }\n                }\n                self.close(ce);\n            };\n\n            this.modalContainer.addEventListener(Settings.getTabEvent(), closeModalFunction, false);\n\n            modalContainerClasses = this.modalContainer.classList;\n            this.container.appendChild(this.modalContainer);\n\n        } else {\n            modalContainerClasses.add(CLS_OPEN);\n        }\n\n        let loader, doc = global.document, toggleLoader = function (show) {\n            if (show) {\n                loader = doc.createElement('div');\n                loader.className = CLS_LOADER_CONTAINER;\n                var loaderLoader = doc.createElement('div');\n                loaderLoader.className = CLS_LOADER;\n                loader.appendChild(loaderLoader);\n                self.modalContainer.appendChild(loader);\n            } else {\n                loader.parentNode.removeChild(loader);\n            }\n        };\n\n        this.handleScrollbar();\n\n        modalContainerClasses.add(CLS_CONTAINER_CURRENT);\n        modalContainerClasses.add('loading');\n        this.loading = true;\n        toggleLoader(true);\n        var async = widget ? widget.getAsync() : null;\n        if (Widget.isWidget(widget) && async) {\n            future = async.then(function (r) {\n                var result;\n                if (r instanceof HTMLElement || r instanceof DocumentFragment) {\n                    result = r;\n                } else {\n                    // Create container Element:\n                    var element = doc.createElement('div');\n                    element.className = self.options.classNames;\n                    element.innerHTML = r;\n                    element.id = Util.guid();\n                    result = element;\n                }\n                widget.finalContent = result;\n                Event.dispatchAndFire(target, EVENT_MODAL_ASYNC_TARGET_LOADED);\n                return result;\n            });\n        } else {\n            var el = targetContent instanceof HTMLElement ||\n            targetContent instanceof DocumentFragment ? targetContent : doc.getElementById(targetContent);\n            if (el) {\n                future = new Promise((resolve) => {\n                    resolve(el);\n                });\n            } else {\n                throw 'Could not found given modal element (content) with ID: ' + targetContent;\n            }\n        }\n\n        Event.dispatchAndFire(target, EVENT_MODAL_INIT);\n\n        return future.then((thisEl) => {\n            thisEl.hfWidgetInstance = self;\n            self.modalContainer.appendChild(thisEl);\n            modalContainerClasses.remove('loading');\n            self.loading = false;\n            toggleLoader(false);\n\n            self.open(thisEl, true, e);\n\n            return thisEl;\n        });\n    }\n\n    /**\n     * Open's an already rendered modal\n     * @param {HTMLElement} modal\n     * @param {Boolean} [internal], set to true to prevent container management\n     * @param {Boolean} [maybeEvent], optional event-object that triggered open\n     */\n    open(modal, internal, maybeEvent) {\n\n\n        if (!internal) {\n            this.modalContainer.classList.add('open');\n            this.handleScrollbar();\n        }\n        this.switchModals(modal, this.currentOpen);\n\n        Event.dispatch(modal, EVENT_MODAL_OPENED).withOriginal(maybeEvent).fire();\n    }\n\n\n    registerEvents(delegate) {\n        var delegateContainer = delegate || this.container, self = this;\n\n        // register modal instance so we can detect multiple registrars\n        delegateContainer.flexModalInstance = self;\n        self.eventFunction = function () {\n            self.createWidget.apply(self, arguments);\n        };\n        delegateContainer.addEventListener(Settings.getTabEvent(), self.eventFunction, false);\n\n        self.eventContainer = delegateContainer;\n        return self;\n    }\n\n\n    /**\n     * Creates a new Dialog Instance either directly from HTML Element or a Widget instance\n     * @param {HTMLElement|Widget} widget instance or html element\n     * @returns {Promise}\n     */\n    fromWidget(widget) {\n        return this.createWidget(widget);\n    }\n\n    /**\n     * Creates a Widget from event\n     * @param e\n     * @returns {Promise}\n     */\n    fromEvent(e) {\n        return this.createWidget(e);\n    }\n\n    setDestroyOnFinish(v) {\n        this.destroyOnFinish = v;\n        return this;\n    }\n\n    /**\n     * Destroy this widget instance, cleans empty DOM nodes\n     * Will use fast MutationObserver if available, otherwise falls back to DOMNodeRemoved event\n     */\n    destroy() {\n        let self = this, modalContainer = this.modalContainer;\n        const isEmptyContainer = modalContainer.childNodes.length === 0;\n        // Remove event listener on destroy, do not remove DOM node\n        if (self.eventContainer) {\n            self.eventContainer.removeEventListener(Settings.getTabEvent(), self.eventFunction, true);\n        }\n\n        if (isEmptyContainer) {\n            if (modalContainer.parentNode) {\n                modalContainer.parentNode.removeChild(modalContainer);\n            }\n        }\n        if (global.MutationObserver) {\n            var observer = new MutationObserver(function (mutations) {\n                mutations.forEach(function () {\n                    if (isEmptyContainer) {\n                        modalContainer.parentNode.removeChild(modalContainer);\n                        observer.disconnect();\n                    }\n                });\n            });\n            observer.observe(modalContainer, {childList: true});\n        } else {\n            modalContainer.addEventListener('DOMNodeRemoved', function (e) {\n                if (e.target !== modalContainer && (modalContainer.childNodes.length - 1) === 0) {\n                    modalContainer.parentNode.removeChild(modalContainer);\n                }\n            });\n        }\n    }\n}\n\n\n// Static variable that keeps track of all open modals\nModal._modalInstances = [];\n\n// Global keydown listener for modal\nglobal.addEventListener('keydown', function (e) {\n    if (e.keyCode === KEY_ESC) {\n        var lastModal = Modal._modalInstances[Modal._modalInstances.length - 1];\n        if (lastModal) {\n            Widget.findWidget(lastModal).close(e);\n        }\n    }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Modal.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Form\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\n\n/*global HTMLFormElement, fetch, FormData, clearTimeout, NodeList*/\n\nimport Tooltip from 'Tooltip';\nexport * from 'isomorphic-fetch';\nimport Event from 'util/Event';\nimport Util from 'util/Util';\nimport Settings from 'util/Settings';\nimport DestroyableWidget from 'DestroyableWidget';\n\nconst LOADING_CLASS = 'loading';\nconst DATA_ELEMENT_INVALID = 'data-flexcss-invalid';\nconst REMOTE = 'data-remote';\nconst REMOTE_ACTION = 'data-remote-action';\nconst ATTR_DISABLE_INLINE = 'data-disable-inline-validation';\nconst ATTR_DISABLE_REALTIME = 'data-disable-realtime-validation';\nconst ATTR_VALIDATOR = 'data-validate';\nconst ATTR_DATA_CUSTOM_MESSAGE = 'data-validation-message';\nconst ATTR_DATA_CUSTOM_LABEL = 'data-custom-label';\nconst ATTR_VALIDATE_VISIBILITY = 'data-validate-visibility';\nconst ATTR_ERROR_TARGET_ID = 'data-error-target';\nconst ATTR_DEPENDS = 'data-depends-selector';\nconst CONST_USE_JSON = 'json';\nconst CONST_REALTIME_EVENT = 'input';\nconst FOCUS_TOOLTIP_DELAY = 20;\nconst CLICK_TOOLTIP_DELAY = 150;\n/**\n * Triggered when form is fully initialized and handlers are binded\n * @type {string}\n */\nexport const EVENT_FORM_READY = 'flexcss.form.ready';\n/**\n * Fires when a form is submitted, cancelable\n * @type {string}\n */\nexport const EVENT_FORM_SUBMIT = 'flexcss.form.submit';\n/**\n * Fired directly after the form has been submitted via ajax\n * @type {string}\n */\nexport const EVENT_FORM_AFTER_AJAX_SUBMIT = 'flexcss.form.afterAjaxSubmit';\n/**\n * Fired when ajax events did complete\n * @type {string}\n */\nexport const EVENT_FORM_AJAX_COMPLETED = 'flexcss.form.ajaxCompleted';\n\n/**\n * A HTML5 Form Validation replacement\n */\n\nexport default\nclass Form extends DestroyableWidget {\n    /**\n     * @param {HTMLElement} form\n     * @param [options] optional options\n     */\n    constructor(form, options) {\n        super();\n\n        if (!(form instanceof HTMLFormElement)) {\n            throw 'argument {0} form needs to be an form element';\n        }\n\n        /**\n         * The Form\n         * @type {HTMLElement}\n         */\n        this.form = form;\n\n        /**\n         * @type {Tooltip}\n         */\n        this.tooltips = null;\n\n        /**\n         * @type {Promise}\n         */\n        this.currentValidationFuture = new Promise(() => {\n        });\n\n        /**\n         * Default options\n         * @type {Object}\n         */\n        this.options = {\n            // if true creates tooltips above element, uses FlexCss Tooltips\n            createTooltips: true,\n            // if true appends error message after input element\n            appendError: false,\n            // type of ajax submit\n            ajaxSubmitType: 'POST',\n            // json content type if ajax method is set to json\n            ajaxJsonContentType: 'application/json; charset=utf-8',\n            // allow inline validation\n            inlineValidation: true,\n            // validate in realtime (on `input` event)\n            realtime: true,\n            // timeout when realtime event should be captured\n            realtimeTimeout: 250,\n            // formatting method for an error\n            formatErrorTooltip: (error) => {\n                return '<i class=\"icon-attention\"></i> ' + error;\n            },\n            // the class that will be put on the element to mark it failed validation\n            inputErrorClass: 'invalid',\n            // the container class for error messages below an element\n            containerErrorClass: 'form-error',\n            // additional options for fetch\n            fetchOptions: {\n                credentials: 'include'\n            },\n            // the container for tooltips\n            tooltipContainer: form,\n            // if you have a fixed header, either set a number or function here\n            scrollToElementDiff: 0\n        };\n\n        // overwrite default options\n        Object.assign(this.options, options);\n\n        // apply settings from attributes\n        Util.applyOptionsFromElement(form, this.options);\n\n        // set form class as widget\n        // Forms are very different to classical widgets,\n        // we will not use our base widget class for this but just self\n        form.hfWidgetInstance = this;\n\n        /**\n         * A List of Validators\n         * @type {Object}\n         * @private\n         */\n        this._validators = Form.globalValidators;\n\n        /**\n         * @type {Function}\n         * @private\n         */\n        this._remoteValidationFunction = null;\n\n        this.initFormValidation();\n    }\n\n    destroy() {\n        super.destroy();\n        if (this.tooltips) {\n            this.tooltips.destroy();\n        }\n    }\n\n    /**\n     * Submits this form, either via ajax or just classical (default)\n     * @param {HTMLFormElement} thisForm\n     * @param {Event} e\n     * @private\n     * @returns {Promise|boolean} returns false if submit is cancled\n     */\n    _submitFunction(thisForm, e) {\n        var shouldUseAjax = thisForm.getAttribute(REMOTE), ajaxPostUrl =\n                thisForm.getAttribute(REMOTE_ACTION) ||\n                thisForm.getAttribute('action') || window.location.href,\n            useJson = CONST_USE_JSON === shouldUseAjax, self = this;\n\n        var ev = Event.dispatch(thisForm, EVENT_FORM_SUBMIT).withOriginal(e).fire();\n\n        // abort execution is event was prevented\n        if (ev.defaultPrevented) {\n            self._formStopLoading();\n            return false;\n        }\n\n        if (shouldUseAjax === null) {\n            // submit\n            return thisForm.submit();\n        }\n        // prevent form from submit normally\n        e.preventDefault();\n\n        // add information that this is an XMLHttpRequest request (used by some frameworks)\n        let defaultHeaders = {\n            'X-Requested-With': 'XMLHttpRequest'\n        };\n\n        // setup default headers\n        if (useJson) {\n            Object.assign(defaultHeaders, {\n                'Content-Type': this.options.ajaxJsonContentType\n            });\n        }\n        let defaultOptions = Object.assign(this.options.fetchOptions, {\n            headers: defaultHeaders,\n            method: this.options.ajaxSubmitType\n        });\n\n        // support either JSON request payload or normal payload submission\n        var serverCall = useJson ? fetch(ajaxPostUrl, Object.assign(defaultOptions, {\n            body: JSON.stringify(this.serialize())\n        })) : fetch(ajaxPostUrl, Object.assign(defaultOptions, {\n            body: new FormData(thisForm)\n        }));\n\n        Event.dispatch(thisForm, EVENT_FORM_AFTER_AJAX_SUBMIT).withOriginal(e).fire();\n\n        return serverCall.then((r) => {\n            (self._remoteValidationFunction || Form.globalRemoteValidationFunction).apply(self, [r]);\n\n            Event.dispatch(thisForm, EVENT_FORM_AJAX_COMPLETED).withOriginal(e).withDetail({response: r}).fire();\n            // always remove error class\n            self._formStopLoading();\n        });\n    }\n\n    /**\n     * Serializes a form to a json object\n     * @returns {Object}\n     */\n    serialize() {\n        var selectors = [\n            'input[name]:not([type=\"radio\"]):enabled',\n            'input[type=\"radio\"][name]:checked',\n            'select[name]:enabled',\n            'textarea[name]:enabled'\n        ], inputs = this.form.querySelectorAll(selectors.join(',')), result = {};\n\n        Array.prototype.forEach.call(inputs, function (input) {\n            var exists = result[input.name], value = input.value;\n            if (exists instanceof Array) {\n                exists.push(value);\n            } else if (exists) {\n                result[input.name] = [result[input.name], value];\n            } else {\n                result[input.name] = value;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Handles the chain of validation on given fields\n     *\n     * @param {HTMLElement|Array|NodeList} field\n     * @param [focus] optional focus first error\n     * @returns {Promise}\n     */\n    handleValidation(field, focus) {\n        var fields = (field instanceof Array || field instanceof NodeList) ? field : [field];\n        return this._handleValidation(fields, focus, true).then(((r) => {\n            if (!r.foundAnyError) {\n                // remove tooltips\n                if (this.tooltips) {\n                    this.tooltips.removeTooltip();\n                }\n            }\n            return r;\n        }).bind(this));\n    }\n\n    /**\n     * Handles errors on given node list\n     * @param {NodeList} toValidateFields\n     * @param {boolean} focus\n     * @param {boolean} scoped if true, will only validate the fields `invalidFields`\n     * @returns {Promise}\n     * @private\n     */\n    _handleValidation(toValidateFields, focus, scoped) {\n        var self = this;\n        var arr = Form._createArrayFromInvalidFieldList(toValidateFields), isLocalInvalid = arr.length > 0;\n        // focus must appear in the same frame for iOS devices\n        if (isLocalInvalid && focus) {\n            self._focusElement(arr[0]);\n        }\n        var validation = scoped ? this._customValidationsForElements(toValidateFields) :\n            self.validateCustomFields();\n        return validation.then((r) => {\n            if (isLocalInvalid) {\n                // combine browser and custom validators\n                r.foundAnyError = true;\n            }\n            // get a unique field list of all fields that need to be checked and rendered\n            // it's possible that we have duplicates in non scoped mode\n            let thisToValidateFields = scoped ? toValidateFields :\n                Array.from(arr).concat(r.checkedFields);\n            r.checkedFields = thisToValidateFields;\n            let foundInvalidFields = self.prepareErrors(thisToValidateFields, false),\n                firstInvalidField = foundInvalidFields[0];\n            if (firstInvalidField) {\n                if (focus) {\n                    self._focusElement(firstInvalidField);\n                    // if element could not be focused:\n                    if (document.activeElement !== firstInvalidField) {\n                        self._handleTooltipHideClickAfterChange();\n                    }\n                } else {\n                    self._handleTooltipHideClickAfterChange();\n                }\n                self.showAndOrCreateTooltip(firstInvalidField);\n            }\n            return r;\n        });\n    }\n\n    /**\n     * @param {HTMLElement} field\n     * @param {ValidityState} validity\n     * @returns {*}\n     * @private\n     */\n\n    _setupErrorMessages(field, validity) {\n        return Form.globalErrorMessageHandler ?\n            Form.globalErrorMessageHandler.apply(this, [field, validity]) : false;\n    }\n\n    /**\n     * Handles class labels for elements\n     * @param {Object} fields\n     * @private\n     */\n    _handleLabels(fields) {\n        Object.keys(fields).forEach(function (id) {\n            let labels = this.getForm().querySelectorAll('[for=\"' + id + '\"]'), invalid = fields[id];\n            if (labels.length) {\n                for (let labelsIndex = 0; labelsIndex < labels.length; labelsIndex++) {\n                    let labelEl = labels[labelsIndex];\n                    // we can't use toggle attribute, not supported in IE\n                    if (invalid) {\n                        this._markElementInvalid(labelEl);\n                    } else {\n                        this._markElementValid(labelEl);\n                    }\n                }\n            }\n        }.bind(this));\n    }\n\n    /**\n     * @param el\n     * @private\n     */\n    _markElementInvalid(el) {\n        el.setAttribute(DATA_ELEMENT_INVALID, \"true\");\n        el.classList.add(this.options.inputErrorClass);\n    }\n\n    /**\n     * @param el\n     * @private\n     */\n    _markElementValid(el) {\n        el.removeAttribute(DATA_ELEMENT_INVALID);\n        el.classList.remove(this.options.inputErrorClass);\n    }\n\n    /**\n     * A List of invalid elements (:invalid)\n     * @returns {Array}\n     * @private\n     */\n    _getInvalidElements() {\n        return Array.prototype.filter.call(this.getForm().querySelectorAll(\":invalid\"), function (r) {\n            return !(r instanceof HTMLFieldSetElement);\n        });\n    }\n\n    /**\n     * @param {HTMLElement} thisParent\n     * @private\n     */\n    _removeElementErrors(thisParent) {\n        let errors = thisParent.querySelectorAll('.' + this.options.containerErrorClass), inputsWithErrorClasses =\n            thisParent.querySelectorAll(`[${DATA_ELEMENT_INVALID}]`);\n        for (let elementErrorIndex = 0; elementErrorIndex < errors.length; elementErrorIndex++) {\n            errors[elementErrorIndex].parentNode.removeChild(errors[elementErrorIndex]);\n        }\n        for (let inputErrorIndex = 0; inputErrorIndex < inputsWithErrorClasses.length; inputErrorIndex++) {\n            let el = inputsWithErrorClasses[inputErrorIndex];\n            this._markElementValid(el);\n        }\n    }\n\n\n    /**\n     * Registers a custom validator\n     * @param {String} name\n     * @param {Function} validator a validation function should always return either a Future(true) or Future(false)\n     * even when the field has been invalidated with `setCustomValidity`, because of different browser `bugs`\n     * we can't rely on that\n     * @returns {Form}\n     */\n    registerValidator(name, validator) {\n        this._validators[name] = validator;\n        return this;\n    }\n\n    /**\n     * Runs async validation\n     * @param {String} validationRef\n     * @param {HTMLElement} field\n     * @returns {Promise}\n     * @private\n     */\n    _runValidation(validationRef, field) {\n        if (!this._validators[validationRef]) {\n            throw 'Could not found validator: ' + validationRef;\n        }\n        var cl = field.classList, future = this._validators[validationRef].apply(this, [field, this.form]);\n        cl.add(LOADING_CLASS);\n        future.then(() => {\n            cl.remove(LOADING_CLASS);\n        });\n        return future;\n    }\n\n\n    /**\n     * Run custom validations for elements, validations are done async do support XHR Requests or other stuff\n     *\n     * @param {Array|NodeList} fields\n     * @returns {Promise} contains either true if validations passed or false if something went wrong\n     * @private\n     */\n    _customValidationsForElements(fields) {\n        var futures = [], fieldsLength = fields.length, checkedFields = [];\n        for (var iVal = 0; iVal < fieldsLength; iVal++) {\n            var field = fields[iVal], validationRef = field.getAttribute(ATTR_VALIDATOR), validity = field.validity;\n            if (this._validators[validationRef]) {\n                // use local validation first and then continue with custom validations\n                if (Form._shouldNotValidateField(field) || (validity && !validity.customError && !validity.valid)) {\n                    continue;\n                }\n                checkedFields.push(field);\n                futures.push(this._runValidation(validationRef, field));\n            } else {\n                if (validationRef) {\n                    console.warn('data-validate was set but no validator was found');\n                }\n            }\n        }\n        return Promise.all(futures).then(function (allFutures) {\n            let l = allFutures.length;\n            let result = {\n                checkedFields: checkedFields,\n                foundAnyError: false\n            };\n            for (var fI = 0; fI < l; fI++) {\n                if (!allFutures[fI]) {\n                    result.foundAnyError = true;\n                    break;\n                }\n            }\n            return result;\n        });\n    }\n\n    /**\n     * Remove all errors for this form\n     * @returns {Form}\n     */\n    removeErrors() {\n        this._removeElementErrors(this.form);\n        if (this.tooltips) {\n            this.tooltips.removeTooltip();\n        }\n        return this;\n    }\n\n    /**\n     * Will handle errors for given fields\n     * @param {Array|NodeList} fields\n     * @param {Boolean} removeAllErrors\n     */\n    prepareErrors(fields, removeAllErrors) {\n        if (removeAllErrors) {\n            this.removeErrors();\n        }\n        let labelGroups = {}, invalidFields = [];\n\n        function handleAdditionalLabels(isInvalid, thisLabelGroup, field) {\n            let additionalLabels = field.getAttribute(ATTR_DATA_CUSTOM_LABEL) ||\n                field.id, group = thisLabelGroup[additionalLabels];\n            if (additionalLabels) {\n                // check additionally if field is currently marked as invalid\n                // so the label is not marked as error if no field is marked as one\n                group = group ? group : isInvalid;\n                thisLabelGroup[additionalLabels] = group;\n            }\n        }\n\n        // We save all validations in an extra property because we need to reset the validity due some\n        // implementation errors in other browsers then chrome\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i], errorTarget = Form._findErrorTarget(field), parent = errorTarget.parentNode,\n                validity = field.validity, isInvalid = validity && !validity.valid;\n            if (Form._shouldNotValidateField(field)) {\n                continue;\n            }\n            field.flexFormsSavedValidity = JSON.parse(JSON.stringify(validity));\n            handleAdditionalLabels(isInvalid, labelGroups, field);\n            if (isInvalid) {\n                if (!removeAllErrors) {\n                    // Remove current errors:\n                    this._removeElementErrors(parent);\n                }\n                // setup custom error messages:\n                this._setupErrorMessages(field, validity);\n                let msg = field.validationMessage;\n\n                // mark fields as invalid\n                this._markElementInvalid(errorTarget);\n                this._markElementInvalid(field);\n\n                if (this.options.appendError) {\n                    parent.insertAdjacentHTML(\"beforeend\",\n                        `<div class=\"${this.options.containerErrorClass}\">${msg}</div>`);\n                }\n                invalidFields.push(field);\n                field.flexFormsSavedValidationMessage = msg;\n            } else {\n                // restore invalid fields\n                this._markElementValid(errorTarget);\n                this._markElementValid(field);\n\n                // cleanup\n                delete field.flexFormsSavedValidationMessage;\n\n                // remove error markup\n                this._removeElementErrors(parent);\n            }\n            // We have to reset the custom validity here to allow native validations work again\n            field.setCustomValidity('');\n        }\n        // if validates a single field we need to check the linked fields to a label:\n        if (fields.length === 1) {\n            let field = fields[0];\n            let id = field.getAttribute(ATTR_DATA_CUSTOM_LABEL) || field.id;\n            if (id) {\n                let linkedFields = Array.from(\n                    this.getForm().querySelectorAll(`[${ATTR_DATA_CUSTOM_LABEL}=\"${id}\"], #${id}`));\n                linkedFields.forEach(function (thisField) {\n                    let validity = thisField.validity, isInvalid = validity && !validity.valid &&\n                        this._isElementInvalidElement(thisField);\n                    handleAdditionalLabels(isInvalid, labelGroups, thisField);\n                }.bind(this));\n            }\n        }\n        this._handleLabels(labelGroups);\n        return invalidFields;\n    }\n\n    /**\n     * Validates all custom fields\n     * @returns {Promise}\n     */\n    validateCustomFields() {\n        return this._customValidationsForElements(\n            this.form.querySelectorAll(\"[data-validate]\"));\n    }\n\n    /**\n     * Tests if a field should be validated\n     * @param {HTMLElement} field\n     * @returns {boolean}\n     * @private\n     */\n    static _shouldNotValidateField(field) {\n        var target = Form._findErrorTarget(field);\n        return target instanceof HTMLFieldSetElement ||\n            (target.hasAttribute(ATTR_VALIDATE_VISIBILITY) && !Util.isVisible(target));\n    }\n\n    /**\n     * Creates an array from a node list with invalid items\n     * This Method expicitly checks if field should not be validated so it can be used to foucs a field\n     * @param list\n     * @returns {Array}\n     * @private\n     */\n    static _createArrayFromInvalidFieldList(list) {\n        var arr = [];\n        for (var i = 0; i < list.length; ++i) {\n            var n = list[i];\n            if (n.validity && !n.validity.valid) {\n                if (!Form._shouldNotValidateField(n)) {\n                    arr.push(n);\n                }\n            }\n        }\n        return arr;\n    }\n\n\n    /**\n     * This form\n     * @returns {HTMLElement}\n     */\n    getForm() {\n        return this.form;\n    }\n\n    /**\n     * Registers a function that handles remote validation\n     * @param {Function} func\n     * @returns {Form}\n     */\n    registerRemoteValidation(func) {\n        this._remoteValidationFunction = func;\n        return this;\n    }\n\n\n    /**\n     * Formats the error content for the tooltip\n     * @param {String} error\n     * @returns {String}\n     * @private\n     */\n    _formatErrorTooltip(error) {\n        return this.options.formatErrorTooltip.apply(this, [error]);\n    }\n\n    /**\n     * Tries to find a custom error target on given target\n     * @param target\n     * @returns {HTMLElement}\n     * @private\n     */\n    static _findErrorTarget(target) {\n        var el = target.getAttribute(ATTR_ERROR_TARGET_ID) || target,\n            foundTarget = el instanceof HTMLElement ? el : global.document.getElementById(el);\n        if (!foundTarget) {\n            throw 'Given error target did not exsits:' + target;\n        }\n        return foundTarget;\n    }\n\n    /**\n     * Creates a tooltip at given element, will only create a new instance if not created\n     * @param {HTMLElement} target\n     * @param {Boolean} [remove]\n     */\n    showAndOrCreateTooltip(target, remove) {\n        var self = this;\n        if (!this.tooltips && this.options.createTooltips) {\n            this.tooltips = new Tooltip(this.options.tooltipContainer, {\n                containerClass: 'error-tooltip'\n            });\n        }\n        if (!this.options.createTooltips) {\n            return false;\n        }\n\n        if (!target.flexFormsSavedValidity) {\n            return false;\n        }\n        var errorTarget = Form._findErrorTarget(target);\n        if (!target.flexFormsSavedValidity.valid && self._isElementInvalidElement(errorTarget)) {\n            self.tooltips.createTooltip(errorTarget,\n                self._formatErrorTooltip(target.flexFormsSavedValidationMessage), false);\n            return true;\n        } else {\n            if (remove) {\n                self.tooltips.removeTooltip();\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Checks if element is marked as invalid\n     * @param {HTMLElement} el\n     * @returns {boolean}\n     * @private\n     */\n    _isElementInvalidElement(el) {\n        return el.hasAttribute(DATA_ELEMENT_INVALID);\n    }\n\n    /**\n     * Handles invalid event of a form\n     * @param {Event} e\n     * @returns {Promise|boolean}\n     * @private\n     */\n    _checkIsInvalid(e) {\n        e.preventDefault();\n        var invalidFields = this.getForm().querySelectorAll(\":invalid\");\n        return this._handleValidation(invalidFields, true, false);\n    }\n\n    /**\n     * Will query dependent fields (by selector) that should be validated with given field\n     * @param field\n     * @returns {NodeList|[]}\n     * @private\n     */\n    _getDependentFields(field) {\n        let fieldSelector = field.getAttribute(ATTR_DEPENDS), base = [field];\n        if (fieldSelector) {\n            base.push.apply(base, Array.prototype.slice.apply(\n                this.getForm().querySelectorAll(fieldSelector)));\n        }\n        return base;\n    }\n\n    /**\n     * @private\n     * @param {HTMLElement} [target]\n     */\n    _handleTooltipInline(target) {\n        if (this.tooltips) {\n            this.tooltips.removeTooltip(target);\n        }\n    }\n\n    /**\n     * Initializes validation for a given form, registers event handlers\n     */\n    initFormValidation() {\n        // Suppress the default bubbles\n        var form = this.getForm(),\n            self = this,\n            invalidEvent = 'invalid';\n\n        /**\n         * Validates if is valid realtime element\n         * @param {HTMLElement} target\n         * @returns {boolean}\n         * @private\n         */\n        function _checkIsValidRealtimeElement(target) {\n            return !target.hasAttribute(ATTR_DISABLE_REALTIME) && !target.hasAttribute(ATTR_DISABLE_INLINE);\n        }\n\n        form.addEventListener(invalidEvent, function (e) {\n            e.preventDefault();\n        }, true);\n\n        Util.addEventOnce(invalidEvent, form, function handleInvalid(e) {\n            self._formLoading();\n            var result = self._checkIsInvalid(e);\n            if (result) {\n                self.currentValidationFuture = new Promise((resolve) => {\n                    result.then(function (r) {\n                        setTimeout(function () {\n                            Util.addEventOnce(invalidEvent, form, handleInvalid, true);\n                        }, 0);\n                        resolve(r);\n                        self._formStopLoading();\n                        if (!r.foundAnyError) {\n                            self._formLoading();\n                            self._handleSubmit(e);\n                        }\n                    });\n                });\n            }\n        }, true);\n\n        this.addEventListener(form, 'reset', () => {\n            this.removeErrors();\n        });\n\n        // Timeout for keys:\n        var TIMEOUT_KEYDOWN, KEYDOWN_RUNNING = false;\n\n        // resets keydown events\n        function clearKeyDownTimeout() {\n            KEYDOWN_RUNNING = false;\n            clearTimeout(TIMEOUT_KEYDOWN);\n        }\n\n        // setup custom realtime event if given\n        if (self.options.realtime) {\n            this.addEventListener(form, CONST_REALTIME_EVENT, function (e) {\n                if (self._formIsLoading()) {\n                    return;\n                }\n                var target = e.target;\n                clearTimeout(TIMEOUT_KEYDOWN);\n                if (KEYDOWN_RUNNING) {\n                    return;\n                }\n                TIMEOUT_KEYDOWN = setTimeout(() => {\n                    let isStillTarget = document.activeElement === e.target;\n                    if (!_checkIsValidRealtimeElement(target)) {\n                        return;\n                    }\n                    if (isStillTarget) {\n                        self._handleTooltipInline();\n                    }\n                    KEYDOWN_RUNNING = true;\n                    let dependentFields = self._getDependentFields(target);\n                    self._customValidationsForElements(dependentFields).then(function () {\n                        self.prepareErrors(dependentFields, false);\n                        if (isStillTarget) {\n                            self.showAndOrCreateTooltip(e.target);\n                        }\n                        // future must be resolved before another event can be started\n                        KEYDOWN_RUNNING = false;\n                    });\n                }, self.options.realtimeTimeout);\n            }, true);\n        }\n\n        /**\n         * Validates if target is a valid input field to check blur and focus events\n         *\n         * @param {HTMLElement} target\n         * @returns {boolean}\n         * @private\n         */\n        function _checkIsValidBlurFocusElement(target) {\n            let attr = target.getAttribute(\"type\");\n            return (attr !== \"radio\" && attr !== \"checkbox\" && attr !== \"submit\");\n        }\n\n        /**\n         * Validates if is valid inline-check element\n         * @param {HTMLElement} target\n         * @returns {boolean}\n         * @private\n         */\n        function _checkIsValidInlineCheckElement(target) {\n            return !target.hasAttribute(ATTR_DISABLE_INLINE);\n        }\n\n        this.addEventListener(form, 'blur', function (e) {\n            // do not hide tooltip after change event\n            if (!e.target.flexcssKeepTooltips) {\n                self._handleTooltipInline(e.target);\n            }\n            delete e.target.flexcssKeepTooltips;\n        }, true);\n\n        // handle focus on input elements\n        // will show an error if field is invalid\n        this.addEventListener(form, \"focus\", function (e) {\n            if (self._formIsLoading()) {\n                return;\n            }\n            // do not track errors for checkbox and radios on focus:\n            if (!_checkIsValidBlurFocusElement(e.target)) {\n                return;\n            }\n            // we need to delay this a little, because Firefox and Safari do not show a tooltip after it\n            // just have been hidden (on blur). Maybe fix this with a queue later\n            setTimeout(function () {\n                self.showAndOrCreateTooltip(e.target);\n            }, FOCUS_TOOLTIP_DELAY);\n        }, true);\n\n        if (self.options.inlineValidation) {\n            // Handle change for checkbox, radios and selects\n            this.addEventListener(form, \"change\", function (e) {\n                const target = e.target;\n                if (self._formIsLoading() || !_checkIsValidInlineCheckElement(target)) {\n                    return;\n                }\n                clearKeyDownTimeout();\n                const name = target.getAttribute('name');\n                let inputs = name ? form.querySelectorAll('[name=\"' + name + '\"]') : [target];\n                // we only support dependent fields for a single widgets right now\n                if (inputs.length === 1) {\n                    inputs = self._getDependentFields(target);\n                }\n                self._customValidationsForElements(inputs).then(function () {\n                    self.prepareErrors(inputs, false);\n                    target.flexcssKeepTooltips = self.showAndOrCreateTooltip(target, true);\n                    if (target.flexcssKeepTooltips) {\n                        self._handleTooltipHideClickAfterChange();\n                    }\n                });\n            });\n        }\n\n        // prevent default if form is invalid\n        this.addEventListener(form, \"submit\", function listener(e) {\n            self._submitListener(e, listener);\n        });\n\n        Event.dispatchAndFire(form, EVENT_FORM_READY);\n    }\n\n    /* Loading states, unfortunately we can't check if a promise is pending :/*/\n    /* TODO: Maybe wrap promise to extend this functionality */\n\n    _formLoading() {\n        this.getForm().classList.add(LOADING_CLASS);\n    }\n\n    _formStopLoading() {\n        this.getForm().classList.remove(LOADING_CLASS);\n    }\n\n    _formIsLoading() {\n        return this.getForm().classList.contains(LOADING_CLASS);\n    }\n\n    // this defines the logic after a change event when a tooltip is shown\n    // because we call this method inside the change event, the click would be immeditally executed with the change\n    // event when not using setTimeout(). There might be another solution for this...\n    _handleTooltipHideClickAfterChange() {\n        const self = this;\n        if (this.options.createTooltips) {\n            setTimeout(function () {\n                Util.addEventOnce(Settings.getTabEvent(), global.document.body, function (t) {\n                    if (!self._isElementInvalidElement(t.target)) {\n                        self._handleTooltipInline();\n                    }\n                });\n            }, CLICK_TOOLTIP_DELAY);\n        }\n    }\n\n    _focusElement(el) {\n        el.focus();\n        Util.scrollToElement(el, this.options.scrollToElementDiff);\n    }\n\n    /**\n     * Listener that is executed on form submit\n     * @param e\n     * @param submitListener\n     * @returns {boolean}\n     * @private\n     */\n    _submitListener(e, submitListener) {\n\n        const form = this.getForm(),\n            self = this,\n            submitEvent = 'submit';\n\n        if (this._formIsLoading()) {\n            e.preventDefault();\n            return false;\n        }\n        this._formLoading();\n        form.removeEventListener(submitEvent, submitListener);\n        this.removeErrors();\n        e.preventDefault();\n        // reset:\n        if (form.checkValidity()) {\n            form.addEventListener(submitEvent, submitListener);\n            // It's possible that the form is valid but the custom validations need to be checked again:\n            self.currentValidationFuture = new Promise((resolve) => {\n                var validation = self.validateCustomFields();\n                validation.then(function (r) {\n                    // because custom validators may mark multiple fields as invalid, we get all of them in the form\n                    var fields = self._getInvalidElements(),\n                        errors = self.prepareErrors(fields, false), firstError = errors[0];\n                    if (firstError) {\n                        self._focusElement(firstError);\n                        self.showAndOrCreateTooltip(firstError, true);\n                    }\n                    resolve(r);\n                });\n            });\n            self.currentValidationFuture.then(function (r) {\n                if (!r.foundAnyError) {\n                    // Handle submitting the form to server:\n                    self._handleSubmit(e);\n                } else {\n                    self._formStopLoading();\n                }\n            });\n        } else {\n            self._formStopLoading();\n            form.addEventListener(submitEvent, submitListener);\n        }\n    }\n\n\n    /**\n     * Handles submitting, optionally allows to stop submitting\n     * @param e\n     * @private\n     */\n    _handleSubmit(e) {\n        this._submitFunction(this.form, e);\n    }\n\n\n    /**\n     * Registers a global event Handler\n     * @param errorFunc\n     */\n    static registerErrorMessageHandler(errorFunc) {\n        Form.globalErrorMessageHandler = errorFunc;\n    }\n\n    /**\n     * Initialize forms for a specific selector\n     * @param {String} selector\n     * @param {Object} [options]\n     * @return {array.<Form>}\n     */\n    static init(selector, options) {\n        var forms = selector instanceof HTMLElement ? selector.querySelectorAll('form') :\n            document.querySelectorAll(selector), instances = [];\n        for (var i = 0; i < forms.length; i++) {\n            instances.push(new Form(forms[i], options));\n        }\n        return instances;\n    }\n\n\n    /**\n     * Registers a global validator that is usable on all form instances\n     * @param {String} name\n     * @param {Function} validator\n     * @returns {Function}\n     */\n    static registerValidator(name, validator) {\n        Form.globalValidators[name] = validator;\n        return Form;\n    }\n\n    /**\n     * Registers a global function that is called when a form should validate the response of a server\n     * @param {Function} func\n     * @returns {Form}\n     */\n    static registerGlobalRemoteValidationFunction(func) {\n        Form.globalRemoteValidationFunction = func;\n        return Form;\n    }\n}\n\n\n/**\n * Global validators\n * @type {Array}\n */\nForm.globalValidators = [];\n\n/**\n * Global Remote validation function\n */\nForm.globalRemoteValidationFunction = function () {\n};\n\n/**\n * Handles custom error messages extracts custom message by default\n */\nForm.globalErrorMessageHandler = (field, validity) => {\n    if (!validity.customError) {\n        let customMsg = field.getAttribute(ATTR_DATA_CUSTOM_MESSAGE);\n        if (customMsg) {\n            field.setCustomValidity(customMsg);\n        }\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Form.js\n **/","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isomorphic-fetch/fetch-npm-browserify.js\n ** module id = 9\n ** module chunks = 0 1\n **/","(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 10\n ** module chunks = 0 1\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Dropdown\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\nimport Util from 'util/Util';\nimport Settings from 'util/Settings';\nimport Event from 'util/Event';\nimport Widget from 'Widget';\n\n/**\n * @type {string}\n */\nconst ATTR_CC = 'data-collision-container';\n/**\n * @type {string}\n */\nconst ATTR_DARKENER = 'data-darkener-container';\n/**\n * @type {string}\n */\nconst DARKENER_INIT = 'init';\n/**\n * @type {string}\n */\nconst ATTR_DATA_TARGET = 'data-target';\n/**\n * @type {string}\n */\nconst ATTR_CLOSE_DROPDOWN = 'data-close-dropdown';\n/**\n * @type {string}\n */\nconst ATTR_NAME = 'data-dropdown';\n/**\n * @type {string}\n */\nconst STATE_LOADING = 'loading';\n\nconst CLS_DARKENER_DROPDOWN = 'darkener-dropdown';\n/**\n * @type {string}\n */\nconst CLS_OPEN = 'open';\n\n/**\n * @type {string}\n */\nconst CLS_DROPDOWN = 'dropdown';\n\n/**\n * @type {string}\n */\nexport const EVENT_DROPDOWN_CLOSED = 'flexcss.dropdown.closed';\n\n/**\n * A Dropdown\n */\nexport default\nclass Dropdown {\n    constructor(DelegateContainer, Darkener) {\n\n        var doc = global.document;\n\n        /**\n         * Container Element\n         * @type {HTMLElement}\n         */\n        this.container = DelegateContainer instanceof HTMLElement ?\n            DelegateContainer : doc.getElementById(DelegateContainer);\n\n        this.currentOpen = null;\n        this.currentTarget = null;\n        /**\n         * @type {HTMLElement}\n         */\n        this.darkener = Darkener instanceof HTMLElement ? Darkener : document.getElementById(Darkener);\n\n        this.destroyOnClose = false;\n\n        if (!this.darkener || !this.container) {\n            throw 'required elements not found (darkener and container element)';\n        }\n\n    }\n\n    /**\n     * Method that handles delegation events for dropdowns\n     * @param e\n     * @returns {boolean}\n     * @private\n     */\n    _delegateFunction(e) {\n        var currentOpen = this.currentOpen,\n            targetHas = e.target.hasAttribute(ATTR_NAME),\n            parentHas = e.target.parentNode ?\n                e.target.parentNode.hasAttribute(ATTR_NAME) : false,\n            target = targetHas ? e.target : e.target.parentNode,\n            targetIsCurrent = target === this.currentTarget;\n\n        if (currentOpen && !Util.isPartOfNode(e.target, currentOpen) || targetIsCurrent) {\n            this.close();\n            if(targetIsCurrent) {\n                e.preventDefault();\n            }\n            return targetIsCurrent ? false : this._delegateFunction(e);\n        }\n\n        if (targetHas || parentHas && !currentOpen) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            if (target.isLoading) {\n                return false;\n            }\n            this.createDropdown(target);\n        } else {\n            if (currentOpen) {\n                if (e.target.hasAttribute(ATTR_CLOSE_DROPDOWN)) {\n                    e.preventDefault();\n                    this.close();\n                }\n                if (!Util.isPartOfNode(e.target, currentOpen)) {\n                    this.close();\n                }\n            }\n        }\n    }\n\n    /**\n     * Register Events for this dropdown container\n     * @returns {Dropdown}\n     */\n    registerEvents() {\n        this.container.addEventListener(Settings.getTabEvent(), this._delegateFunction.bind(this), true);\n        return this;\n    }\n\n    /**\n     * Destroys this instance, unbinds events\n     * @returns {Dropdown}\n     */\n    destroy() {\n        this.container.removeEventListener(Settings.getTabEvent(), this._delegateFunction.bind(this), true);\n        return this;\n    }\n\n\n    /**\n     * Destroys instance on close of dropdown\n     * @param v\n     * @returns {Dropdown}\n     */\n    setDestroyOnClose(v) {\n        this.destroyOnClose = v;\n        return this;\n    }\n\n\n    /**\n     * Will add the right class to container for specific darkener id\n     * @param instance\n     * @param show\n     */\n    toggleDarkenerToggler(instance, show) {\n        var cls = 'toggle-' + (instance.id || CLS_DARKENER_DROPDOWN),\n            classList = this.container.classList;\n        if (show) {\n            classList.add(cls);\n        } else {\n            classList.remove(cls);\n        }\n    }\n\n    /**\n     * Closes Dropdown on current instance\n     * @return {Boolean|Promise}\n     */\n    close() {\n        var currentOpen = this.currentOpen;\n        if (!currentOpen) {\n            return false;\n        }\n        var future, darkenerInstance = currentOpen.flexDarkenerInstance || this.darkener, thisCurrentOpen = currentOpen;\n\n        future = new Promise((resolve) => {\n            if (window.getComputedStyle(currentOpen).position === 'fixed') {\n                Util.addEventOnce(Settings.getTransitionEvent(), currentOpen, function () {\n                    setTimeout(function () {\n                        Event.dispatchAndFire(thisCurrentOpen, EVENT_DROPDOWN_CLOSED);\n                        // if a new dropdown has been opened in the meantime, do not remove darkener\n                        if (this.currentOpen !== null) {\n                            return false;\n                        }\n                        this.toggleDarkenerToggler(darkenerInstance, false);\n                        this.container.classList.remove(Settings.get().canvasToggledClass);\n                        resolve(true);\n                    }.bind(this), Settings.get().darkenerFadeDelay);\n                }.bind(this));\n            } else {\n                resolve(true);\n                Event.dispatchAndFire(thisCurrentOpen, EVENT_DROPDOWN_CLOSED);\n            }\n        });\n\n        currentOpen.classList.remove(CLS_OPEN);\n\n        if (currentOpen.flexDarkenerInstance) {\n            currentOpen.flexDarkenerInstance.classList.remove(DARKENER_INIT);\n        } else {\n            this.darkener.classList.remove(DARKENER_INIT);\n        }\n\n        this.currentOpen = null;\n        this.currentTarget = null;\n\n        if (this.destroyOnClose) {\n            this.destroy();\n        }\n\n        return future;\n    }\n\n    /**\n     * Creates a dropdown on given target and opens it\n     * @param {HTMLElement} target target where this dropdown is placed\n     * @param {FlexCss.Widget} [thisWidget] if given will use widget instead of widget instance\n     * @return {FlexCss.Dropdown}\n     */\n    createDropdown(target, thisWidget) {\n        var doc = global.document;\n\n        if (!target) {\n            throw 'Dropdown target not found';\n        }\n\n        var widget = thisWidget || Widget.findWidget(target), future,\n            data = target.getAttribute(ATTR_NAME), dropdownContainerElement = doc.getElementById(data),\n            async = !dropdownContainerElement && Widget.isWidget(widget) ? widget.getAsync() : false;\n\n        if (async) {\n            target.classList.add(STATE_LOADING);\n            target.isLoading = true;\n            future = async.then(function (r) {\n                if (r instanceof HTMLElement) {\n                    if (r.id) {\n                        target.setAttribute(ATTR_NAME, r.id);\n                    }\n                    return r;\n                } else {\n                    // Create container Element:\n                    var element = doc.createElement('div');\n                    element.className = CLS_DROPDOWN;\n                    element.innerHTML = r;\n                    element.id = Util.guid();\n                    // Cache target for later use:\n                    target.setAttribute(ATTR_NAME, element.id);\n                    this.container.appendChild(element);\n                    return element;\n                }\n            }).then(function (r) {\n                target.isLoading = false;\n                target.classList.remove(STATE_LOADING);\n                return r;\n            });\n        } else {\n            if (!dropdownContainerElement) {\n                throw 'Could not found Dropdown container with ID \"' + data + '\"';\n            }\n            future = new Promise((r) => {\n                r(dropdownContainerElement);\n            });\n        }\n\n        future.then(function (dropdownContent) {\n            if (this.currentOpen) {\n                this.close();\n            }\n            // Skip one frame to show animation\n            target.dropdownContent = dropdownContent;\n            var isAbsolute = global.getComputedStyle(dropdownContent).position === 'absolute';\n\n            if (!target.flexCollisionContainer) {\n                var collisionC = target.getAttribute(ATTR_CC);\n                target.flexCollisionContainer = collisionC ?\n                doc.getElementById(collisionC) || document.documentElement : document.documentElement;\n            }\n\n            dropdownContent.classList.toggle(CLS_OPEN);\n            if (dropdownContent.classList.contains(CLS_OPEN)) {\n                this.currentOpen = dropdownContent;\n                this.currentTarget = target;\n            }\n            if (isAbsolute) {\n                // Check collision:\n                var selfTarget = target.getAttribute(ATTR_DATA_TARGET);\n                selfTarget = selfTarget ? doc.getElementById(selfTarget) : target;\n                Util.setupPositionNearby(selfTarget, dropdownContent, target.flexCollisionContainer);\n            } else {\n                this.container.classList.add(Settings.get().canvasToggledClass);\n                // optionally get custom darkener container for target\n                var d = target.getAttribute(ATTR_DARKENER);\n                if (d) {\n                    dropdownContent.flexDarkenerInstance = doc.getElementById(d);\n                    (dropdownContent.flexDarkenerInstance || this.darkener).classList.toggle(DARKENER_INIT);\n                } else {\n                    this.darkener.classList.toggle(DARKENER_INIT);\n                }\n\n                this.toggleDarkenerToggler(dropdownContent.flexDarkenerInstance || this.darkener, true);\n\n                dropdownContent.style.left = '0';\n                dropdownContent.style.top = 'auto';\n            }\n        }.bind(this));\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Dropdown.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.LightBox\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\n/* global Image, TouchEvent*/\n\nimport Modal from 'Modal';\nimport {EVENT_MODAL_CLOSED} from 'Modal';\nimport Settings from 'util/Settings';\nimport Widget from 'Widget';\n\nconst ATTR_MAX_WIDTH = 'data-original-width';\nconst ATTR_MAX_HEIGHT = 'data-original-height';\nconst ATTR_SRC = 'data-src';\n\nconst CLS_HAS_PREV = 'has-prev';\nconst CLS_HAS_NEXT = 'has-next';\nconst CLS_LOADING = 'loading';\n\nconst ATTR_NO_THUMBNAIL = 'data-no-thumbnail';\nconst ATTR_DATA_HREF = 'data-href';\nconst ATTR_HREF = 'href';\n\nconst KEY_NEXT = 39;\nconst KEY_PREV = 37;\nconst ATTR_CLOSE = 'data-close-modal';\n/**\n * A Simple LightBox\n */\nexport default\nclass LightBox {\n\n    /**\n     * Creates a new Lightbox\n     * @param DelegateContainer\n     * @param AttributeSelector\n     * @param ModalAppend\n     * @param [options]\n     */\n    constructor(DelegateContainer, AttributeSelector, ModalAppend, options) {\n\n        var thisDelegateContainer = DelegateContainer instanceof HTMLElement ? DelegateContainer :\n            document.getElementById(DelegateContainer);\n\n        this._modalAppend = ModalAppend || DelegateContainer;\n        /**\n         * @type {Function}\n         */\n        this._resizeEvent = null;\n        /**\n         * @type {Function}\n         */\n        this._keyboardNextEvent = null;\n        /**\n         * @type {Promise}\n         */\n        this._future = null;\n        /**\n         * @type {Promise}\n         */\n        this._nextFuture = this._future;\n        /**\n         * @type {HTMLElement}\n         */\n        this._imageContainer = null;\n        /**\n         * @type {HTMLElement}\n         */\n        this._modalContainerDiv = null;\n        /**\n         * @type {HTMLElement}\n         */\n        this._contentContainer = null;\n        /**\n         * @type {HTMLElement}\n         */\n        this._closerContainerDiv = null;\n        /**\n         * @type {HTMLElement}\n         */\n        this._delegateContainer = thisDelegateContainer;\n        /**\n         * @type {HTMLElement}\n         */\n        this._attributeSelector = AttributeSelector;\n        /**\n         * @type {Widget}\n         */\n        this._widget = null;\n        /**\n         * @type {boolean}\n         */\n        this._isOpen = false;\n        /**\n         * @type {HTMLElement}\n         */\n        this.target = null;\n        /**\n         * @type {HTMLElement}\n         */\n        this.img = null;\n        /**\n         * @type {boolean}\n         */\n        this._isLoading = false;\n\n        /**\n         * Default options\n         */\n        this.options = {\n            // set if prev and next should be available\n            registerPrevNextEvents: true,\n            // set if modal should be closed after last image\n            closeOnLast: true,\n            // called when next image is requested (either by keyboard or click), return false to abort\n            onNext: function () {\n                return true;\n            },\n            onClose: function () {\n            },\n            getNext: null,\n            getPrev: null,\n            // called when underlying target changed\n            onSwitchImage: function () {\n            }\n        };\n\n        Object.assign(this.options, options);\n    }\n\n    /**\n     * @param {HTMLElement} node\n     * @returns {HTMLElement|null}\n     */\n    findImmediateNextTarget(node) {\n        if (node && node.children[0].hasAttribute(this._attributeSelector)) {\n            return node.children[0];\n        }\n        return null;\n    }\n\n    /**\n     * Will fetch the next element of a lightBox\n     * @param {HTMLElement} target\n     * @returns {null|HTMLElement}\n     */\n    getNext(target) {\n        if (this.options.getNext) {\n            return this.options.getNext.apply(this, [target]);\n        }\n        return this.findImmediateNextTarget(target.parentNode.nextElementSibling);\n    }\n\n    /**\n     * Will fetch the previous element of a lightBox\n     * @param {HTMLElement} target\n     * @returns {null|HTMLElement}\n     */\n    getPrev(target) {\n        if (this.options.getPrev) {\n            return this.options.getPrev.apply(this, [target]);\n        }\n        return this.findImmediateNextTarget(target.parentNode.previousElementSibling);\n    }\n\n    /**\n     * Registers events for delegate container\n     */\n    registerEvents(onOpen) {\n        this._delegateContainer.addEventListener(Settings.getTabEvent(), (e) => {\n            let target = e.target, parent = target.parentNode,\n                validTarget = target.hasAttribute(this._attributeSelector),\n                parentIsValid = parent && parent.hasAttribute(this._attributeSelector);\n            if (!validTarget && parentIsValid) {\n                validTarget = true;\n                target = parent;\n            }\n            if (validTarget) {\n                e.preventDefault();\n                this.open(target).then((r) => {\n                    if (onOpen) {\n                        onOpen.apply(this, [r, target]);\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * @returns {HTMLElement}\n     */\n    getContentContainer() {\n        return this._contentContainer;\n    }\n\n    /**\n     * Setup max-width and max-height\n     * @param {HTMLElement} target\n     * @param {HTMLElement} img\n     * @param {HTMLElement} loadedImage\n     * @private\n     */\n    static _setupMaxWidthHeight(target, img, loadedImage) {\n        const nextMaxWidth = target.getAttribute(ATTR_MAX_WIDTH),\n            nextMaxHeight = target.getAttribute(ATTR_MAX_HEIGHT);\n        if (nextMaxWidth && nextMaxHeight) {\n            img.style.maxWidth = nextMaxWidth + \"px\";\n            img.style.maxHeight = nextMaxHeight + \"px\";\n        } else {\n            img.style.maxWidth = loadedImage.width + \"px\";\n            img.style.maxHeight = loadedImage.height + \"px\";\n        }\n    }\n\n    /**\n     * Switches to the next image\n     * @param {boolean} direction\n     */\n    switchImageByDirection(direction) {\n        const next = direction ? this.getPrev(this.target) : this.getNext(this.target);\n        if (this.options.onNext.apply(this, [next])) {\n            return this.switchImage(next);\n        }\n        return new Promise((_, reject) => reject(next));\n    }\n\n    /**\n     * Checks if lightbox is currently loading\n     * @returns {boolean}\n     */\n    isLoading() {\n        return this._isLoading;\n    }\n\n    /**\n     * Checks if modal should be closed\n     * @private\n     */\n    _runOptionalClose() {\n        if (this.options.closeOnLast) {\n            this.modal.close();\n        }\n    }\n\n    _setupPrevNextStates() {\n        const target = this.target, hasPrev = this.getPrev(target), hasNext = this.getNext(target),\n            hasPrevClass = CLS_HAS_PREV, hasNextClass = CLS_HAS_NEXT;\n        // because IE does not support the second toggle parameter, we need to do this manually\n        if (hasPrev) {\n            this._imageContainer.classList.add(hasPrevClass);\n        } else {\n            this._imageContainer.classList.remove(hasPrevClass);\n        }\n        if (hasNext) {\n            this._imageContainer.classList.add(hasNextClass);\n        } else {\n            this._imageContainer.classList.remove(hasNextClass);\n        }\n    }\n\n    /**\n     * @param img\n     * @private\n     */\n    _calculateContainer(img) {\n        if (Settings.isIE()) {\n            setTimeout(function () {\n                this._imageContainer.style.height = img.offsetHeight + 'px';\n            }.bind(this), 0);\n        }\n    }\n\n    /**\n     * Switch to a specific image\n     * @param next\n     * @returns {*}\n     */\n    switchImage(next) {\n        const self = this, img = this.img;\n        this._isLoading = true;\n        self._nextFuture = new Promise(((resolve, reject) => {\n            // notify observers about image switching\n            self.options.onSwitchImage.apply(self, [self._nextFuture]);\n            if (next) {\n                var nextThumb = next.hasAttribute(ATTR_NO_THUMBNAIL) ? next : (next.children[0] || next),\n                    nextHighRes = next.getAttribute(ATTR_DATA_HREF) ||\n                        next.getAttribute(ATTR_HREF),\n                    nextSource = nextThumb.getAttribute(ATTR_SRC) || nextThumb.src || nextHighRes,\n                    nextImgObject = new Image();\n\n                if (!nextSource) {\n                    reject(next);\n                    return;\n                }\n                // set new target to next element\n                this.target = next;\n                nextImgObject.src = nextSource;\n                self._imageContainer.classList.add(CLS_LOADING);\n                nextImgObject.addEventListener('load', function () {\n                    img.src = nextSource;\n                    self._imageContainer.style.backgroundImage = 'url(' + nextSource + ')';\n                    LightBox._setupMaxWidthHeight(next, img, nextImgObject);\n                    self._calculateContainer(img);\n                    self.highRes(nextThumb, nextHighRes);\n                    self._setupPrevNextStates();\n                    self._imageContainer.classList.remove(CLS_LOADING);\n                    this._isLoading = false;\n                    resolve(nextSource, this.target);\n                }.bind(this));\n            } else {\n                reject(this);\n            }\n        }).bind(this));\n        return self._nextFuture;\n    }\n\n\n    /**\n     * Setup High-Resolution picture\n     * @param {HTMLElement} thisThumbnail\n     * @param {String} thisImgHighResolution\n     */\n    highRes(thisThumbnail, thisImgHighResolution) {\n\n        if (thisImgHighResolution && thisThumbnail.src !== thisImgHighResolution) {\n            var highImageObj = new Image();\n            highImageObj.src = thisImgHighResolution;\n            highImageObj.addEventListener('load', function () {\n                // if current image is still available\n                if (this._getSrc(thisThumbnail) === this.img.src) {\n                    this.img.src = thisImgHighResolution;\n                    this._imageContainer.style.backgroundImage = 'url(' + thisImgHighResolution + ')';\n                }\n            }.bind(this));\n        }\n    }\n\n    /**\n     * Extracts the source of an image\n     * @param target\n     * @returns {String|null}\n     * @private\n     */\n    _getSrc(target) {\n        return target.getAttribute(ATTR_SRC) || target.src;\n    }\n\n    /**\n     * Will show a lightBox on given target\n     * @param {HTMLElement} target\n     * @returns {$.Deferred|*}\n     */\n    open(target) {\n        var self = this;\n\n        if (!target) {\n            return false;\n        }\n\n        this.target = target;\n\n        // if lightBox is open, we just switch to the new target image\n        if (this._isOpen && target) {\n            return this.switchImage(target).then(function () {\n                return this;\n            }.bind(this));\n        }\n\n        this._isOpen = true;\n\n        /**\n         * Setup Widget for modal\n         * @type {Widget}\n         */\n        this._widget = new Widget().setAsync(function () {\n            // thumbnail is either target itself or expected to be first childNode\n            var thumbnail = target.hasAttribute(ATTR_NO_THUMBNAIL) ? target : (target.children[0] || target);\n\n            var imgHighResolution = target.getAttribute(ATTR_DATA_HREF) || target.getAttribute(ATTR_HREF),\n                imgSrc = this._getSrc(thumbnail) || imgHighResolution;\n\n            var imageObj = new Image();\n            imageObj.src = imgSrc;\n            this._imageContainer = document.createElement('div');\n            this._modalContainerDiv = document.createElement('div');\n            this._closerContainerDiv = document.createElement('i');\n            this._contentContainer = document.createElement('div');\n\n            this._closerContainerDiv.className = 'modal-close modal-close-lightbox icon-cancel-1';\n            this._closerContainerDiv.setAttribute(ATTR_CLOSE, ATTR_CLOSE);\n\n            this._modalContainerDiv.className = 'modal image-modal';\n            this._modalContainerDiv.appendChild(this._imageContainer);\n            this._modalContainerDiv.appendChild(this._contentContainer);\n            this._modalContainerDiv.appendChild(this._closerContainerDiv);\n            this._contentContainer.className = 'content-container';\n            this._isLoading = true;\n            this._future = new Promise(((resolve) => {\n                imageObj.addEventListener('load', function () {\n                    this._imageContainer.className = 'image-container';\n                    var img = document.createElement('img');\n                    // current image\n                    this.img = img;\n\n                    img.src = imgSrc;\n                    LightBox._setupMaxWidthHeight(target, img, imageObj);\n                    this._imageContainer.appendChild(img);\n                    this._imageContainer.style.backgroundImage = 'url(' + imgSrc + ')';\n\n                    resolve(self._modalContainerDiv);\n                    this._isLoading = false;\n\n                    if (Settings.isIE()) {\n                        self._resizeEvent = global.addEventListener('resize', function () {\n                            setTimeout(function () {\n                                self._imageContainer.style.height = img.offsetHeight + 'px';\n                            }, 0);\n                        });\n                    }\n\n                    if (self.options.registerPrevNextEvents) {\n                        self._setupPrevNextStates();\n                        // prev or next on touch/click\n                        self._imageContainer.addEventListener(Settings.getTabEvent(), function (e) {\n                            if (self.isLoading()) {\n                                return;\n                            }\n                            e.preventDefault();\n\n                            var ev = e;\n                            var pageX = global.TouchEvent && ev instanceof TouchEvent ?\n                                ev.changedTouches[0].pageX : ev.pageX;\n                            var rect = self._imageContainer.getBoundingClientRect(), imgX = rect.left,\n                                wrapperWidth = rect.width,\n                                posX = pageX - imgX;\n\n                            self.switchImageByDirection(wrapperWidth / 2 > posX).catch(function () {\n                                self._runOptionalClose();\n                            });\n                        });\n\n                        // register keyboard events\n                        self._keyboardNextEvent = function (e) {\n                            if (e.keyCode === KEY_NEXT || e.keyCode === KEY_PREV) {\n                                if (self.isLoading()) {\n                                    return;\n                                }\n                                self.switchImageByDirection(e.keyCode === KEY_PREV).catch(function () {\n                                    self._runOptionalClose();\n                                });\n                            }\n                        };\n                        global.addEventListener('keydown', self._keyboardNextEvent);\n                    } else {\n                        self._imageContainer.addEventListener(Settings.getTabEvent(), function () {\n                            self._runOptionalClose();\n                        });\n                    }\n\n                    self.highRes(thumbnail, imgHighResolution);\n                }.bind(this));\n            }).bind(this));\n            this._future.then(function () {\n                self._calculateContainer(this.img);\n            }.bind(this));\n            self._modalContainerDiv.addEventListener(EVENT_MODAL_CLOSED, function () {\n                // cleanup:\n                this._modalContainerDiv.parentNode.removeChild(this._modalContainerDiv);\n                this.options.onClose.apply(self);\n                this._isOpen = false;\n                this.modal.destroy();\n                // unbind events\n                if (this._keyboardNextEvent) {\n                    global.removeEventListener('keydown', self._keyboardNextEvent);\n                }\n                if (this._resizeEvent) {\n                    global.removeEventListener('resize', self._resizeEvent);\n                }\n            }.bind(this));\n\n            return this._future;\n        }.bind(this));\n\n        this._nextFuture = this._future;\n\n        if (self._widget) {\n            this.modal = new Modal(this._modalAppend);\n            // make sure we close stack before\n            return this.modal.close().fromWidget(self._widget).then(function () {\n                return self._future.then(function () {\n                    return self;\n                });\n            });\n        } else {\n            return false;\n        }\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/LightBox.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.OffCanvas\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\nimport Settings from 'util/Settings';\nimport Util from 'util/Util';\n\n/**\n * @type {string}\n */\nconst ATTR_CLOSE_SIDEBAR = 'data-close-offcanvas';\n\n/**\n * @type {string}\n */\nconst ATTR_TARGET = 'data-offcanvas';\n/**\n * @type {string}\n */\nconst TOGGLE_CLASS = 'toggled-canvas';\n/**\n * @type {string}\n */\nconst INIT_CLASS = 'init';\n/**\n * @type {string}\n */\nconst OPEN_CLASS = 'open';\n/**\n * @type {number}\n */\nconst HIDE_FACTOR = 3;\n\n/**\n * A OffCanvas Implementation\n */\nexport default\nclass OffCanvas {\n\n    /**\n     * Creates an off-canvas navigation\n     * @param {HTMLElement|String} NavigationId\n     * @param {HTMLElement|String} Darkener\n     * @param {int} factor positive will expect right sidebar, positive left\n     * @param {bool} [disableTouch] if true all touch events are disabled\n     * @constructor\n     */\n    constructor(NavigationId, Darkener, factor, disableTouch) {\n\n        var doc = global.document, touched = 0,\n            navigationContainer = NavigationId instanceof HTMLElement ?\n                NavigationId : doc.getElementById(NavigationId),\n            darkener = Darkener instanceof HTMLElement ? Darkener : doc.getElementById(Darkener),\n            DARKENER_CLASS_TOGGLE = 'toggle-' + darkener.id || 'darkener',\n            DARKENER_CLASS_INSTANT_TOGGLE = `${DARKENER_CLASS_TOGGLE}-open`,\n            resetStyles = function (s) {\n                s.transform = '';\n                s.transition = '';\n                s.webkitTransform = '';\n                s.webkitTransition = '';\n            },\n            shouldNotTouch = function () {\n                return window.innerWidth >= Settings.get().smallBreakpoint;\n            };\n\n        if (!darkener || !navigationContainer) {\n            throw 'Could not find needed elements (Darkener and/or NavigationId)';\n        }\n\n        this.darkener = darkener;\n        this.darkenerClassToggle = DARKENER_CLASS_TOGGLE;\n        this.darkenerClassToggleInstant = DARKENER_CLASS_INSTANT_TOGGLE;\n\n        this.navigationContainer = navigationContainer;\n        this.navigationContainerId = navigationContainer.id;\n\n        // create id if id does not exist\n        if (!this.navigationContainerId) {\n            this.navigationContainerId = Util.guid();\n            navigationContainer.id = this.navigationContainerId;\n        }\n\n        if (!disableTouch) {\n            navigationContainer.addEventListener('touchstart', function (e) {\n                requestAnimationFrame(function () {\n                    if (shouldNotTouch()) {\n                        return;\n                    }\n                    touched = e.touches[0].clientX;\n                    var target = navigationContainer, style = target.style;\n                    target.mustHide = false;\n                    style.transition = 'transform 0s ease';\n                    style.webkitTransition = '-webkit-transform 0s ease';\n\n                });\n            });\n            navigationContainer.addEventListener('touchmove', function (e) {\n\n                if (shouldNotTouch()) {\n                    return;\n                }\n                var x = e.touches[0].clientX, target = navigationContainer,\n                    style = target.style, calc = touched - x,\n                    bounds = target.getBoundingClientRect(),\n                    compare = factor > 0 ? calc <= 0 : calc >= 0;\n                if (compare) {\n                    target.mustHide = factor > 0 ? calc * -1 >\n                    bounds.width / HIDE_FACTOR : calc > bounds.width / HIDE_FACTOR;\n                    style.transform = 'translate3d(' + (calc * -1) + 'px,0,0)';\n                    style.webkitTransform = 'translate3d(' + (calc * -1) + 'px,0,0)';\n                }\n            });\n            navigationContainer.addEventListener('touchend', function () {\n                requestAnimationFrame(function () {\n                    if (shouldNotTouch()) {\n                        return;\n                    }\n                    var target = navigationContainer, style = target.style;\n                    if (target.mustHide) {\n                        var width = target.getBoundingClientRect().width * factor;\n                        style.transition = 'transform .2s ease';\n                        style.webkitTransition = '-webkit-transform .2s ease';\n\n                        style.transform = 'translate3d(' + width + 'px,0,0)';\n                        style.webkitTransform = 'translate3d(' + width + 'px,0,0)';\n                        this._remove(() => {\n                            resetStyles(style);\n                        });\n                        this._removeInstant();\n                    } else {\n                        resetStyles(style);\n                    }\n                }.bind(this));\n            }.bind(this));\n        }\n    }\n\n    /**\n     * @private\n     */\n    _remove(callback) {\n        Util.addEventOnce(Settings.getTransitionEvent(), this.navigationContainer, function () {\n            // add timeout because transition event fires a little to early\n            setTimeout(function () {\n                requestAnimationFrame(function () {\n                    let body = global.document.body;\n                    OffCanvas.currentOpen = null;\n                    body.classList.remove(TOGGLE_CLASS);\n                    body.classList.remove(this.darkenerClassToggle);\n                    if(callback) {\n                        callback();\n                    }\n                }.bind(this));\n            }.bind(this), Settings.get().darkenerFadeDelay);\n        }.bind(this));\n    }\n\n    /**\n     * @private\n     */\n    _removeInstant() {\n        this.navigationContainer.classList.remove(OPEN_CLASS);\n        global.document.body.classList.remove(this.darkenerClassToggleInstant);\n        this.darkener.classList.remove(INIT_CLASS);\n    }\n\n    /**\n     * Toggles a an off-canvas element\n     * @param e\n     * @private\n     */\n    _toggle(e) {\n        e.preventDefault();\n        var bodyClass = global.document.body.classList, darkenerClass = this.darkener.classList,\n            DARKENER_CLASS_TOGGLE = this.darkenerClassToggle,\n            DARKENER_CLASS_INSTANT_TOGGLE = this.darkenerClassToggleInstant,\n            navigationControllerClassList = this.navigationContainer.classList;\n        if (this.navigationContainer.classList.contains(OPEN_CLASS)) {\n            this._remove();\n            this._removeInstant(navigationControllerClassList);\n        } else if(!OffCanvas.currentOpen) {\n            OffCanvas.currentOpen = this;\n            bodyClass.add(DARKENER_CLASS_INSTANT_TOGGLE);\n            bodyClass.add(TOGGLE_CLASS);\n            bodyClass.add(DARKENER_CLASS_TOGGLE);\n            darkenerClass.add(INIT_CLASS);\n            navigationControllerClassList.add(OPEN_CLASS);\n        }\n    }\n\n    /**\n     * Register events\n     * @param [delegate]\n     */\n    registerEvents(delegate) {\n        delegate = delegate || global.document;\n        delegate.addEventListener(Settings.getTabEvent(), function (e) {\n            if(OffCanvas.currentOpen && OffCanvas.currentOpen !== this) {\n                return;\n            }\n            let id = this.navigationContainerId, validTarget = e.target.getAttribute(ATTR_TARGET) === id;\n            if (!Util.isPartOfNode(e.target, this.navigationContainer)) {\n                if (validTarget || (OffCanvas.currentOpen === this && e.target === this.darkener)) {\n                    this._toggle(e);\n                }\n            } else {\n                if (e.target.hasAttribute(ATTR_CLOSE_SIDEBAR)) {\n                    this._toggle(e);\n                }\n            }\n        }.bind(this));\n    }\n}\n\nOffCanvas.currentOpen = null;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/OffCanvas.js\n **/","'use strict';\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport DestroyableWidget from 'DestroyableWidget';\n\nexport default class Showcase extends DestroyableWidget {\n\n\n    constructor(container) {\n        super();\n\n        this.container = container;\n\n        this.registerEvents();\n    }\n\n\n    registerEvents() {\n        const innerContainer =  this.container.children[0],\n              containerWidth = innerContainer.getBoundingClientRect().width,\n              parentContainerWidth = this.container.getBoundingClientRect().width;\n        const diff =  containerWidth - parentContainerWidth;\n\n        let lastX = 0, lastMove;\n\n        this.container.addEventListener('mouseenter', (e) => {\n            const rect = this.container.getBoundingClientRect();\n\n            lastX = e.clientX;\n        });\n\n        this.container.addEventListener('mousemove', (e) => {\n            const rect = this.container.getBoundingClientRect();\n            const nextX = e.clientX;\n            const normalizedRight = Math.abs(nextX - rect.left) /  (rect.width / 2);\n            requestAnimationFrame(() => {\n                const moveX = ((1 - normalizedRight) * diff);\n                innerContainer.style.webkitTransform = `translate3d(${moveX}px,0,0)`;\n                innerContainer.style.transform = `translate3d(${moveX}px,0,0)`;\n                lastMove = moveX;\n            });\n        })\n    }\n\n    static init(selector) {\n        const elements = document.querySelectorAll(selector);\n        return Array.prototype.slice.call(elements).map((el) => {\n            return new Showcase(el);\n        });\n    }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Showcase.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Toggleable\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\nimport Settings from 'util/Settings';\nimport Widget from 'Widget';\nimport Util from 'util/Util';\nimport Event from 'util/Event';\n\n/**\n * Event that is fired when a tab is closed\n * @type {string}\n */\n\nexport const EVENT_TAB_CLOSED = 'flexcss.tab.closed';\n\n/**\n * Event that is fired when a tab has been opened\n * @type {string}\n */\nexport const EVENT_TAB_OPENED = 'flexcss.tab.opened';\n/**\n * @type {string}\n */\nconst ATTR_NAME = 'data-toggle';\n/**\n * @type {string}\n */\nconst ACTIVE_CLASS = 'active';\n/**\n * @type {string}\n */\nconst LOADING_CLASS = 'loading';\n\n/**\n * @type {string}\n */\nconst ATTR_TOGGLE_LIST = 'data-toggle-list';\n\n/**\n * Creates a toggleable element, either for tabs or a single toggle\n */\nexport default\nclass Toggleable {\n    constructor(ContainerId) {\n\n        var doc = global.document;\n\n        this.container = ContainerId instanceof HTMLElement ? ContainerId :\n            doc.getElementById(ContainerId);\n\n        this.loading = false;\n\n        if (!this.container) {\n            throw 'Toggleable container with id \"' + ContainerId + '\" not found';\n        }\n    }\n\n    /**\n     * Listener\n     * @param {Event} e\n     * @private\n     */\n    _listener(e) {\n        var target = e.target, parent = target.parentNode, doc = global.document;\n\n        // support target child element to clicked\n        if (!target.hasAttribute(ATTR_NAME)) {\n            if (parent && parent.hasAttribute(ATTR_NAME)) {\n                target = parent;\n            } else {\n                return;\n            }\n        }\n\n        if (!target.hasAttribute(ATTR_NAME)) {\n            return;\n        }\n\n        var refId = target.getAttribute(ATTR_NAME),\n            ref = doc.getElementById(refId);\n\n        e.preventDefault();\n\n        if (this.loading) {\n            return;\n        }\n\n        this.toggleTarget(ref, target);\n    }\n\n    /**\n     * Registers Events for this instance\n     * @returns {Toggleable}\n     */\n    registerEvents() {\n        this.container.addEventListener(Settings.getTabEvent(), this._listener.bind(this));\n        return this;\n    }\n\n    /**\n     * Toggles given `ref`\n     * @param {HTMLElement} ref\n     * @param {HTMLElement} [target] optional target node\n     */\n    toggleTarget(ref, target) {\n        if (!target && !ref) {\n            return;\n        }\n        if (!target) {\n            target = document.querySelector('[' + ATTR_NAME + '=\"' + ref.id + '\"]');\n        }\n\n        var maybeToggleNode, future,\n            elClassList = target.classList, parentClassList,\n            parent = target.parentNode, doc = global.document;\n\n        future = new Promise((resolve, failure) => {\n            if (ref) {\n                resolve(ref);\n            } else {\n                var widget = Widget.findWidget(target), async = widget ? widget.getAsync() : null;\n                if (Widget.isWidget(widget) && async) {\n                    future = async.then(function (r) {\n                        if (r instanceof HTMLElement) {\n                            var id = Util.guid();\n                            r.id = id;\n                            target.setAttribute(ATTR_NAME, id);\n                            resolve(r);\n                        } else {\n                            throw 'Dynamically creating toggle-content is not supported right now. ' +\n                            'Return an HTMLElement instance';\n                        }\n                    });\n                } else {\n                    failure('Target not given');\n                }\n            }\n        });\n\n        if (parent) {\n            maybeToggleNode = Util.parentsUntil(target, function (node) {\n                return node && node.hasAttribute && node.hasAttribute(ATTR_TOGGLE_LIST);\n            });\n\n            parentClassList = parent.classList;\n            // Abort if element is already active and if is part of a toggle list\n            if (maybeToggleNode) {\n                if (!parentClassList.contains(ACTIVE_CLASS)) {\n                    parentClassList.toggle(ACTIVE_CLASS);\n                    parentClassList.add(LOADING_CLASS);\n                } else {\n                    return;\n                }\n            }\n\n            if (maybeToggleNode) {\n                for (var i = 0; i < maybeToggleNode.children.length; i++) {\n                    var n = maybeToggleNode.children[i], targetRef = n.children[0];\n                    if (n !== parent) {\n                        n.classList.remove(ACTIVE_CLASS);\n                        if (targetRef) {\n                            var attr = targetRef.getAttribute(ATTR_NAME),\n                                el = attr ? doc.getElementById(attr) : null;\n                            if (el) {\n                                Event.dispatchAndFire(el, EVENT_TAB_CLOSED);\n                                el.classList.remove(ACTIVE_CLASS);\n                                targetRef.classList.remove(ACTIVE_CLASS);\n                            }\n                        }\n                    }\n                }\n            }\n\n        }\n        if (elClassList) {\n            elClassList.toggle(ACTIVE_CLASS);\n            elClassList.add(LOADING_CLASS);\n        }\n        this.loading = true;\n        future.then(function (r) {\n            Event.dispatchAndFire(r, EVENT_TAB_OPENED);\n            Toggleable._handleLoaded(target);\n            r.classList.toggle(ACTIVE_CLASS);\n            this.loading = false;\n\n        }.bind(this)).catch((reason) => {\n            this.loading = false;\n            Toggleable._handleLoaded(target);\n            console.warn(reason);\n        });\n    }\n\n    /**\n     * @param el\n     * @private\n     */\n    static _handleLoaded(el) {\n        var parentClassList = el.parentNode.classList;\n        el.classList.remove(LOADING_CLASS);\n        if (parentClassList) {\n            parentClassList.remove(LOADING_CLASS);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/Toggleable.js\n **/","'use strict';\n\nimport Form from 'Form';\nimport Tooltip from 'Tooltip';\nimport Modal from 'Modal';\nimport Widget from 'Widget';\nimport Settings from 'util/Settings';\nimport Toggleable from 'Toggleable';\nimport OffCanvas from 'OffCanvas';\nimport Dropdown from 'Dropdown';\nimport LightBox from 'LightBox';\nimport Showcase from 'Showcase';\nimport Util from 'util/Util';\n\n// default export as component object\nexport default {\n    Form: Form,\n    Tooltip: Tooltip,\n    Modal: Modal,\n    Widget: Widget,\n    Settings: Settings,\n    Util:Util,\n    Toggleable: Toggleable,\n    OffCanvas: OffCanvas,\n    Dropdown: Dropdown,\n    LightBox: LightBox,\n    Showcase: Showcase\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/main/modules/All.js\n **/"],"sourceRoot":""}