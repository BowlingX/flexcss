{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///js/form.min.js","webpack:///webpack/bootstrap 6c686be13fa6b487ca14?b99a","webpack:///./src/main/util/Util.js?5bc4","webpack:///./src/main/util/Settings.js?b01f","webpack:///./src/main/util/Event.js?68bf","webpack:///./src/main/DestroyableWidget.js?8d9b","webpack:///./src/main/Tooltip.js?3890","webpack:///./src/main/Form.js?18a8","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js?7723","webpack:///./~/whatwg-fetch/fetch.js?1c20","webpack:///./src/main/modules/Form.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","value","PFX","COL_LEFT_CLASS","COL_RIGHT_CLASS","COL_BOTTOM_CLASS","Util","element","type","callback","thisFunction","e","apply","thisType","toLowerCase","name","addEventListener","t","undefined","el","document","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","style","parent","now","parentNode","func","s4","Math","floor","random","toString","substring","doc","inner","width","height","outer","position","top","left","visibility","overflow","appendChild","body","w1","offsetWidth","w2","clientWidth","removeChild","ev","capture","event","removeEventListener","offsetHeight","str","replace","g","toUpperCase","input","JSON","parse","stringify","base","attrs","attributes","attr","s","dashToCamelCase","nodeName","val","nodeValue","hasOwnProperty","parseInt","elementToPosition","collisionContainer","centerHorizontal","positionTop","amountTop","amountLeft","parentsUntil","HTMLElement","window","getComputedStyle","isPartOfNode","offsetTop","offsetLeft","targetPosition","getBoundingClientRect","elementRect","colRect","targetTop","targetRight","right","isCollisionTop","isCollisionBottom","innerHeight","isCollisionLeft","targetLeft","isCollisionRight","classList","remove","calcTop","calcLeft","add","rightPosition","leftCentered","collisionCentered","cssText","optionalOffset","scrollIntoView","thisOffset","scrolledY","scrollY","pageYOffset","scroll","_interopRequireDefault","obj","__esModule","default","_Util","_Util2","FLEXCSS_GLOBAL_SETTINGS","smallBreakpoint","scrollbarUpdateNodes","darkenerFadeDelay","canvasToggledClass","FLEXCSS_CONST_IS_IOS","FLEXCSS_CONST_IS_TOUCH","FLEXCSS_CONST_IS_IE","FLEXCSS_CONST_TAB_EVENT","init","FLEXCSS_CONST_SCROLLBAR_WIDTH","getScrollBarWidth","FLEXCSS_CONST_TRANSITION_EVENT","whichTransitionEndEvent","readyState","Settings","settings","assign","navigator","userAgent","match","msMaxTouchPoints","CustomEvent","_CustomEvent","params","evt","thisParams","bubbles","cancelable","detail","createEvent","initCustomEvent","Event","EventHandler","defaultOptions","options","withDetail","originalEvent","o","dispatchEvent","withOptions","fire","DestroyableWidget","listeners","forEach","listener","args","push","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_DestroyableWidget2","_DestroyableWidget3","_Settings","_Settings2","CLASS_NAMES_TOOLTIP","CLASS_NAMES_OPEN","ATTR_DATA_CLASSNAME","ATTR_DATA_NO_TOUCH","Tooltip","_DestroyableWidget","DelegateContainer","_this","container","getElementById","Error","tooltipContainer","containerClass","selectorAttribute","text","removeTitle","positionRelative","trim","isTouchDevice","hasAttribute","_restoreClassNames","innerHTML","flexTooltipCurrentTarget","oldTitle","removeAttribute","setupPositionNearby","classNames","maybeTargetClass","getAttribute","className","join","selfTarget","setAttribute","createTooltip","removeTooltip","EVENT_FORM_AJAX_COMPLETED","EVENT_FORM_AFTER_AJAX_SUBMIT","EVENT_FORM_SUBMIT","EVENT_FORM_READY","_Tooltip","_Tooltip2","_Event","_Event2","LOADING_CLASS","DATA_ELEMENT_INVALID","REMOTE","REMOTE_ACTION","ATTR_DISABLE_INLINE","ATTR_DISABLE_REALTIME","ATTR_VALIDATOR","ATTR_DATA_CUSTOM_MESSAGE","ATTR_DATA_CUSTOM_LABEL","ATTR_VALIDATE_VISIBILITY","ATTR_ERROR_TARGET_ID","ATTR_DEPENDS","CONST_USE_JSON","CONST_REALTIME_EVENT","FOCUS_TOOLTIP_DELAY","CLICK_TOOLTIP_DELAY","Form","form","HTMLFormElement","tooltips","currentValidationFuture","Promise","createTooltips","appendError","ajaxSubmitType","ajaxJsonContentType","inlineValidation","realtime","realtimeTimeout","formatErrorTooltip","error","inputErrorClass","containerErrorClass","fetchOptions","credentials","tooltipOptions","scrollToElementDiff","applyOptionsFromElement","hfWidgetInstance","_validators","globalValidators","_remoteValidationFunction","initFormValidation","destroy","thisForm","shouldUseAjax","ajaxPostUrl","location","href","useJson","dispatch","withOriginal","defaultPrevented","_formStopLoading","submit","preventDefault","defaultHeaders","X-Requested-With","Content-Type","headers","method","serverCall","fetch","serialize","FormData","then","r","globalRemoteValidationFunction","response","selectors","inputs","querySelectorAll","result","Array","exists","field","focus","_this2","fields","NodeList","_handleValidation","foundAnyError","bind","toValidateFields","scoped","arr","_createArrayFromInvalidFieldList","isLocalInvalid","_focusElement","validation","_customValidationsForElements","validateCustomFields","thisToValidateFields","from","concat","checkedFields","foundInvalidFields","prepareErrors","firstInvalidField","activeElement","_handleTooltipHideClickAfterChange","showAndOrCreateTooltip","validity","globalErrorMessageHandler","keys","labels","getForm","invalid","labelsIndex","labelEl","_markElementInvalid","_markElementValid","filter","HTMLFieldSetElement","thisParent","errors","inputsWithErrorClasses","elementErrorIndex","inputErrorIndex","validator","validationRef","cl","future","futures","fieldsLength","iVal","_shouldNotValidateField","customError","valid","_runValidation","console","warn","all","allFutures","l","fI","_removeElementErrors","removeAllErrors","handleAdditionalLabels","isInvalid","thisLabelGroup","additionalLabels","group","removeErrors","labelGroups","invalidFields","errorTarget","_findErrorTarget","flexFormsSavedValidity","_setupErrorMessages","msg","validationMessage","insertAdjacentHTML","flexFormsSavedValidationMessage","setCustomValidity","linkedFields","thisField","_isElementInvalidElement","_handleLabels","_formatErrorTooltip","fieldSelector","slice","_checkIsValidRealtimeElement","clearKeyDownTimeout","KEYDOWN_RUNNING","clearTimeout","TIMEOUT_KEYDOWN","_checkIsValidBlurFocusElement","_checkIsValidInlineCheckElement","_this3","invalidEvent","addEventOnce","handleInvalid","_formLoading","_checkIsInvalid","resolve","setTimeout","_handleSubmit","_formIsLoading","isStillTarget","_handleTooltipInline","dependentFields","_getDependentFields","flexcssKeepTooltips","_submitListener","dispatchAndFire","contains","getTabEvent","scrollToElement","submitListener","submitEvent","checkValidity","_getInvalidElements","firstError","_submitFunction","isVisible","list","n","foundTarget","errorFunc","selector","forms","instances","customMsg","normalizeName","String","test","normalizeValue","Headers","map","append","getOwnPropertyNames","consumed","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","support","Blob","isPrototypeOf","_bodyBlob","formData","_bodyFormData","arrayBuffer","ArrayBuffer","rejected","decode","json","normalizeMethod","upcased","methods","indexOf","Request","url","mode","referrer","split","bytes","shift","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","Response","bodyInit","status","ok","statusText","values","getAll","has","set","thisArg","clone","redirectStatuses","redirect","RangeError","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","open","withCredentials","responseType","setRequestHeader","send","polyfill","_Form","_Form2"],"mappings":"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","file":"js/form.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlexCss\"] = factory();\n\telse\n\t\troot[\"FlexCss\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FlexCss\"] = factory();\n\telse\n\t\troot[\"FlexCss\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"../\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(16);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\tvar PFX = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\t\n\tvar COL_LEFT_CLASS = 'is-collision-left';\n\t\n\tvar COL_RIGHT_CLASS = 'is-collision-right';\n\t\n\tvar COL_BOTTOM_CLASS = 'is-collision-bottom';\n\t\n\t/**\n\t * Provides shared DOM-Utility functions\n\t */\n\t\n\tvar Util = function () {\n\t    function Util() {\n\t        _classCallCheck(this, Util);\n\t    }\n\t\n\t    _createClass(Util, null, [{\n\t        key: \"prefixedAnimateEvent\",\n\t\n\t        /**\n\t         * Will register the right animation event based on browser\n\t         * @param element\n\t         * @param type\n\t         * @param callback\n\t         */\n\t        value: function prefixedAnimateEvent(element, type, callback) {\n\t            var thisFunction = function thisFunction(e) {\n\t                callback.apply(element, [e, thisFunction]);\n\t            };\n\t\n\t            for (var p = 0; p < PFX.length; p++) {\n\t                var thisType = type;\n\t                if (!PFX[p]) {\n\t                    thisType = type.toLowerCase();\n\t                }\n\t                var name = PFX[p] + thisType;\n\t                element.addEventListener(name, thisFunction, true);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Get correct transitionend event\n\t         * @returns {String}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: \"whichTransitionEndEvent\",\n\t        value: function whichTransitionEndEvent() {\n\t            var t = undefined;\n\t            var el = document.createElement('fake');\n\t\n\t            var transitions = {\n\t                'transition': 'transitionend',\n\t                'OTransition': 'oTransitionEnd',\n\t                'MozTransition': 'transitionend',\n\t                'WebkitTransition': 'webkitTransitionEnd'\n\t            };\n\t\n\t            for (t in transitions) {\n\t                if (el.style[t] !== undefined) {\n\t                    return transitions[t];\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Check if target is part of parent node\n\t         * @param target\n\t         * @param parent\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: \"isPartOfNode\",\n\t        value: function isPartOfNode(target, parent) {\n\t            if (!target || !parent) {\n\t                return false;\n\t            }\n\t            var now = target;\n\t            while (now !== parent && now !== null) {\n\t                if (now === parent) {\n\t                    break;\n\t                }\n\t                now = now.parentNode;\n\t            }\n\t            return now !== null;\n\t        }\n\t\n\t        /**\n\t         * Walks the tree until func returns true for given argument\n\t         * @param target\n\t         * @param func\n\t         * @returns {boolean|HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: \"parentsUntil\",\n\t        value: function parentsUntil(target, func) {\n\t            if (!target) {\n\t                return false;\n\t            }\n\t            var now = target;\n\t            while (!func(now) && now !== null) {\n\t                now = now.parentNode;\n\t            }\n\t\n\t            return now;\n\t        }\n\t\n\t        /**\n\t         * Generates a unique id\n\t         * @return {String}\n\t         */\n\t\n\t    }, {\n\t        key: \"guid\",\n\t        value: function guid() {\n\t            function s4() {\n\t                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t            }\n\t\n\t            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\t        }\n\t\n\t        /**\n\t         * Detects scrollbar width\n\t         * @see http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: \"getScrollBarWidth\",\n\t        value: function getScrollBarWidth() {\n\t            var doc = global.document;\n\t            var inner = doc.createElement('p');\n\t\n\t            inner.style.width = \"100%\";\n\t            inner.style.height = \"200px\";\n\t\n\t            var outer = doc.createElement('div');\n\t            outer.style.position = \"absolute\";\n\t            outer.style.top = \"0px\";\n\t            outer.style.left = \"0px\";\n\t            outer.style.visibility = \"hidden\";\n\t            outer.style.width = \"200px\";\n\t            outer.style.height = \"150px\";\n\t            outer.style.overflow = \"hidden\";\n\t            outer.appendChild(inner);\n\t\n\t            doc.body.appendChild(outer);\n\t            var w1 = inner.offsetWidth;\n\t            outer.style.overflow = 'scroll';\n\t            var w2 = inner.offsetWidth;\n\t            if (w1 === w2) {\n\t                w2 = outer.clientWidth;\n\t            }\n\t            doc.body.removeChild(outer);\n\t\n\t            return w1 - w2;\n\t        }\n\t\n\t        /**\n\t         * Run an event once\n\t         * @param {String} ev\n\t         * @param {HTMLElement|HTMLDocument} target\n\t         * @param {Function} func\n\t         * @param {boolean} [capture]\n\t         * @return Function created listener\n\t         */\n\t\n\t    }, {\n\t        key: \"addEventOnce\",\n\t        value: function addEventOnce(ev, target, func, capture) {\n\t            var thisFunction = function thisFunction(event) {\n\t                func(event, func);\n\t                target.removeEventListener(ev, thisFunction, capture);\n\t            };\n\t            target.addEventListener(ev, thisFunction, capture);\n\t            return thisFunction;\n\t        }\n\t\n\t        /**\n\t         * Checks if an element is visible\n\t         * @param {HTMLElement} element\n\t         * @returns bool\n\t         */\n\t\n\t    }, {\n\t        key: \"isVisible\",\n\t        value: function isVisible(element) {\n\t            return element.offsetWidth > 0 && element.offsetHeight > 0;\n\t        }\n\t\n\t        /**\n\t         * Creates a camelCaseRepresentation of a dashed string\n\t         * @param {String} str\n\t         * @returns String\n\t         */\n\t\n\t    }, {\n\t        key: \"dashToCamelCase\",\n\t        value: function dashToCamelCase(str) {\n\t            return str.replace(/-([a-z])/g, function (g) {\n\t                return g[1].toUpperCase();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates a copy of `input`\n\t         * @param {*} input\n\t         * @return *\n\t         */\n\t\n\t    }, {\n\t        key: \"copy\",\n\t        value: function copy(input) {\n\t            return JSON.parse(JSON.stringify(input));\n\t        }\n\t\n\t        /**\n\t         * Reads options from element (data attributes) and applies to base\n\t         * @param {HTMLElement} element\n\t         * @param {Object} base\n\t         * @return {Object}\n\t         */\n\t\n\t    }, {\n\t        key: \"applyOptionsFromElement\",\n\t        value: function applyOptionsFromElement(element, base) {\n\t            if (!element) {\n\t                return base;\n\t            }\n\t            var attrs = element.attributes;\n\t            for (var i = 0; i < attrs.length; i++) {\n\t                var attr = attrs[i];\n\t                if (attr) {\n\t                    var s = Util.dashToCamelCase(attr.nodeName.replace('data-', ''));\n\t                    var val = attr.nodeValue;\n\t                    if (base.hasOwnProperty(s)) {\n\t                        // skip functions\n\t                        if (typeof base[s] === 'function') {\n\t                            continue;\n\t                        }\n\t                        if (typeof base[s] === 'boolean') {\n\t                            base[s] = parseInt(val || 1, 10) === 1;\n\t                        } else {\n\t                            base[s] = val;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return base;\n\t        }\n\t\n\t        /**\n\t         * Will position an element directly at given target\n\t         * Is aware of a given collision container to detect edges\n\t         * Will put elementToPosition either to left, center or right edge (prefer right)\n\t         *  and either to bottom or top (prefers bottom)\n\t         *\n\t         * You may overwrite preferred positioned with `centerHorizontal` and `positionTop`\n\t         *\n\t         * @param {HTMLElement|ClientRect} target the target container to align to\n\t         * @param {HTMLElement} elementToPosition the element to position\n\t         * @param {HTMLElement} collisionContainer the outer container to prevent collisions\n\t         * @param {bool} [centerHorizontal] set true to center element, otherwise it's put on the right border by default\n\t         * @param {bool} [positionTop] flip top, by default element is positioned to the bottom.\n\t         * @returns {HTMLElement}\n\t         */\n\t\n\t    }, {\n\t        key: \"setupPositionNearby\",\n\t        value: function setupPositionNearby(target, elementToPosition, collisionContainer, centerHorizontal, positionTop) {\n\t            // determine relative offsets\n\t            var amountTop = 0;\n\t            var amountLeft = 0;\n\t            Util.parentsUntil(target.parentNode, function (el) {\n\t                if (!(el instanceof HTMLElement)) {\n\t                    return false;\n\t                }\n\t                var style = window.getComputedStyle(el);\n\t                if (Util.isPartOfNode(elementToPosition, el)) {\n\t                    if (style && style.position === 'relative') {\n\t                        amountTop += el.offsetTop || 0;\n\t                        amountLeft += el.offsetLeft || 0;\n\t                    }\n\t                    return false;\n\t                }\n\t                return true;\n\t            });\n\t\n\t            var targetPosition = target instanceof HTMLElement ? target.getBoundingClientRect() : target;\n\t            var elementRect = elementToPosition.getBoundingClientRect();\n\t            var colRect = collisionContainer.getBoundingClientRect();\n\t            var targetTop = targetPosition.top - amountTop;\n\t            var targetRight = targetPosition.right;\n\t            var isCollisionTop = targetTop - elementRect.height <= 0;\n\t            var isCollisionBottom = window.innerHeight < targetTop + amountTop + targetPosition.height + elementRect.height;\n\t            var isCollisionLeft = targetRight < elementRect.width;\n\t            var targetLeft = targetPosition.left;\n\t            var isCollisionRight = targetLeft + elementRect.width > colRect.width;\n\t            var classList = elementToPosition.classList;\n\t\n\t            classList.remove(COL_RIGHT_CLASS);\n\t            classList.remove(COL_LEFT_CLASS);\n\t            classList.remove(COL_BOTTOM_CLASS);\n\t\n\t            var calcTop = undefined;\n\t            var calcLeft = undefined;\n\t            if (isCollisionLeft && !isCollisionRight) {\n\t                // put element to left if collision with left\n\t                calcLeft = targetPosition.left - colRect.left - amountLeft + 'px';\n\t                classList.add(COL_LEFT_CLASS);\n\t            } else {\n\t                // maybe center if no collision with either side\n\t                var rightPosition = targetRight - elementRect.width - colRect.left - amountLeft + 'px';\n\t                var leftCentered = (targetLeft + targetPosition.width / 2 - elementRect.width / 2 || 0) - colRect.left;\n\t                var collisionCentered = leftCentered + elementRect.width > colRect.width;\n\t                if (centerHorizontal && !collisionCentered) {\n\t                    calcLeft = leftCentered + 'px';\n\t                } else {\n\t                    classList.add(COL_RIGHT_CLASS);\n\t                    calcLeft = rightPosition;\n\t                }\n\t            }\n\t\n\t            if (isCollisionBottom || positionTop && !isCollisionTop) {\n\t                // Put Element on top if collision\n\t                calcTop = targetTop - elementRect.height - colRect.top + 'px';\n\t                classList.add(COL_BOTTOM_CLASS);\n\t            } else {\n\t                calcTop = targetTop + targetPosition.height - colRect.top + 'px';\n\t            }\n\t\n\t            elementToPosition.style.cssText = \"top:\" + calcTop + \";left:\" + calcLeft + \";\";\n\t\n\t            return elementToPosition;\n\t        }\n\t\n\t        /**\n\t         * Brings a given element into viewport\n\t         * @param {HTMLElement} el\n\t         * @param {int|function}[optionalOffset]\n\t         */\n\t\n\t    }, {\n\t        key: \"scrollToElement\",\n\t        value: function scrollToElement(el, optionalOffset) {\n\t            el.scrollIntoView();\n\t            var thisOffset = optionalOffset;\n\t            // optionally use a additional scrollDif\n\t            if (thisOffset) {\n\t                if (typeof thisOffset === 'function') {\n\t                    thisOffset = optionalOffset();\n\t                }\n\t                if (thisOffset > 0) {\n\t                    var scrolledY = window.scrollY || window.pageYOffset;\n\t                    if (scrolledY) {\n\t                        window.scroll(0, scrolledY - thisOffset);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Util;\n\t}();\n\t\n\texports.default = Util;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\the MIT License (MIT)\n\tn\topyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\tn\termission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tn\the above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\tn\tn\tn\tn\tn\tn\tn\tn\tn\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// we attach global settings to global once because settings might be shared a lot of times trough the application\n\t// Maybe find a better way to handle that scenario\n\tif (!global.FLEXCSS_GLOBAL_SETTINGS) {\n\t    (function () {\n\t        global.FLEXCSS_GLOBAL_SETTINGS = {\n\t            // defined breakpoint for small devices < n\n\t            smallBreakpoint: 768,\n\t            // nodes that should be updated when no scrollbar is expected\n\t            scrollbarUpdateNodes: global.document.body !== null ? [global.document.body] : [],\n\t            // additional Delay until darkener is fully hidden\n\t            darkenerFadeDelay: 100,\n\t            // class that is added if canvas has been toggled\n\t            canvasToggledClass: 'toggled-canvas'\n\t        };\n\t\n\t        global.FLEXCSS_CONST_IS_IOS = null;\n\t\n\t        global.FLEXCSS_CONST_IS_TOUCH = null;\n\t\n\t        global.FLEXCSS_CONST_IS_IE = null;\n\t\n\t        global.FLEXCSS_CONST_TAB_EVENT = 'click';\n\t\n\t        var init = function init() {\n\t            // Measure scrollbar width\n\t            global.FLEXCSS_CONST_SCROLLBAR_WIDTH = _Util2.default.getScrollBarWidth();\n\t            // detect right transition end event\n\t            global.FLEXCSS_CONST_TRANSITION_EVENT = _Util2.default.whichTransitionEndEvent();\n\t        };\n\t\n\t        if (global.document.readyState !== 'loading') {\n\t            init();\n\t        } else {\n\t            // it's possible that global.document.body is not available if the document is not\n\t            // loaded completely\n\t            document.addEventListener('DOMContentLoaded', function () {\n\t                init();\n\t            });\n\t        }\n\t    })();\n\t}\n\t\n\t/**\n\t * Utility class that setups global settings\n\t */\n\t\n\tvar Settings = function () {\n\t    function Settings() {\n\t        _classCallCheck(this, Settings);\n\t    }\n\t\n\t    _createClass(Settings, null, [{\n\t        key: 'setup',\n\t\n\t        /**\n\t         * Setup global settings, overwrite default values\n\t         * @param {Object} settings\n\t         */\n\t        value: function setup(settings) {\n\t            Object.assign(global.FLEXCSS_GLOBAL_SETTINGS, settings);\n\t        }\n\t\n\t        /**\n\t         * Access to global settings\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'get',\n\t        value: function get() {\n\t            return global.FLEXCSS_GLOBAL_SETTINGS;\n\t        }\n\t\n\t        /**\n\t         * Detects a IOS Device, caches subsequent calls\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isIosDevice',\n\t        value: function isIosDevice() {\n\t            if (!global.FLEXCSS_CONST_IS_IOS) {\n\t                global.FLEXCSS_CONST_IS_IOS = global.navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n\t            }\n\t\n\t            return global.FLEXCSS_CONST_IS_IOS;\n\t        }\n\t\n\t        /**\n\t         * Detects a touch device, caches subsequent calls\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'isTouchDevice',\n\t        value: function isTouchDevice() {\n\t            if (!global.FLEXCSS_CONST_IS_TOUCH) {\n\t                global.FLEXCSS_CONST_IS_TOUCH = 'ontouchstart' in window || !!global.navigator.msMaxTouchPoints;\n\t            }\n\t            return global.FLEXCSS_CONST_IS_TOUCH;\n\t        }\n\t\n\t        /**\n\t         * Checks if current browser is Internet Explorer\n\t         * @returns {boolean|*}\n\t         */\n\t\n\t    }, {\n\t        key: 'isIE',\n\t        value: function isIE() {\n\t            if (!global.FLEXCSS_CONST_IS_IE) {\n\t                global.FLEXCSS_CONST_IS_IE = \"ActiveXObject\" in window;\n\t            }\n\t            return global.FLEXCSS_CONST_IS_IE;\n\t        }\n\t\n\t        /**\n\t         * @returns {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTransitionEvent',\n\t        value: function getTransitionEvent() {\n\t            return global.FLEXCSS_CONST_TRANSITION_EVENT;\n\t        }\n\t\n\t        /**\n\t         * @returns {int}\n\t         */\n\t\n\t    }, {\n\t        key: 'getScrollbarWidth',\n\t        value: function getScrollbarWidth() {\n\t            return global.FLEXCSS_CONST_SCROLLBAR_WIDTH;\n\t        }\n\t\n\t        /**\n\t         * @returns {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getTabEvent',\n\t        value: function getTabEvent() {\n\t            return global.FLEXCSS_CONST_TAB_EVENT;\n\t        }\n\t    }]);\n\t\n\t    return Settings;\n\t}();\n\t\n\texports.default = Settings;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/* global CustomEvent */\n\t\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t// polyfill for custom events to make thinks work in IE\n\t// The needed polyfill is so small that I embedded it here\n\t(function poly() {\n\t    if (!global.CustomEvent || typeof global.CustomEvent !== 'function') {\n\t        var _CustomEvent = function CustomEvent(event, params) {\n\t            var evt = undefined;\n\t            var thisParams = params || {\n\t                bubbles: false,\n\t                cancelable: false,\n\t                detail: undefined\n\t            };\n\t            evt = document.createEvent(\"CustomEvent\");\n\t            evt.initCustomEvent(event, thisParams.bubbles, thisParams.cancelable, thisParams.detail);\n\t            return evt;\n\t        };\n\t        _CustomEvent.prototype = global.Event.prototype;\n\t        global.CustomEvent = _CustomEvent;\n\t    }\n\t})();\n\t/**\n\t * Simpler Event dispatching\n\t */\n\t\n\tvar EventHandler = function () {\n\t\n\t    /**\n\t     * @param {HTMLElement} target\n\t     * @param {String} name\n\t     */\n\t\n\t    function EventHandler(target, name) {\n\t        _classCallCheck(this, EventHandler);\n\t\n\t        this.target = target;\n\t        this.defaultOptions = {\n\t            bubbles: true,\n\t            cancelable: true\n\t        };\n\t\n\t        this.name = name;\n\t    }\n\t\n\t    /**\n\t     * Set more options\n\t     * @param {Object} options\n\t     * @returns {EventHandler}\n\t     */\n\t\n\t    _createClass(EventHandler, [{\n\t        key: \"withOptions\",\n\t        value: function withOptions(options) {\n\t            Object.assign(this.defaultOptions, options || {});\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Call with the originalEvent\n\t         * @param {Event} e\n\t         * @returns {EventHandler}\n\t         */\n\t\n\t    }, {\n\t        key: \"withOriginal\",\n\t        value: function withOriginal(e) {\n\t            return this.withDetail({\n\t                originalEvent: e\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Extends the detail part of the event\n\t         * @param {Object} o\n\t         * @returns {EventHandler}\n\t         */\n\t\n\t    }, {\n\t        key: \"withDetail\",\n\t        value: function withDetail(o) {\n\t            if (!this.defaultOptions.detail) {\n\t                this.defaultOptions.detail = {};\n\t            }\n\t            Object.assign(this.defaultOptions.detail, o);\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * @returns {CustomEvent}\n\t         */\n\t\n\t    }, {\n\t        key: \"fire\",\n\t        value: function fire() {\n\t            var e = new CustomEvent(this.name, this.defaultOptions);\n\t            if (this.target) {\n\t                this.target.dispatchEvent(e);\n\t            }\n\t            return e;\n\t        }\n\t    }]);\n\t\n\t    return EventHandler;\n\t}();\n\t\n\tvar Event = function () {\n\t    function Event() {\n\t        _classCallCheck(this, Event);\n\t    }\n\t\n\t    _createClass(Event, null, [{\n\t        key: \"dispatch\",\n\t\n\t        /**\n\t         * Prepares to dispatch a custom event (without firing)\n\t         * @param {HTMLElement} target\n\t         * @param {String} name\n\t         * @returns {EventHandler}\n\t         */\n\t        value: function dispatch(target, name) {\n\t            return new EventHandler(target, name);\n\t        }\n\t\n\t        /**\n\t         * Dispatches a custom event and fires it directly\n\t         * @param {HTMLElement} target\n\t         * @param {String} name\n\t         * @param {Object} [options]\n\t         * @returns {CustomEvent}\n\t         */\n\t\n\t    }, {\n\t        key: \"dispatchAndFire\",\n\t        value: function dispatchAndFire(target, name, options) {\n\t            return new EventHandler(target, name).withOptions(options).fire();\n\t        }\n\t    }]);\n\t\n\t    return Event;\n\t}();\n\t\n\texports.default = Event;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 4 */,\n/* 5 */\n/***/ function(module, exports) {\n\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Provides a Basic Widget\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DestroyableWidget = function () {\n\t    function DestroyableWidget() {\n\t        _classCallCheck(this, DestroyableWidget);\n\t\n\t        this.listeners = [];\n\t    }\n\t\n\t    /**\n\t     * Destroys a Widget\n\t     */\n\t\n\t    _createClass(DestroyableWidget, [{\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            this.listeners.forEach(function (listener) {\n\t                listener.element.removeEventListener.apply(listener.element, listener.args);\n\t            });\n\t            this.listeners = [];\n\t        }\n\t\n\t        /**\n\t         * Adds an event and registers it later to remove bindings\n\t         * @param {HTMLElement} element\n\t         * @param {String} name\n\t         * @param {Function} listener\n\t         * @param {boolean} [capture]\n\t         * @returns {Function}\n\t         */\n\t\n\t    }, {\n\t        key: 'addEventListener',\n\t        value: function addEventListener(element, name, listener, capture) {\n\t            this.listeners.push({\n\t                element: element,\n\t                args: [name, listener, capture]\n\t            });\n\t\n\t            element.addEventListener(name, listener, capture);\n\t            return listener;\n\t        }\n\t    }]);\n\t\n\t    return DestroyableWidget;\n\t}();\n\t\n\texports.default = DestroyableWidget;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _DestroyableWidget2 = __webpack_require__(5);\n\t\n\tvar _DestroyableWidget3 = _interopRequireDefault(_DestroyableWidget2);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * The MIT License (MIT)\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * of this software and associated documentation files (the \"Software\"), to deal\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * in the Software without restriction, including without limitation the rights\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * copies of the Software, and to permit persons to whom the Software is\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * furnished to do so, subject to the following conditions:\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * The above copyright notice and this permission notice shall be included in\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * all copies or substantial portions of the Software.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\tn\tn\tn\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/*!\n\t * FlexCss.Tooltip\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar CLASS_NAMES_TOOLTIP = 'tooltip-container';\n\t/**\n\t * @type {string}\n\t */\n\tvar CLASS_NAMES_OPEN = 'open';\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_DATA_CLASSNAME = 'data-class';\n\t\n\t/**\n\t * @type {string}\n\t */\n\tvar ATTR_DATA_NO_TOUCH = 'data-no-touch';\n\t\n\t/**\n\t * @type {HTMLDocument}\n\t */\n\tvar doc = global.document;\n\t\n\t/**\n\t * Simple Tooltip\n\t */\n\t\n\tvar Tooltip = function (_DestroyableWidget) {\n\t    _inherits(Tooltip, _DestroyableWidget);\n\t\n\t    /**\n\t     * Creates a Tooltip\n\t     * @param {HTMLElement|String} DelegateContainer\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    function Tooltip(DelegateContainer, options) {\n\t        _classCallCheck(this, Tooltip);\n\t\n\t        /**\n\t         * The Container where possible events are captured\n\t         */\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Tooltip).call(this));\n\t\n\t        _this.container = DelegateContainer instanceof HTMLElement ? DelegateContainer : doc.getElementById(DelegateContainer);\n\t\n\t        if (!_this.container) {\n\t            throw new Error('Could not create Tooltip, DelegateContainer not found');\n\t        }\n\t\n\t        /**\n\t         * The Container where tooltips are stored for this instance\n\t         * @type {HTMLElement}\n\t         */\n\t        _this.tooltipContainer = null;\n\t\n\t        /**\n\t         * Default Options\n\t         */\n\t        _this.options = {\n\t            containerClass: '',\n\t            selectorAttribute: 'data-tooltip',\n\t            collisionContainer: _this.container\n\t        };\n\t\n\t        Object.assign(_this.options, options || {});\n\t        return _this;\n\t    }\n\t\n\t    /**\n\t     * Creates and shows a tooltip\n\t     * @param {HTMLElement} target where is this tooltip positioned\n\t     * @param {String} text text content in tooltip, will be NOT escaped\n\t     * @param {Boolean} [removeTitle] removes title element if given\n\t     * @param {Node} [positionRelative]\n\t     */\n\t\n\t    _createClass(Tooltip, [{\n\t        key: 'createTooltip',\n\t        value: function createTooltip(target, text, removeTitle, positionRelative) {\n\t            // abort if text is empty\n\t            if (!text || text && text.trim() === '') {\n\t                return;\n\t            }\n\t\n\t            if (_Settings2.default.isTouchDevice() && target && target.hasAttribute(ATTR_DATA_NO_TOUCH)) {\n\t                return;\n\t            }\n\t\n\t            var tooltipContainer = this.tooltipContainer;\n\t\n\t            if (!tooltipContainer) {\n\t                tooltipContainer = doc.createElement('div');\n\t                this.container.appendChild(tooltipContainer);\n\t                this.tooltipContainer = tooltipContainer;\n\t            }\n\t            this._restoreClassNames(tooltipContainer, target);\n\t\n\t            tooltipContainer.style.left = 'auto';\n\t            tooltipContainer.style.top = 'auto';\n\t            tooltipContainer.innerHTML = text;\n\t            tooltipContainer.flexTooltipCurrentTarget = target;\n\t            if (removeTitle) {\n\t                target.oldTitle = text;\n\t                target.removeAttribute('title');\n\t            }\n\t\n\t            _Util2.default.setupPositionNearby(positionRelative || target, tooltipContainer, this.options.collisionContainer, true, true);\n\t\n\t            tooltipContainer.classList.add(CLASS_NAMES_OPEN);\n\t        }\n\t    }, {\n\t        key: '_restoreClassNames',\n\t        value: function _restoreClassNames(container, target) {\n\t            // allow additional classname per tooltip on target element\n\t            var classNames = [CLASS_NAMES_TOOLTIP, this.options.containerClass];\n\t            var maybeTargetClass = target.getAttribute(ATTR_DATA_CLASSNAME);\n\t            if (maybeTargetClass) {\n\t                classNames.push(maybeTargetClass);\n\t            }\n\t            container.className = classNames.join(\" \");\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * @returns {HTMLElement|null}\n\t         */\n\t\n\t    }, {\n\t        key: 'getCurrentTarget',\n\t        value: function getCurrentTarget() {\n\t            return this.tooltipContainer ? this.tooltipContainer.flexTooltipCurrentTarget : null;\n\t        }\n\t\n\t        /**\n\t         * Destroys this Widget\n\t         * @returns {boolean}\n\t         */\n\t\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            _get(Object.getPrototypeOf(Tooltip.prototype), 'destroy', this).call(this);\n\t\n\t            if (this.tooltipContainer) {\n\t                this.tooltipContainer.parentNode.removeChild(this.tooltipContainer);\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\n\t         * Removes a Tooltip on given target\n\t         * @param {HTMLElement} [target], if not given will remove current open tooltip on this instance\n\t         */\n\t\n\t    }, {\n\t        key: 'removeTooltip',\n\t        value: function removeTooltip(target) {\n\t            var selfTarget = target;\n\t            if (!selfTarget && this.tooltipContainer) {\n\t                selfTarget = this.tooltipContainer.flexTooltipCurrentTarget;\n\t            }\n\t            if (this.tooltipContainer) {\n\t                if (this.tooltipContainer.flexTooltipCurrentTarget !== selfTarget) {\n\t                    return;\n\t                }\n\t                this.tooltipContainer.classList.remove(CLASS_NAMES_OPEN);\n\t                delete this.tooltipContainer.flexTooltipCurrentTarget;\n\t            }\n\t            if (selfTarget && selfTarget.oldTitle) {\n\t                selfTarget.setAttribute('title', selfTarget.oldTitle);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Initilizes mouse events on container element\n\t         */\n\t\n\t    }, {\n\t        key: 'registerEvents',\n\t        value: function registerEvents() {\n\t            var self = this;\n\t            this.addEventListener(this.container, 'mouseover', function (e) {\n\t                if (e.target.hasAttribute(self.options.selectorAttribute)) {\n\t                    self.createTooltip(e.target, e.target.getAttribute('title'), true);\n\t                }\n\t            });\n\t\n\t            this.addEventListener(this.container, 'mouseout', function (e) {\n\t                if (e.target.hasAttribute(self.options.selectorAttribute)) {\n\t                    self.removeTooltip(e.target);\n\t                }\n\t            });\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return Tooltip;\n\t}(_DestroyableWidget3.default);\n\t\n\texports.default = Tooltip;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 7 */,\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global HTMLFormElement, fetch, FormData, clearTimeout, NodeList*/\n\t\n\t/*\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t/*!\n\t * FlexCss.Form\n\t * Licensed under the MIT License (MIT)\n\t * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.EVENT_FORM_AJAX_COMPLETED = exports.EVENT_FORM_AFTER_AJAX_SUBMIT = exports.EVENT_FORM_SUBMIT = exports.EVENT_FORM_READY = undefined;\n\t\n\tvar _Tooltip = __webpack_require__(6);\n\t\n\tvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\t\n\t__webpack_require__(9);\n\t\n\tvar _Event = __webpack_require__(3);\n\t\n\tvar _Event2 = _interopRequireDefault(_Event);\n\t\n\tvar _Util = __webpack_require__(1);\n\t\n\tvar _Util2 = _interopRequireDefault(_Util);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tvar _DestroyableWidget2 = __webpack_require__(5);\n\t\n\tvar _DestroyableWidget3 = _interopRequireDefault(_DestroyableWidget2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar LOADING_CLASS = 'loading';\n\tvar DATA_ELEMENT_INVALID = 'data-flexcss-invalid';\n\tvar REMOTE = 'data-remote';\n\tvar REMOTE_ACTION = 'data-remote-action';\n\tvar ATTR_DISABLE_INLINE = 'data-disable-inline-validation';\n\tvar ATTR_DISABLE_REALTIME = 'data-disable-realtime-validation';\n\tvar ATTR_VALIDATOR = 'data-validate';\n\tvar ATTR_DATA_CUSTOM_MESSAGE = 'data-validation-message';\n\tvar ATTR_DATA_CUSTOM_LABEL = 'data-custom-label';\n\tvar ATTR_VALIDATE_VISIBILITY = 'data-validate-visibility';\n\tvar ATTR_ERROR_TARGET_ID = 'data-error-target';\n\tvar ATTR_DEPENDS = 'data-depends-selector';\n\tvar CONST_USE_JSON = 'json';\n\tvar CONST_REALTIME_EVENT = 'input';\n\tvar FOCUS_TOOLTIP_DELAY = 20;\n\tvar CLICK_TOOLTIP_DELAY = 150;\n\t\n\t/**\n\t * Triggered when form is fully initialized and handlers are binded\n\t * @type {string}\n\t */\n\tvar EVENT_FORM_READY = exports.EVENT_FORM_READY = 'flexcss.form.ready';\n\t/**\n\t * Fires when a form is submitted, cancelable\n\t * @type {string}\n\t */\n\tvar EVENT_FORM_SUBMIT = exports.EVENT_FORM_SUBMIT = 'flexcss.form.submit';\n\t/**\n\t * Fired directly after the form has been submitted via ajax\n\t * @type {string}\n\t */\n\tvar EVENT_FORM_AFTER_AJAX_SUBMIT = exports.EVENT_FORM_AFTER_AJAX_SUBMIT = 'flexcss.form.afterAjaxSubmit';\n\t/**\n\t * Fired when ajax events did complete\n\t * @type {string}\n\t */\n\tvar EVENT_FORM_AJAX_COMPLETED = exports.EVENT_FORM_AJAX_COMPLETED = 'flexcss.form.ajaxCompleted';\n\t\n\t/**\n\t * A HTML5 Form Validation replacement\n\t */\n\t\n\tvar Form = function (_DestroyableWidget) {\n\t    _inherits(Form, _DestroyableWidget);\n\t\n\t    /**\n\t     * @param {HTMLElement} form\n\t     * @param [options] optional options\n\t     */\n\t\n\t    function Form(form, options) {\n\t        _classCallCheck(this, Form);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Form).call(this));\n\t\n\t        if (!(form instanceof HTMLFormElement)) {\n\t            throw 'argument {0} form needs to be an form element';\n\t        }\n\t\n\t        /**\n\t         * The Form\n\t         * @type {HTMLElement}\n\t         */\n\t        _this.form = form;\n\t\n\t        /**\n\t         * @type {Tooltip}\n\t         */\n\t        _this.tooltips = null;\n\t\n\t        /**\n\t         * @type {Promise}\n\t         */\n\t        _this.currentValidationFuture = new Promise(function () {});\n\t\n\t        /**\n\t         * Default options\n\t         * @type {Object}\n\t         */\n\t        _this.options = {\n\t            // if true creates tooltips above element, uses FlexCss Tooltips\n\t            createTooltips: true,\n\t            // if true appends error message after input element\n\t            appendError: false,\n\t            // type of ajax submit\n\t            ajaxSubmitType: 'POST',\n\t            // json content type if ajax method is set to json\n\t            ajaxJsonContentType: 'application/json; charset=utf-8',\n\t            // allow inline validation\n\t            inlineValidation: true,\n\t            // validate in realtime (on `input` event)\n\t            realtime: true,\n\t            // timeout when realtime event should be captured\n\t            realtimeTimeout: 250,\n\t            // formatting method for an error\n\t            formatErrorTooltip: function formatErrorTooltip(error) {\n\t                return '<i class=\"icon-attention\"></i> ' + error;\n\t            },\n\t            // the class that will be put on the element to mark it failed validation\n\t            inputErrorClass: 'invalid',\n\t            // the container class for error messages below an element\n\t            containerErrorClass: 'form-error',\n\t            // additional options for fetch\n\t            fetchOptions: {\n\t                credentials: 'include'\n\t            },\n\t            // the container for tooltips\n\t            tooltipContainer: form,\n\t            tooltipOptions: {\n\t                containerClass: 'error-tooltip'\n\t            },\n\t            // if you have a fixed header, either set a number or function here\n\t            scrollToElementDiff: 0\n\t        };\n\t\n\t        // overwrite default options\n\t        Object.assign(_this.options, options);\n\t\n\t        // apply settings from attributes\n\t        _Util2.default.applyOptionsFromElement(form, _this.options);\n\t\n\t        // set form class as widget\n\t        // Forms are very different to classical widgets,\n\t        // we will not use our base widget class for this but just self\n\t        form.hfWidgetInstance = _this;\n\t\n\t        /**\n\t         * A List of Validators\n\t         * @type {Object}\n\t         * @private\n\t         */\n\t        _this._validators = Form.globalValidators;\n\t\n\t        /**\n\t         * @type {Function}\n\t         * @private\n\t         */\n\t        _this._remoteValidationFunction = null;\n\t\n\t        _this.initFormValidation();\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Form, [{\n\t        key: 'destroy',\n\t        value: function destroy() {\n\t            _get(Object.getPrototypeOf(Form.prototype), 'destroy', this).call(this);\n\t            if (this.tooltips) {\n\t                this.tooltips.destroy();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Submits this form, either via ajax or just classical (default)\n\t         * @param {HTMLFormElement} thisForm\n\t         * @param {Event} e\n\t         * @private\n\t         * @returns {Promise|boolean} returns false if submit is cancled\n\t         */\n\t\n\t    }, {\n\t        key: '_submitFunction',\n\t        value: function _submitFunction(thisForm, e) {\n\t            var shouldUseAjax = thisForm.getAttribute(REMOTE),\n\t                ajaxPostUrl = thisForm.getAttribute(REMOTE_ACTION) || thisForm.getAttribute('action') || window.location.href,\n\t                useJson = CONST_USE_JSON === shouldUseAjax,\n\t                self = this;\n\t\n\t            var ev = _Event2.default.dispatch(thisForm, EVENT_FORM_SUBMIT).withOriginal(e).fire();\n\t\n\t            // abort execution is event was prevented\n\t            if (ev.defaultPrevented) {\n\t                self._formStopLoading();\n\t                return false;\n\t            }\n\t\n\t            if (shouldUseAjax === null) {\n\t                // submit\n\t                return thisForm.submit();\n\t            }\n\t            // prevent form from submit normally\n\t            e.preventDefault();\n\t\n\t            // add information that this is an XMLHttpRequest request (used by some frameworks)\n\t            var defaultHeaders = {\n\t                'X-Requested-With': 'XMLHttpRequest'\n\t            };\n\t\n\t            // setup default headers\n\t            if (useJson) {\n\t                Object.assign(defaultHeaders, {\n\t                    'Content-Type': this.options.ajaxJsonContentType\n\t                });\n\t            }\n\t            var defaultOptions = Object.assign(this.options.fetchOptions, {\n\t                headers: defaultHeaders,\n\t                method: this.options.ajaxSubmitType\n\t            });\n\t\n\t            // support either JSON request payload or normal payload submission\n\t            var serverCall = useJson ? fetch(ajaxPostUrl, Object.assign(defaultOptions, {\n\t                body: JSON.stringify(this.serialize())\n\t            })) : fetch(ajaxPostUrl, Object.assign(defaultOptions, {\n\t                body: new FormData(thisForm)\n\t            }));\n\t\n\t            _Event2.default.dispatch(thisForm, EVENT_FORM_AFTER_AJAX_SUBMIT).withOriginal(e).fire();\n\t\n\t            return serverCall.then(function (r) {\n\t                (self._remoteValidationFunction || Form.globalRemoteValidationFunction).apply(self, [r]);\n\t\n\t                _Event2.default.dispatch(thisForm, EVENT_FORM_AJAX_COMPLETED).withOriginal(e).withDetail({ response: r }).fire();\n\t                // always remove error class\n\t                self._formStopLoading();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Serializes a form to a json object\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'serialize',\n\t        value: function serialize() {\n\t            var selectors = ['input[name]:not([type=\"radio\"]):enabled', 'input[type=\"radio\"][name]:checked', 'select[name]:enabled', 'textarea[name]:enabled'],\n\t                inputs = this.form.querySelectorAll(selectors.join(',')),\n\t                result = {};\n\t\n\t            Array.prototype.forEach.call(inputs, function (input) {\n\t                var exists = result[input.name],\n\t                    value = input.value;\n\t                if (exists instanceof Array) {\n\t                    exists.push(value);\n\t                } else if (exists) {\n\t                    result[input.name] = [result[input.name], value];\n\t                } else {\n\t                    result[input.name] = value;\n\t                }\n\t            });\n\t\n\t            return result;\n\t        }\n\t\n\t        /**\n\t         * Handles the chain of validation on given fields\n\t         *\n\t         * @param {HTMLElement|Array|NodeList} field\n\t         * @param [focus] optional focus first error\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'handleValidation',\n\t        value: function handleValidation(field, focus) {\n\t            var _this2 = this;\n\t\n\t            var fields = field instanceof Array || field instanceof NodeList ? field : [field];\n\t            return this._handleValidation(fields, focus, true).then(function (r) {\n\t                if (!r.foundAnyError) {\n\t                    // remove tooltips\n\t                    if (_this2.tooltips) {\n\t                        _this2.tooltips.removeTooltip();\n\t                    }\n\t                }\n\t                return r;\n\t            }.bind(this));\n\t        }\n\t\n\t        /**\n\t         * Handles errors on given node list\n\t         * @param {NodeList} toValidateFields\n\t         * @param {boolean} focus\n\t         * @param {boolean} scoped if true, will only validate the fields `invalidFields`\n\t         * @returns {Promise}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_handleValidation',\n\t        value: function _handleValidation(toValidateFields, focus, scoped) {\n\t            var self = this;\n\t            var arr = Form._createArrayFromInvalidFieldList(toValidateFields),\n\t                isLocalInvalid = arr.length > 0;\n\t            // focus must appear in the same frame for iOS devices\n\t            if (isLocalInvalid && focus) {\n\t                self._focusElement(arr[0]);\n\t            }\n\t            var validation = scoped ? this._customValidationsForElements(toValidateFields) : self.validateCustomFields();\n\t            return validation.then(function (r) {\n\t                if (isLocalInvalid) {\n\t                    // combine browser and custom validators\n\t                    r.foundAnyError = true;\n\t                }\n\t                // get a unique field list of all fields that need to be checked and rendered\n\t                // it's possible that we have duplicates in non scoped mode\n\t                var thisToValidateFields = scoped ? toValidateFields : Array.from(arr).concat(r.checkedFields);\n\t                r.checkedFields = thisToValidateFields;\n\t                var foundInvalidFields = self.prepareErrors(thisToValidateFields, false),\n\t                    firstInvalidField = foundInvalidFields[0];\n\t                if (firstInvalidField) {\n\t                    if (focus) {\n\t                        self._focusElement(firstInvalidField);\n\t                        // if element could not be focused:\n\t                        if (document.activeElement !== firstInvalidField) {\n\t                            self._handleTooltipHideClickAfterChange();\n\t                        }\n\t                    } else {\n\t                        self._handleTooltipHideClickAfterChange();\n\t                    }\n\t                    self.showAndOrCreateTooltip(firstInvalidField);\n\t                }\n\t                return r;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * @param {HTMLElement} field\n\t         * @param {ValidityState} validity\n\t         * @returns {*}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_setupErrorMessages',\n\t        value: function _setupErrorMessages(field, validity) {\n\t            return Form.globalErrorMessageHandler ? Form.globalErrorMessageHandler.apply(this, [field, validity]) : false;\n\t        }\n\t\n\t        /**\n\t         * Handles class labels for elements\n\t         * @param {Object} fields\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_handleLabels',\n\t        value: function _handleLabels(fields) {\n\t            Object.keys(fields).forEach(function (id) {\n\t                var labels = this.getForm().querySelectorAll('[for=\"' + id + '\"]'),\n\t                    invalid = fields[id];\n\t                if (labels.length) {\n\t                    for (var labelsIndex = 0; labelsIndex < labels.length; labelsIndex++) {\n\t                        var labelEl = labels[labelsIndex];\n\t                        // we can't use toggle attribute, not supported in IE\n\t                        if (invalid) {\n\t                            this._markElementInvalid(labelEl);\n\t                        } else {\n\t                            this._markElementValid(labelEl);\n\t                        }\n\t                    }\n\t                }\n\t            }.bind(this));\n\t        }\n\t\n\t        /**\n\t         * @param el\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_markElementInvalid',\n\t        value: function _markElementInvalid(el) {\n\t            el.setAttribute(DATA_ELEMENT_INVALID, \"true\");\n\t            el.classList.add(this.options.inputErrorClass);\n\t        }\n\t\n\t        /**\n\t         * @param el\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_markElementValid',\n\t        value: function _markElementValid(el) {\n\t            el.removeAttribute(DATA_ELEMENT_INVALID);\n\t            el.classList.remove(this.options.inputErrorClass);\n\t        }\n\t\n\t        /**\n\t         * A List of invalid elements (:invalid)\n\t         * @returns {Array}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_getInvalidElements',\n\t        value: function _getInvalidElements() {\n\t            return Array.prototype.filter.call(this.getForm().querySelectorAll(\":invalid\"), function (r) {\n\t                return !(r instanceof HTMLFieldSetElement);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * @param {HTMLElement} thisParent\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_removeElementErrors',\n\t        value: function _removeElementErrors(thisParent) {\n\t            var errors = thisParent.querySelectorAll('.' + this.options.containerErrorClass),\n\t                inputsWithErrorClasses = thisParent.querySelectorAll('[' + DATA_ELEMENT_INVALID + ']');\n\t            for (var elementErrorIndex = 0; elementErrorIndex < errors.length; elementErrorIndex++) {\n\t                errors[elementErrorIndex].parentNode.removeChild(errors[elementErrorIndex]);\n\t            }\n\t            for (var inputErrorIndex = 0; inputErrorIndex < inputsWithErrorClasses.length; inputErrorIndex++) {\n\t                var el = inputsWithErrorClasses[inputErrorIndex];\n\t                this._markElementValid(el);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Registers a custom validator\n\t         * @param {String} name\n\t         * @param {Function} validator a validation function should always return either a Future(true) or Future(false)\n\t         * even when the field has been invalidated with `setCustomValidity`, because of different browser `bugs`\n\t         * we can't rely on that\n\t         * @returns {Form}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerValidator',\n\t        value: function registerValidator(name, validator) {\n\t            this._validators[name] = validator;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Runs async validation\n\t         * @param {String} validationRef\n\t         * @param {HTMLElement} field\n\t         * @returns {Promise}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_runValidation',\n\t        value: function _runValidation(validationRef, field) {\n\t            if (!this._validators[validationRef]) {\n\t                throw 'Could not found validator: ' + validationRef;\n\t            }\n\t            var cl = field.classList,\n\t                future = this._validators[validationRef].apply(this, [field, this.form]);\n\t            cl.add(LOADING_CLASS);\n\t            future.then(function () {\n\t                cl.remove(LOADING_CLASS);\n\t            });\n\t            return future;\n\t        }\n\t\n\t        /**\n\t         * Run custom validations for elements, validations are done async do support XHR Requests or other stuff\n\t         *\n\t         * @param {Array|NodeList} fields\n\t         * @returns {Promise} contains either true if validations passed or false if something went wrong\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_customValidationsForElements',\n\t        value: function _customValidationsForElements(fields) {\n\t            var futures = [],\n\t                fieldsLength = fields.length,\n\t                checkedFields = [];\n\t            for (var iVal = 0; iVal < fieldsLength; iVal++) {\n\t                var field = fields[iVal],\n\t                    validationRef = field.getAttribute(ATTR_VALIDATOR),\n\t                    validity = field.validity;\n\t                if (this._validators[validationRef]) {\n\t                    // use local validation first and then continue with custom validations\n\t                    if (Form._shouldNotValidateField(field) || validity && !validity.customError && !validity.valid) {\n\t                        continue;\n\t                    }\n\t                    checkedFields.push(field);\n\t                    futures.push(this._runValidation(validationRef, field));\n\t                } else {\n\t                    if (validationRef) {\n\t                        console.warn('data-validate was set but no validator was found');\n\t                    }\n\t                }\n\t            }\n\t            return Promise.all(futures).then(function (allFutures) {\n\t                var l = allFutures.length;\n\t                var result = {\n\t                    checkedFields: checkedFields,\n\t                    foundAnyError: false\n\t                };\n\t                for (var fI = 0; fI < l; fI++) {\n\t                    if (!allFutures[fI]) {\n\t                        result.foundAnyError = true;\n\t                        break;\n\t                    }\n\t                }\n\t                return result;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Remove all errors for this form\n\t         * @returns {Form}\n\t         */\n\t\n\t    }, {\n\t        key: 'removeErrors',\n\t        value: function removeErrors() {\n\t            this._removeElementErrors(this.form);\n\t            if (this.tooltips) {\n\t                this.tooltips.removeTooltip();\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Will handle errors for given fields\n\t         * @param {Array|NodeList} fields\n\t         * @param {Boolean} removeAllErrors\n\t         */\n\t\n\t    }, {\n\t        key: 'prepareErrors',\n\t        value: function prepareErrors(fields, removeAllErrors) {\n\t            if (removeAllErrors) {\n\t                this.removeErrors();\n\t            }\n\t            var labelGroups = {},\n\t                invalidFields = [];\n\t\n\t            function handleAdditionalLabels(isInvalid, thisLabelGroup, field) {\n\t                var additionalLabels = field.getAttribute(ATTR_DATA_CUSTOM_LABEL) || field.id,\n\t                    group = thisLabelGroup[additionalLabels];\n\t                if (additionalLabels) {\n\t                    // check additionally if field is currently marked as invalid\n\t                    // so the label is not marked as error if no field is marked as one\n\t                    group = group ? group : isInvalid;\n\t                    thisLabelGroup[additionalLabels] = group;\n\t                }\n\t            }\n\t\n\t            // We save all validations in an extra property because we need to reset the validity due some\n\t            // implementation errors in other browsers then chrome\n\t            for (var i = 0; i < fields.length; i++) {\n\t                var field = fields[i],\n\t                    errorTarget = Form._findErrorTarget(field),\n\t                    parent = errorTarget.parentNode,\n\t                    validity = field.validity,\n\t                    isInvalid = validity && !validity.valid;\n\t                if (Form._shouldNotValidateField(field)) {\n\t                    continue;\n\t                }\n\t                field.flexFormsSavedValidity = JSON.parse(JSON.stringify(validity));\n\t                handleAdditionalLabels(isInvalid, labelGroups, field);\n\t                if (isInvalid) {\n\t                    if (!removeAllErrors) {\n\t                        // Remove current errors:\n\t                        this._removeElementErrors(parent);\n\t                    }\n\t                    // setup custom error messages:\n\t                    this._setupErrorMessages(field, validity);\n\t                    var msg = field.validationMessage;\n\t\n\t                    // mark fields as invalid\n\t                    this._markElementInvalid(errorTarget);\n\t                    this._markElementInvalid(field);\n\t\n\t                    if (this.options.appendError) {\n\t                        parent.insertAdjacentHTML(\"beforeend\", '<div class=\"' + this.options.containerErrorClass + '\">' + msg + '</div>');\n\t                    }\n\t                    invalidFields.push(field);\n\t                    field.flexFormsSavedValidationMessage = msg;\n\t                } else {\n\t                    // restore invalid fields\n\t                    this._markElementValid(errorTarget);\n\t                    this._markElementValid(field);\n\t\n\t                    // cleanup\n\t                    delete field.flexFormsSavedValidationMessage;\n\t\n\t                    // remove error markup\n\t                    this._removeElementErrors(parent);\n\t                }\n\t                // We have to reset the custom validity here to allow native validations work again\n\t                field.setCustomValidity('');\n\t            }\n\t            // if validates a single field we need to check the linked fields to a label:\n\t            if (fields.length === 1) {\n\t                var field = fields[0];\n\t                var id = field.getAttribute(ATTR_DATA_CUSTOM_LABEL) || field.id;\n\t                if (id) {\n\t                    var linkedFields = Array.from(this.getForm().querySelectorAll('[' + ATTR_DATA_CUSTOM_LABEL + '=\"' + id + '\"], #' + id));\n\t                    linkedFields.forEach(function (thisField) {\n\t                        var validity = thisField.validity,\n\t                            isInvalid = validity && !validity.valid && this._isElementInvalidElement(thisField);\n\t                        handleAdditionalLabels(isInvalid, labelGroups, thisField);\n\t                    }.bind(this));\n\t                }\n\t            }\n\t            this._handleLabels(labelGroups);\n\t            return invalidFields;\n\t        }\n\t\n\t        /**\n\t         * Validates all custom fields\n\t         * @returns {Promise}\n\t         */\n\t\n\t    }, {\n\t        key: 'validateCustomFields',\n\t        value: function validateCustomFields() {\n\t            return this._customValidationsForElements(this.form.querySelectorAll(\"[data-validate]\"));\n\t        }\n\t\n\t        /**\n\t         * Tests if a field should be validated\n\t         * @param {HTMLElement} field\n\t         * @returns {boolean}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'getForm',\n\t\n\t        /**\n\t         * This form\n\t         * @returns {HTMLElement}\n\t         */\n\t        value: function getForm() {\n\t            return this.form;\n\t        }\n\t\n\t        /**\n\t         * Registers a function that handles remote validation\n\t         * @param {Function} func\n\t         * @returns {Form}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerRemoteValidation',\n\t        value: function registerRemoteValidation(func) {\n\t            this._remoteValidationFunction = func;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Formats the error content for the tooltip\n\t         * @param {String} error\n\t         * @returns {String}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_formatErrorTooltip',\n\t        value: function _formatErrorTooltip(error) {\n\t            return this.options.formatErrorTooltip.apply(this, [error]);\n\t        }\n\t\n\t        /**\n\t         * Tries to find a custom error target on given target\n\t         * @param target\n\t         * @returns {HTMLElement}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: 'showAndOrCreateTooltip',\n\t\n\t        /**\n\t         * Creates a tooltip at given element, will only create a new instance if not created\n\t         * @param {HTMLElement} target\n\t         * @param {Boolean} [remove]\n\t         */\n\t        value: function showAndOrCreateTooltip(target, remove) {\n\t            var self = this;\n\t            if (!this.tooltips && this.options.createTooltips) {\n\t                this.tooltips = new _Tooltip2.default(this.options.tooltipContainer, this.options.tooltipOptions);\n\t            }\n\t            if (!this.options.createTooltips) {\n\t                return false;\n\t            }\n\t\n\t            if (!target.flexFormsSavedValidity) {\n\t                return false;\n\t            }\n\t            var errorTarget = Form._findErrorTarget(target);\n\t            if (!target.flexFormsSavedValidity.valid && self._isElementInvalidElement(errorTarget)) {\n\t                self.tooltips.createTooltip(errorTarget, self._formatErrorTooltip(target.flexFormsSavedValidationMessage), false);\n\t                return true;\n\t            } else {\n\t                if (remove) {\n\t                    self.tooltips.removeTooltip();\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\n\t         * Checks if element is marked as invalid\n\t         * @param {HTMLElement} el\n\t         * @returns {boolean}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_isElementInvalidElement',\n\t        value: function _isElementInvalidElement(el) {\n\t            return el.hasAttribute(DATA_ELEMENT_INVALID);\n\t        }\n\t\n\t        /**\n\t         * Handles invalid event of a form\n\t         * @param {Event} e\n\t         * @returns {Promise|boolean}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_checkIsInvalid',\n\t        value: function _checkIsInvalid(e) {\n\t            e.preventDefault();\n\t            var invalidFields = this.getForm().querySelectorAll(\":invalid\");\n\t            return this._handleValidation(invalidFields, true, false);\n\t        }\n\t\n\t        /**\n\t         * Will query dependent fields (by selector) that should be validated with given field\n\t         * @param field\n\t         * @returns {NodeList|[]}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_getDependentFields',\n\t        value: function _getDependentFields(field) {\n\t            var fieldSelector = field.getAttribute(ATTR_DEPENDS),\n\t                base = [field];\n\t            if (fieldSelector) {\n\t                base.push.apply(base, Array.prototype.slice.apply(this.getForm().querySelectorAll(fieldSelector)));\n\t            }\n\t            return base;\n\t        }\n\t\n\t        /**\n\t         * @private\n\t         * @param {HTMLElement} [target]\n\t         */\n\t\n\t    }, {\n\t        key: '_handleTooltipInline',\n\t        value: function _handleTooltipInline(target) {\n\t            if (this.tooltips) {\n\t                this.tooltips.removeTooltip(target);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Initializes validation for a given form, registers event handlers\n\t         */\n\t\n\t    }, {\n\t        key: 'initFormValidation',\n\t        value: function initFormValidation() {\n\t            var _this3 = this;\n\t\n\t            // Suppress the default bubbles\n\t            var form = this.getForm(),\n\t                self = this,\n\t                invalidEvent = 'invalid';\n\t\n\t            /**\n\t             * Validates if is valid realtime element\n\t             * @param {HTMLElement} target\n\t             * @returns {boolean}\n\t             * @private\n\t             */\n\t            function _checkIsValidRealtimeElement(target) {\n\t                return !target.hasAttribute(ATTR_DISABLE_REALTIME) && !target.hasAttribute(ATTR_DISABLE_INLINE);\n\t            }\n\t\n\t            form.addEventListener(invalidEvent, function (e) {\n\t                e.preventDefault();\n\t            }, true);\n\t\n\t            _Util2.default.addEventOnce(invalidEvent, form, function handleInvalid(e) {\n\t                self._formLoading();\n\t                var result = self._checkIsInvalid(e);\n\t                if (result) {\n\t                    self.currentValidationFuture = new Promise(function (resolve) {\n\t                        result.then(function (r) {\n\t                            setTimeout(function () {\n\t                                _Util2.default.addEventOnce(invalidEvent, form, handleInvalid, true);\n\t                            }, 0);\n\t                            resolve(r);\n\t                            self._formStopLoading();\n\t                            if (!r.foundAnyError) {\n\t                                self._formLoading();\n\t                                self._handleSubmit(e);\n\t                            }\n\t                        });\n\t                    });\n\t                }\n\t            }, true);\n\t\n\t            this.addEventListener(form, 'reset', function () {\n\t                _this3.removeErrors();\n\t            });\n\t\n\t            // Timeout for keys:\n\t            var TIMEOUT_KEYDOWN,\n\t                KEYDOWN_RUNNING = false;\n\t\n\t            // resets keydown events\n\t            function clearKeyDownTimeout() {\n\t                KEYDOWN_RUNNING = false;\n\t                clearTimeout(TIMEOUT_KEYDOWN);\n\t            }\n\t\n\t            // setup custom realtime event if given\n\t            if (self.options.realtime) {\n\t                this.addEventListener(form, CONST_REALTIME_EVENT, function (e) {\n\t                    if (self._formIsLoading()) {\n\t                        return;\n\t                    }\n\t                    var target = e.target;\n\t                    clearTimeout(TIMEOUT_KEYDOWN);\n\t                    if (KEYDOWN_RUNNING) {\n\t                        return;\n\t                    }\n\t                    TIMEOUT_KEYDOWN = setTimeout(function () {\n\t                        var isStillTarget = document.activeElement === e.target;\n\t                        if (!_checkIsValidRealtimeElement(target)) {\n\t                            return;\n\t                        }\n\t                        if (isStillTarget) {\n\t                            self._handleTooltipInline();\n\t                        }\n\t                        KEYDOWN_RUNNING = true;\n\t                        var dependentFields = self._getDependentFields(target);\n\t                        self._customValidationsForElements(dependentFields).then(function () {\n\t                            self.prepareErrors(dependentFields, false);\n\t                            if (isStillTarget) {\n\t                                self.showAndOrCreateTooltip(e.target);\n\t                            }\n\t                            // future must be resolved before another event can be started\n\t                            KEYDOWN_RUNNING = false;\n\t                        });\n\t                    }, self.options.realtimeTimeout);\n\t                }, true);\n\t            }\n\t\n\t            /**\n\t             * Validates if target is a valid input field to check blur and focus events\n\t             *\n\t             * @param {HTMLElement} target\n\t             * @returns {boolean}\n\t             * @private\n\t             */\n\t            function _checkIsValidBlurFocusElement(target) {\n\t                var attr = target.getAttribute(\"type\");\n\t                return attr !== \"radio\" && attr !== \"checkbox\" && attr !== \"submit\";\n\t            }\n\t\n\t            /**\n\t             * Validates if is valid inline-check element\n\t             * @param {HTMLElement} target\n\t             * @returns {boolean}\n\t             * @private\n\t             */\n\t            function _checkIsValidInlineCheckElement(target) {\n\t                return !target.hasAttribute(ATTR_DISABLE_INLINE);\n\t            }\n\t\n\t            this.addEventListener(form, 'blur', function (e) {\n\t                // do not hide tooltip after change event\n\t                if (!e.target.flexcssKeepTooltips) {\n\t                    self._handleTooltipInline(e.target);\n\t                }\n\t                delete e.target.flexcssKeepTooltips;\n\t            }, true);\n\t\n\t            // handle focus on input elements\n\t            // will show an error if field is invalid\n\t            this.addEventListener(form, \"focus\", function (e) {\n\t                if (self._formIsLoading()) {\n\t                    return;\n\t                }\n\t                // do not track errors for checkbox and radios on focus:\n\t                if (!_checkIsValidBlurFocusElement(e.target)) {\n\t                    return;\n\t                }\n\t                // we need to delay this a little, because Firefox and Safari do not show a tooltip after it\n\t                // just have been hidden (on blur). Maybe fix this with a queue later\n\t                setTimeout(function () {\n\t                    self.showAndOrCreateTooltip(e.target);\n\t                }, FOCUS_TOOLTIP_DELAY);\n\t            }, true);\n\t\n\t            if (self.options.inlineValidation) {\n\t                // Handle change for checkbox, radios and selects\n\t                this.addEventListener(form, \"change\", function (e) {\n\t                    var target = e.target;\n\t                    if (self._formIsLoading() || !_checkIsValidInlineCheckElement(target)) {\n\t                        return;\n\t                    }\n\t                    clearKeyDownTimeout();\n\t                    var name = target.getAttribute('name');\n\t                    var inputs = name ? form.querySelectorAll('[name=\"' + name + '\"]') : [target];\n\t                    // we only support dependent fields for a single widgets right now\n\t                    if (inputs.length === 1) {\n\t                        inputs = self._getDependentFields(target);\n\t                    }\n\t                    self._customValidationsForElements(inputs).then(function () {\n\t                        self.prepareErrors(inputs, false);\n\t                        target.flexcssKeepTooltips = self.showAndOrCreateTooltip(target, true);\n\t                        if (target.flexcssKeepTooltips) {\n\t                            self._handleTooltipHideClickAfterChange();\n\t                        }\n\t                    });\n\t                });\n\t            }\n\t\n\t            // prevent default if form is invalid\n\t            this.addEventListener(form, \"submit\", function listener(e) {\n\t                self._submitListener(e, listener);\n\t            });\n\t\n\t            _Event2.default.dispatchAndFire(form, EVENT_FORM_READY);\n\t        }\n\t\n\t        /* Loading states, unfortunately we can't check if a promise is pending :/*/\n\t        /* TODO: Maybe wrap promise to extend this functionality */\n\t\n\t    }, {\n\t        key: '_formLoading',\n\t        value: function _formLoading() {\n\t            this.getForm().classList.add(LOADING_CLASS);\n\t        }\n\t    }, {\n\t        key: '_formStopLoading',\n\t        value: function _formStopLoading() {\n\t            this.getForm().classList.remove(LOADING_CLASS);\n\t        }\n\t    }, {\n\t        key: '_formIsLoading',\n\t        value: function _formIsLoading() {\n\t            return this.getForm().classList.contains(LOADING_CLASS);\n\t        }\n\t\n\t        // this defines the logic after a change event when a tooltip is shown\n\t        // because we call this method inside the change event, the click would be immeditally executed with the change\n\t        // event when not using setTimeout(). There might be another solution for this...\n\t\n\t    }, {\n\t        key: '_handleTooltipHideClickAfterChange',\n\t        value: function _handleTooltipHideClickAfterChange() {\n\t            var self = this;\n\t            if (this.options.createTooltips) {\n\t                setTimeout(function () {\n\t                    _Util2.default.addEventOnce(_Settings2.default.getTabEvent(), global.document.body, function (t) {\n\t                        if (!self._isElementInvalidElement(t.target)) {\n\t                            self._handleTooltipInline();\n\t                        }\n\t                    });\n\t                }, CLICK_TOOLTIP_DELAY);\n\t            }\n\t        }\n\t    }, {\n\t        key: '_focusElement',\n\t        value: function _focusElement(el) {\n\t            el.focus();\n\t            _Util2.default.scrollToElement(el, this.options.scrollToElementDiff);\n\t        }\n\t\n\t        /**\n\t         * Listener that is executed on form submit\n\t         * @param e\n\t         * @param submitListener\n\t         * @returns {boolean}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_submitListener',\n\t        value: function _submitListener(e, submitListener) {\n\t\n\t            var form = this.getForm(),\n\t                self = this,\n\t                submitEvent = 'submit';\n\t\n\t            if (this._formIsLoading()) {\n\t                e.preventDefault();\n\t                return false;\n\t            }\n\t            this._formLoading();\n\t            form.removeEventListener(submitEvent, submitListener);\n\t            this.removeErrors();\n\t            e.preventDefault();\n\t            // reset:\n\t            if (form.checkValidity()) {\n\t                form.addEventListener(submitEvent, submitListener);\n\t                // It's possible that the form is valid but the custom validations need to be checked again:\n\t                self.currentValidationFuture = new Promise(function (resolve) {\n\t                    var validation = self.validateCustomFields();\n\t                    validation.then(function (r) {\n\t                        // because custom validators may mark multiple fields as invalid, we get all of them in the form\n\t                        var fields = self._getInvalidElements(),\n\t                            errors = self.prepareErrors(fields, false),\n\t                            firstError = errors[0];\n\t                        if (firstError) {\n\t                            self._focusElement(firstError);\n\t                            self.showAndOrCreateTooltip(firstError, true);\n\t                        }\n\t                        resolve(r);\n\t                    });\n\t                });\n\t                self.currentValidationFuture.then(function (r) {\n\t                    if (!r.foundAnyError) {\n\t                        // Handle submitting the form to server:\n\t                        self._handleSubmit(e);\n\t                    } else {\n\t                        self._formStopLoading();\n\t                    }\n\t                });\n\t            } else {\n\t                self._formStopLoading();\n\t                form.addEventListener(submitEvent, submitListener);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Handles submitting, optionally allows to stop submitting\n\t         * @param e\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_handleSubmit',\n\t        value: function _handleSubmit(e) {\n\t            this._submitFunction(this.form, e);\n\t        }\n\t\n\t        /**\n\t         * Registers a global event Handler\n\t         * @param errorFunc\n\t         */\n\t\n\t    }], [{\n\t        key: '_shouldNotValidateField',\n\t        value: function _shouldNotValidateField(field) {\n\t            var target = Form._findErrorTarget(field);\n\t            return target instanceof HTMLFieldSetElement || field.validity === undefined || target.hasAttribute(ATTR_VALIDATE_VISIBILITY) && !_Util2.default.isVisible(target);\n\t        }\n\t\n\t        /**\n\t         * Creates an array from a node list with invalid items\n\t         * This Method expicitly checks if field should not be validated so it can be used to foucs a field\n\t         * @param list\n\t         * @returns {Array}\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_createArrayFromInvalidFieldList',\n\t        value: function _createArrayFromInvalidFieldList(list) {\n\t            var arr = [];\n\t            for (var i = 0; i < list.length; ++i) {\n\t                var n = list[i];\n\t                if (n.validity && !n.validity.valid) {\n\t                    if (!Form._shouldNotValidateField(n)) {\n\t                        arr.push(n);\n\t                    }\n\t                }\n\t            }\n\t            return arr;\n\t        }\n\t    }, {\n\t        key: '_findErrorTarget',\n\t        value: function _findErrorTarget(target) {\n\t            var el = target.getAttribute(ATTR_ERROR_TARGET_ID) || target,\n\t                foundTarget = el instanceof HTMLElement ? el : global.document.getElementById(el);\n\t            if (!foundTarget) {\n\t                throw 'Given error target did not exsits:' + target;\n\t            }\n\t            return foundTarget;\n\t        }\n\t    }, {\n\t        key: 'registerErrorMessageHandler',\n\t        value: function registerErrorMessageHandler(errorFunc) {\n\t            Form.globalErrorMessageHandler = errorFunc;\n\t        }\n\t\n\t        /**\n\t         * Initialize forms for a specific selector\n\t         * @param {String} selector\n\t         * @param {Object} [options]\n\t         * @return {array.<Form>}\n\t         */\n\t\n\t    }, {\n\t        key: 'init',\n\t        value: function init(selector, options) {\n\t            var forms = selector instanceof HTMLElement ? selector.querySelectorAll('form') : document.querySelectorAll(selector),\n\t                instances = [];\n\t            for (var i = 0; i < forms.length; i++) {\n\t                instances.push(new Form(forms[i], options));\n\t            }\n\t            return instances;\n\t        }\n\t\n\t        /**\n\t         * Registers a global validator that is usable on all form instances\n\t         * @param {String} name\n\t         * @param {Function} validator\n\t         * @returns {Function}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerValidator',\n\t        value: function registerValidator(name, validator) {\n\t            Form.globalValidators[name] = validator;\n\t            return Form;\n\t        }\n\t\n\t        /**\n\t         * Registers a global function that is called when a form should validate the response of a server\n\t         * @param {Function} func\n\t         * @returns {Form}\n\t         */\n\t\n\t    }, {\n\t        key: 'registerGlobalRemoteValidationFunction',\n\t        value: function registerGlobalRemoteValidationFunction(func) {\n\t            Form.globalRemoteValidationFunction = func;\n\t            return Form;\n\t        }\n\t    }]);\n\t\n\t    return Form;\n\t}(_DestroyableWidget3.default);\n\t\n\t/**\n\t * Global validators\n\t * @type {Array}\n\t */\n\t\n\tForm.globalValidators = [];\n\t\n\t/**\n\t * Global Remote validation function\n\t */\n\tForm.globalRemoteValidationFunction = function () {};\n\t\n\t/**\n\t * Handles custom error messages extracts custom message by default\n\t */\n\tForm.globalErrorMessageHandler = function (field, validity) {\n\t    if (!validity.customError) {\n\t        var customMsg = field.getAttribute(ATTR_DATA_CUSTOM_MESSAGE);\n\t        if (customMsg) {\n\t            field.setCustomValidity(customMsg);\n\t        }\n\t    }\n\t};\n\t\n\texports.default = Form;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(10);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t(function() {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  var support = {\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob();\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this._initBody(bodyInit)\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers;\n\t  self.Request = Request;\n\t  self.Response = Response;\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return;\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var status = (xhr.status === 1223) ? 204 : xhr.status\n\t        if (status < 100 || status > 599) {\n\t          reject(new TypeError('Network request failed'))\n\t          return\n\t        }\n\t        var options = {\n\t          status: status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})();\n\n\n/***/ },\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Form = __webpack_require__(8);\n\t\n\tvar _Form2 = _interopRequireDefault(_Form);\n\t\n\tvar _Tooltip = __webpack_require__(6);\n\t\n\tvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\t\n\tvar _Settings = __webpack_require__(2);\n\t\n\tvar _Settings2 = _interopRequireDefault(_Settings);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// default export as component object\n\texports.default = {\n\t    Form: _Form2.default,\n\t    Settings: _Settings2.default,\n\t    Tooltip: _Tooltip2.default\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** js/form.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6c686be13fa6b487ca14\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst PFX = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\nconst COL_LEFT_CLASS = 'is-collision-left';\n\nconst COL_RIGHT_CLASS = 'is-collision-right';\n\nconst COL_BOTTOM_CLASS = 'is-collision-bottom';\n\n/**\n * Provides shared DOM-Utility functions\n */\nclass Util {\n\n    /**\n     * Will register the right animation event based on browser\n     * @param element\n     * @param type\n     * @param callback\n     */\n    static prefixedAnimateEvent(element, type, callback) {\n        const thisFunction = function thisFunction(e) {\n            callback.apply(element, [e, thisFunction]);\n        };\n\n        for (let p = 0; p < PFX.length; p++) {\n            let thisType = type;\n            if (!PFX[p]) {\n                thisType = type.toLowerCase();\n            }\n            const name = PFX[p] + thisType;\n            element.addEventListener(name, thisFunction, true);\n        }\n    }\n\n    /**\n     * Get correct transitionend event\n     * @returns {String}\n     * @private\n     */\n    static whichTransitionEndEvent() {\n        let t;\n        const el = document.createElement('fake');\n\n        const transitions = {\n            'transition': 'transitionend',\n            'OTransition': 'oTransitionEnd',\n            'MozTransition': 'transitionend',\n            'WebkitTransition': 'webkitTransitionEnd'\n        };\n\n        for (t in transitions) {\n            if (el.style[t] !== undefined) {\n                return transitions[t];\n            }\n        }\n    }\n\n    /**\n     * Check if target is part of parent node\n     * @param target\n     * @param parent\n     * @returns {boolean}\n     */\n    static isPartOfNode(target, parent) {\n        if (!target || !parent) {\n            return false;\n        }\n        let now = target;\n        while (now !== parent && now !== null) {\n            if (now === parent) {\n                break;\n            }\n            now = now.parentNode;\n        }\n        return now !== null;\n    }\n\n    /**\n     * Walks the tree until func returns true for given argument\n     * @param target\n     * @param func\n     * @returns {boolean|HTMLElement}\n     */\n    static parentsUntil(target, func) {\n        if (!target) {\n            return false;\n        }\n        let now = target;\n        while (!func(now) && now !== null) {\n            now = now.parentNode;\n        }\n\n        return now;\n    }\n\n    /**\n     * Generates a unique id\n     * @return {String}\n     */\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    /**\n     * Detects scrollbar width\n     * @see http://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n     * @returns {number}\n     */\n    static getScrollBarWidth() {\n        const doc = global.document;\n        const inner = doc.createElement('p');\n\n        inner.style.width = \"100%\";\n        inner.style.height = \"200px\";\n\n        const outer = doc.createElement('div');\n        outer.style.position = \"absolute\";\n        outer.style.top = \"0px\";\n        outer.style.left = \"0px\";\n        outer.style.visibility = \"hidden\";\n        outer.style.width = \"200px\";\n        outer.style.height = \"150px\";\n        outer.style.overflow = \"hidden\";\n        outer.appendChild(inner);\n\n        doc.body.appendChild(outer);\n        const w1 = inner.offsetWidth;\n        outer.style.overflow = 'scroll';\n        let w2 = inner.offsetWidth;\n        if (w1 === w2) {\n            w2 = outer.clientWidth;\n        }\n        doc.body.removeChild(outer);\n\n        return (w1 - w2);\n    }\n\n\n    /**\n     * Run an event once\n     * @param {String} ev\n     * @param {HTMLElement|HTMLDocument} target\n     * @param {Function} func\n     * @param {boolean} [capture]\n     * @return Function created listener\n     */\n    static addEventOnce(ev, target, func, capture) {\n        const thisFunction = function thisFunction(event) {\n            func(event, func);\n            target.removeEventListener(ev, thisFunction, capture);\n        };\n        target.addEventListener(ev, thisFunction, capture);\n        return thisFunction;\n    }\n\n    /**\n     * Checks if an element is visible\n     * @param {HTMLElement} element\n     * @returns bool\n     */\n    static isVisible(element) {\n        return element.offsetWidth > 0 && element.offsetHeight > 0;\n    }\n\n    /**\n     * Creates a camelCaseRepresentation of a dashed string\n     * @param {String} str\n     * @returns String\n     */\n    static dashToCamelCase(str) {\n        return str.replace(/-([a-z])/g, (g) => {\n            return g[1].toUpperCase();\n        });\n    }\n\n    /**\n     * Creates a copy of `input`\n     * @param {*} input\n     * @return *\n     */\n    static copy(input) {\n        return JSON.parse(JSON.stringify(input));\n    }\n\n    /**\n     * Reads options from element (data attributes) and applies to base\n     * @param {HTMLElement} element\n     * @param {Object} base\n     * @return {Object}\n     */\n    static applyOptionsFromElement(element, base) {\n        if (!element) {\n            return base;\n        }\n        const attrs = element.attributes;\n        for (let i = 0; i < attrs.length; i++) {\n            const attr = attrs[i];\n            if (attr) {\n                const s = Util.dashToCamelCase(attr.nodeName.replace('data-', ''));\n                const val = attr.nodeValue;\n                if (base.hasOwnProperty(s)) {\n                    // skip functions\n                    if (typeof base[s] === 'function') {\n                        continue;\n                    }\n                    if (typeof base[s] === 'boolean') {\n                        base[s] = parseInt(val || 1, 10) === 1;\n                    } else {\n                        base[s] = val;\n                    }\n                }\n            }\n        }\n        return base;\n    }\n\n    /**\n     * Will position an element directly at given target\n     * Is aware of a given collision container to detect edges\n     * Will put elementToPosition either to left, center or right edge (prefer right)\n     *  and either to bottom or top (prefers bottom)\n     *\n     * You may overwrite preferred positioned with `centerHorizontal` and `positionTop`\n     *\n     * @param {HTMLElement|ClientRect} target the target container to align to\n     * @param {HTMLElement} elementToPosition the element to position\n     * @param {HTMLElement} collisionContainer the outer container to prevent collisions\n     * @param {bool} [centerHorizontal] set true to center element, otherwise it's put on the right border by default\n     * @param {bool} [positionTop] flip top, by default element is positioned to the bottom.\n     * @returns {HTMLElement}\n     */\n    static setupPositionNearby(target, elementToPosition, collisionContainer, centerHorizontal, positionTop) {\n        // determine relative offsets\n        let amountTop = 0;\n        let amountLeft = 0;\n        Util.parentsUntil(target.parentNode, (el) => {\n            if (!(el instanceof HTMLElement)) {\n                return false;\n            }\n            const style = window.getComputedStyle(el);\n            if (Util.isPartOfNode(elementToPosition, el)) {\n                if (style && style.position === 'relative') {\n                    amountTop += el.offsetTop || 0;\n                    amountLeft += el.offsetLeft || 0;\n                }\n                return false;\n            }\n            return true;\n        });\n\n        const targetPosition = target instanceof HTMLElement ? target.getBoundingClientRect() : target;\n        const elementRect = elementToPosition.getBoundingClientRect();\n        const colRect = collisionContainer.getBoundingClientRect();\n        const targetTop = targetPosition.top - amountTop;\n        const targetRight = targetPosition.right;\n        const isCollisionTop = (targetTop - elementRect.height) <= 0;\n        const isCollisionBottom =\n            window.innerHeight < (targetTop + amountTop + targetPosition.height + elementRect.height);\n        const isCollisionLeft = targetRight < elementRect.width;\n        const targetLeft = targetPosition.left;\n        const isCollisionRight = (targetLeft + elementRect.width) > colRect.width;\n        const classList = elementToPosition.classList;\n\n        classList.remove(COL_RIGHT_CLASS);\n        classList.remove(COL_LEFT_CLASS);\n        classList.remove(COL_BOTTOM_CLASS);\n\n        let calcTop;\n        let calcLeft;\n        if (isCollisionLeft && !isCollisionRight) {\n            // put element to left if collision with left\n            calcLeft = (targetPosition.left - colRect.left - amountLeft) + 'px';\n            classList.add(COL_LEFT_CLASS);\n        } else {\n            // maybe center if no collision with either side\n            const rightPosition = (targetRight - elementRect.width - colRect.left - amountLeft) + 'px';\n            const leftCentered = ((targetLeft + targetPosition.width / 2) -\n                    (elementRect.width / 2) || 0) - colRect.left;\n            const collisionCentered = (leftCentered + elementRect.width) > colRect.width;\n            if (centerHorizontal && !collisionCentered) {\n                calcLeft = leftCentered + 'px';\n            } else {\n                classList.add(COL_RIGHT_CLASS);\n                calcLeft = rightPosition;\n            }\n        }\n\n        if (isCollisionBottom || (positionTop && !isCollisionTop)) {\n            // Put Element on top if collision\n            calcTop = (targetTop - elementRect.height) - colRect.top + 'px';\n            classList.add(COL_BOTTOM_CLASS);\n        } else {\n            calcTop = (targetTop + targetPosition.height) - colRect.top + 'px';\n        }\n\n        elementToPosition.style.cssText = `top:${calcTop};left:${calcLeft};`;\n\n        return elementToPosition;\n    }\n\n    /**\n     * Brings a given element into viewport\n     * @param {HTMLElement} el\n     * @param {int|function}[optionalOffset]\n     */\n    static scrollToElement(el, optionalOffset) {\n        el.scrollIntoView();\n        let thisOffset = optionalOffset;\n        // optionally use a additional scrollDif\n        if (thisOffset) {\n            if (typeof thisOffset === 'function') {\n                thisOffset = optionalOffset();\n            }\n            if (thisOffset > 0) {\n                const scrolledY = window.scrollY || window.pageYOffset;\n                if (scrolledY) {\n                    window.scroll(0, scrolledY - thisOffset);\n                }\n            }\n        }\n    }\n}\n\nexport default Util;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/util/Util.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport Util from './Util';\n\n// we attach global settings to global once because settings might be shared a lot of times trough the application\n// Maybe find a better way to handle that scenario\nif (!global.FLEXCSS_GLOBAL_SETTINGS) {\n    global.FLEXCSS_GLOBAL_SETTINGS = {\n        // defined breakpoint for small devices < n\n        smallBreakpoint: 768,\n        // nodes that should be updated when no scrollbar is expected\n        scrollbarUpdateNodes: global.document.body !== null ? [global.document.body] : [],\n        // additional Delay until darkener is fully hidden\n        darkenerFadeDelay: 100,\n        // class that is added if canvas has been toggled\n        canvasToggledClass: 'toggled-canvas'\n    };\n\n    global.FLEXCSS_CONST_IS_IOS = null;\n\n    global.FLEXCSS_CONST_IS_TOUCH = null;\n\n    global.FLEXCSS_CONST_IS_IE = null;\n\n    global.FLEXCSS_CONST_TAB_EVENT = 'click';\n\n    const init = () => {\n        // Measure scrollbar width\n        global.FLEXCSS_CONST_SCROLLBAR_WIDTH = Util.getScrollBarWidth();\n        // detect right transition end event\n        global.FLEXCSS_CONST_TRANSITION_EVENT = Util.whichTransitionEndEvent();\n    };\n\n    if (global.document.readyState !== 'loading') {\n        init();\n    } else {\n        // it's possible that global.document.body is not available if the document is not\n        // loaded completely\n        document.addEventListener('DOMContentLoaded', () => {\n            init();\n        });\n    }\n}\n\n/**\n * Utility class that setups global settings\n */\nclass Settings {\n\n    /**\n     * Setup global settings, overwrite default values\n     * @param {Object} settings\n     */\n    static setup(settings) {\n        Object.assign(global.FLEXCSS_GLOBAL_SETTINGS, settings);\n    }\n\n    /**\n     * Access to global settings\n     * @returns {Object}\n     */\n    static get() {\n        return global.FLEXCSS_GLOBAL_SETTINGS;\n    }\n\n    /**\n     * Detects a IOS Device, caches subsequent calls\n     * @returns {boolean}\n     */\n    static isIosDevice() {\n        if (!global.FLEXCSS_CONST_IS_IOS) {\n            global.FLEXCSS_CONST_IS_IOS = global.navigator.userAgent.match(/(iPad|iPhone|iPod)/i);\n        }\n\n        return global.FLEXCSS_CONST_IS_IOS;\n    }\n\n    /**\n     * Detects a touch device, caches subsequent calls\n     * @returns {boolean}\n     */\n    static isTouchDevice() {\n        if (!global.FLEXCSS_CONST_IS_TOUCH) {\n            global.FLEXCSS_CONST_IS_TOUCH = 'ontouchstart' in window || !!(global.navigator.msMaxTouchPoints);\n        }\n        return global.FLEXCSS_CONST_IS_TOUCH;\n    }\n\n    /**\n     * Checks if current browser is Internet Explorer\n     * @returns {boolean|*}\n     */\n    static isIE() {\n        if (!global.FLEXCSS_CONST_IS_IE) {\n            global.FLEXCSS_CONST_IS_IE = \"ActiveXObject\" in window;\n        }\n        return global.FLEXCSS_CONST_IS_IE;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static getTransitionEvent() {\n        return global.FLEXCSS_CONST_TRANSITION_EVENT;\n    }\n\n    /**\n     * @returns {int}\n     */\n    static getScrollbarWidth() {\n        return global.FLEXCSS_CONST_SCROLLBAR_WIDTH;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static getTabEvent() {\n        return global.FLEXCSS_CONST_TAB_EVENT;\n    }\n}\n\nexport default Settings;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/util/Settings.js\n **/","/* global CustomEvent */\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// polyfill for custom events to make thinks work in IE\n// The needed polyfill is so small that I embedded it here\n(function poly() {\n    if (!global.CustomEvent || typeof global.CustomEvent !== 'function') {\n        const CustomEvent = function CustomEvent(event, params) {\n            let evt;\n            const thisParams = params ||\n                {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: undefined\n                };\n            evt = document.createEvent(\"CustomEvent\");\n            evt.initCustomEvent(event, thisParams.bubbles, thisParams.cancelable, thisParams.detail);\n            return evt;\n        };\n        CustomEvent.prototype = global.Event.prototype;\n        global.CustomEvent = CustomEvent;\n    }\n})();\n/**\n * Simpler Event dispatching\n */\nclass EventHandler {\n\n    /**\n     * @param {HTMLElement} target\n     * @param {String} name\n     */\n    constructor(target, name) {\n        this.target = target;\n        this.defaultOptions = {\n            bubbles: true,\n            cancelable: true\n        };\n\n        this.name = name;\n    }\n\n    /**\n     * Set more options\n     * @param {Object} options\n     * @returns {EventHandler}\n     */\n    withOptions(options) {\n        Object.assign(this.defaultOptions, (options || {}));\n        return this;\n    }\n\n    /**\n     * Call with the originalEvent\n     * @param {Event} e\n     * @returns {EventHandler}\n     */\n    withOriginal(e) {\n        return this.withDetail({\n            originalEvent: e\n        });\n    }\n\n    /**\n     * Extends the detail part of the event\n     * @param {Object} o\n     * @returns {EventHandler}\n     */\n    withDetail(o) {\n        if (!this.defaultOptions.detail) {\n            this.defaultOptions.detail = {};\n        }\n        Object.assign(this.defaultOptions.detail, o);\n        return this;\n    }\n\n    /**\n     * @returns {CustomEvent}\n     */\n    fire() {\n        const e = new CustomEvent(this.name, this.defaultOptions);\n        if (this.target) {\n            this.target.dispatchEvent(e);\n        }\n        return e;\n    }\n}\n\nclass Event {\n    /**\n     * Prepares to dispatch a custom event (without firing)\n     * @param {HTMLElement} target\n     * @param {String} name\n     * @returns {EventHandler}\n     */\n    static dispatch(target, name) {\n        return new EventHandler(target, name);\n    }\n\n    /**\n     * Dispatches a custom event and fires it directly\n     * @param {HTMLElement} target\n     * @param {String} name\n     * @param {Object} [options]\n     * @returns {CustomEvent}\n     */\n    static dispatchAndFire(target, name, options) {\n        return new EventHandler(target, name).withOptions(options).fire();\n    }\n}\n\nexport default Event;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/util/Event.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Provides a Basic Widget\n */\nclass DestroyableWidget {\n\n    constructor() {\n        this.listeners = [];\n    }\n\n    /**\n     * Destroys a Widget\n     */\n    destroy() {\n        this.listeners.forEach((listener) => {\n            listener.element.removeEventListener.apply(listener.element, listener.args);\n        });\n        this.listeners = [];\n    }\n\n    /**\n     * Adds an event and registers it later to remove bindings\n     * @param {HTMLElement} element\n     * @param {String} name\n     * @param {Function} listener\n     * @param {boolean} [capture]\n     * @returns {Function}\n     */\n    addEventListener(element, name, listener, capture) {\n        this.listeners.push({\n            element,\n            args: [name, listener, capture]\n        });\n\n        element.addEventListener(name, listener, capture);\n        return listener;\n    }\n\n}\n\nexport default DestroyableWidget;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/DestroyableWidget.js\n **/","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Tooltip\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\nimport Util from './util/Util';\nimport DestroyableWidget from './DestroyableWidget';\nimport Settings from './util/Settings';\n\n/**\n * @type {string}\n */\nconst CLASS_NAMES_TOOLTIP = 'tooltip-container';\n/**\n * @type {string}\n */\nconst CLASS_NAMES_OPEN = 'open';\n\n/**\n * @type {string}\n */\nconst ATTR_DATA_CLASSNAME = 'data-class';\n\n/**\n * @type {string}\n */\nconst ATTR_DATA_NO_TOUCH = 'data-no-touch';\n\n/**\n * @type {HTMLDocument}\n */\nconst doc = global.document;\n\n/**\n * Simple Tooltip\n */\nclass Tooltip extends DestroyableWidget {\n\n    /**\n     * Creates a Tooltip\n     * @param {HTMLElement|String} DelegateContainer\n     * @param {Object} [options]\n     */\n    constructor(DelegateContainer, options) {\n        super();\n        /**\n         * The Container where possible events are captured\n         */\n        this.container = DelegateContainer instanceof HTMLElement ?\n            DelegateContainer : doc.getElementById(DelegateContainer);\n\n        if (!this.container) {\n            throw new Error('Could not create Tooltip, DelegateContainer not found');\n        }\n\n        /**\n         * The Container where tooltips are stored for this instance\n         * @type {HTMLElement}\n         */\n        this.tooltipContainer = null;\n\n        /**\n         * Default Options\n         */\n        this.options = {\n            containerClass: '',\n            selectorAttribute: 'data-tooltip',\n            collisionContainer: this.container\n        };\n\n        Object.assign(this.options, options || {});\n    }\n\n    /**\n     * Creates and shows a tooltip\n     * @param {HTMLElement} target where is this tooltip positioned\n     * @param {String} text text content in tooltip, will be NOT escaped\n     * @param {Boolean} [removeTitle] removes title element if given\n     * @param {Node} [positionRelative]\n     */\n    createTooltip(target, text, removeTitle, positionRelative) {\n        // abort if text is empty\n        if (!text || text && text.trim() === '') {\n            return;\n        }\n\n        if (Settings.isTouchDevice() && target && target.hasAttribute(ATTR_DATA_NO_TOUCH)) {\n            return;\n        }\n\n        let tooltipContainer = this.tooltipContainer;\n\n        if (!tooltipContainer) {\n            tooltipContainer = doc.createElement('div');\n            this.container.appendChild(tooltipContainer);\n            this.tooltipContainer = tooltipContainer;\n        }\n        this._restoreClassNames(tooltipContainer, target);\n\n        tooltipContainer.style.left = 'auto';\n        tooltipContainer.style.top = 'auto';\n        tooltipContainer.innerHTML = text;\n        tooltipContainer.flexTooltipCurrentTarget = target;\n        if (removeTitle) {\n            target.oldTitle = text;\n            target.removeAttribute('title');\n        }\n\n        Util.setupPositionNearby(positionRelative || target, tooltipContainer,\n            this.options.collisionContainer, true, true);\n\n        tooltipContainer.classList.add(CLASS_NAMES_OPEN);\n    }\n\n    _restoreClassNames(container, target) {\n        // allow additional classname per tooltip on target element\n        const classNames = [CLASS_NAMES_TOOLTIP, this.options.containerClass];\n        const maybeTargetClass = target.getAttribute(ATTR_DATA_CLASSNAME);\n        if (maybeTargetClass) {\n            classNames.push(maybeTargetClass);\n        }\n        container.className = classNames.join(\" \");\n        return this;\n    }\n\n    /**\n     * @returns {HTMLElement|null}\n     */\n    getCurrentTarget() {\n        return this.tooltipContainer ? this.tooltipContainer.flexTooltipCurrentTarget : null;\n    }\n\n    /**\n     * Destroys this Widget\n     * @returns {boolean}\n     */\n    destroy() {\n        super.destroy();\n\n        if (this.tooltipContainer) {\n            this.tooltipContainer.parentNode.removeChild(this.tooltipContainer);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Removes a Tooltip on given target\n     * @param {HTMLElement} [target], if not given will remove current open tooltip on this instance\n     */\n    removeTooltip(target) {\n        let selfTarget = target;\n        if (!selfTarget && this.tooltipContainer) {\n            selfTarget = this.tooltipContainer.flexTooltipCurrentTarget;\n        }\n        if (this.tooltipContainer) {\n            if (this.tooltipContainer.flexTooltipCurrentTarget !== selfTarget) {\n                return;\n            }\n            this.tooltipContainer.classList.remove(CLASS_NAMES_OPEN);\n            delete this.tooltipContainer.flexTooltipCurrentTarget;\n        }\n        if (selfTarget && selfTarget.oldTitle) {\n            selfTarget.setAttribute('title', selfTarget.oldTitle);\n        }\n    }\n\n    /**\n     * Initilizes mouse events on container element\n     */\n    registerEvents() {\n        const self = this;\n        this.addEventListener(this.container, 'mouseover', (e) => {\n            if (e.target.hasAttribute(self.options.selectorAttribute)) {\n                self.createTooltip(e.target, e.target.getAttribute('title'), true);\n            }\n        });\n\n        this.addEventListener(this.container, 'mouseout', (e) => {\n            if (e.target.hasAttribute(self.options.selectorAttribute)) {\n                self.removeTooltip(e.target);\n            }\n        });\n        return this;\n    }\n}\n\nexport default Tooltip;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/Tooltip.js\n **/","/*global HTMLFormElement, fetch, FormData, clearTimeout, NodeList*/\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/*!\n * FlexCss.Form\n * Licensed under the MIT License (MIT)\n * Copyright (c) 2015 David Heidrich, BowlingX <me@bowlingx.com>\n */\n\n'use strict';\n\nimport Tooltip from './Tooltip';\nimport 'isomorphic-fetch';\nimport Event from './util/Event';\nimport Util from './util/Util';\nimport Settings from './util/Settings';\nimport DestroyableWidget from './DestroyableWidget';\n\nconst LOADING_CLASS = 'loading';\nconst DATA_ELEMENT_INVALID = 'data-flexcss-invalid';\nconst REMOTE = 'data-remote';\nconst REMOTE_ACTION = 'data-remote-action';\nconst ATTR_DISABLE_INLINE = 'data-disable-inline-validation';\nconst ATTR_DISABLE_REALTIME = 'data-disable-realtime-validation';\nconst ATTR_VALIDATOR = 'data-validate';\nconst ATTR_DATA_CUSTOM_MESSAGE = 'data-validation-message';\nconst ATTR_DATA_CUSTOM_LABEL = 'data-custom-label';\nconst ATTR_VALIDATE_VISIBILITY = 'data-validate-visibility';\nconst ATTR_ERROR_TARGET_ID = 'data-error-target';\nconst ATTR_DEPENDS = 'data-depends-selector';\nconst CONST_USE_JSON = 'json';\nconst CONST_REALTIME_EVENT = 'input';\nconst FOCUS_TOOLTIP_DELAY = 20;\nconst CLICK_TOOLTIP_DELAY = 150;\n\n/**\n * Triggered when form is fully initialized and handlers are binded\n * @type {string}\n */\nexport const EVENT_FORM_READY = 'flexcss.form.ready';\n/**\n * Fires when a form is submitted, cancelable\n * @type {string}\n */\nexport const EVENT_FORM_SUBMIT = 'flexcss.form.submit';\n/**\n * Fired directly after the form has been submitted via ajax\n * @type {string}\n */\nexport const EVENT_FORM_AFTER_AJAX_SUBMIT = 'flexcss.form.afterAjaxSubmit';\n/**\n * Fired when ajax events did complete\n * @type {string}\n */\nexport const EVENT_FORM_AJAX_COMPLETED = 'flexcss.form.ajaxCompleted';\n\n/**\n * A HTML5 Form Validation replacement\n */\n\nclass Form extends DestroyableWidget {\n    /**\n     * @param {HTMLElement} form\n     * @param [options] optional options\n     */\n    constructor(form, options) {\n        super();\n\n        if (!(form instanceof HTMLFormElement)) {\n            throw 'argument {0} form needs to be an form element';\n        }\n\n        /**\n         * The Form\n         * @type {HTMLElement}\n         */\n        this.form = form;\n\n        /**\n         * @type {Tooltip}\n         */\n        this.tooltips = null;\n\n        /**\n         * @type {Promise}\n         */\n        this.currentValidationFuture = new Promise(() => {\n        });\n\n        /**\n         * Default options\n         * @type {Object}\n         */\n        this.options = {\n            // if true creates tooltips above element, uses FlexCss Tooltips\n            createTooltips: true,\n            // if true appends error message after input element\n            appendError: false,\n            // type of ajax submit\n            ajaxSubmitType: 'POST',\n            // json content type if ajax method is set to json\n            ajaxJsonContentType: 'application/json; charset=utf-8',\n            // allow inline validation\n            inlineValidation: true,\n            // validate in realtime (on `input` event)\n            realtime: true,\n            // timeout when realtime event should be captured\n            realtimeTimeout: 250,\n            // formatting method for an error\n            formatErrorTooltip: (error) => {\n                return '<i class=\"icon-attention\"></i> ' + error;\n            },\n            // the class that will be put on the element to mark it failed validation\n            inputErrorClass: 'invalid',\n            // the container class for error messages below an element\n            containerErrorClass: 'form-error',\n            // additional options for fetch\n            fetchOptions: {\n                credentials: 'include'\n            },\n            // the container for tooltips\n            tooltipContainer: form,\n            tooltipOptions: {\n                containerClass: 'error-tooltip'\n            },\n            // if you have a fixed header, either set a number or function here\n            scrollToElementDiff: 0\n        };\n\n        // overwrite default options\n        Object.assign(this.options, options);\n\n        // apply settings from attributes\n        Util.applyOptionsFromElement(form, this.options);\n\n        // set form class as widget\n        // Forms are very different to classical widgets,\n        // we will not use our base widget class for this but just self\n        form.hfWidgetInstance = this;\n\n        /**\n         * A List of Validators\n         * @type {Object}\n         * @private\n         */\n        this._validators = Form.globalValidators;\n\n        /**\n         * @type {Function}\n         * @private\n         */\n        this._remoteValidationFunction = null;\n\n        this.initFormValidation();\n    }\n\n    destroy() {\n        super.destroy();\n        if (this.tooltips) {\n            this.tooltips.destroy();\n        }\n    }\n\n    /**\n     * Submits this form, either via ajax or just classical (default)\n     * @param {HTMLFormElement} thisForm\n     * @param {Event} e\n     * @private\n     * @returns {Promise|boolean} returns false if submit is cancled\n     */\n    _submitFunction(thisForm, e) {\n        var shouldUseAjax = thisForm.getAttribute(REMOTE), ajaxPostUrl =\n                thisForm.getAttribute(REMOTE_ACTION) ||\n                thisForm.getAttribute('action') || window.location.href,\n            useJson = CONST_USE_JSON === shouldUseAjax, self = this;\n\n        var ev = Event.dispatch(thisForm, EVENT_FORM_SUBMIT).withOriginal(e).fire();\n\n        // abort execution is event was prevented\n        if (ev.defaultPrevented) {\n            self._formStopLoading();\n            return false;\n        }\n\n        if (shouldUseAjax === null) {\n            // submit\n            return thisForm.submit();\n        }\n        // prevent form from submit normally\n        e.preventDefault();\n\n        // add information that this is an XMLHttpRequest request (used by some frameworks)\n        let defaultHeaders = {\n            'X-Requested-With': 'XMLHttpRequest'\n        };\n\n        // setup default headers\n        if (useJson) {\n            Object.assign(defaultHeaders, {\n                'Content-Type': this.options.ajaxJsonContentType\n            });\n        }\n        let defaultOptions = Object.assign(this.options.fetchOptions, {\n            headers: defaultHeaders,\n            method: this.options.ajaxSubmitType\n        });\n\n        // support either JSON request payload or normal payload submission\n        var serverCall = useJson ? fetch(ajaxPostUrl, Object.assign(defaultOptions, {\n            body: JSON.stringify(this.serialize())\n        })) : fetch(ajaxPostUrl, Object.assign(defaultOptions, {\n            body: new FormData(thisForm)\n        }));\n\n        Event.dispatch(thisForm, EVENT_FORM_AFTER_AJAX_SUBMIT).withOriginal(e).fire();\n\n        return serverCall.then((r) => {\n            (self._remoteValidationFunction || Form.globalRemoteValidationFunction).apply(self, [r]);\n\n            Event.dispatch(thisForm, EVENT_FORM_AJAX_COMPLETED).withOriginal(e).withDetail({ response: r }).fire();\n            // always remove error class\n            self._formStopLoading();\n        });\n    }\n\n    /**\n     * Serializes a form to a json object\n     * @returns {Object}\n     */\n    serialize() {\n        var selectors = [\n                'input[name]:not([type=\"radio\"]):enabled',\n                'input[type=\"radio\"][name]:checked',\n                'select[name]:enabled',\n                'textarea[name]:enabled'\n            ], inputs = this.form.querySelectorAll(selectors.join(',')), result = {};\n\n        Array.prototype.forEach.call(inputs, function (input) {\n            var exists = result[input.name], value = input.value;\n            if (exists instanceof Array) {\n                exists.push(value);\n            } else if (exists) {\n                result[input.name] = [result[input.name], value];\n            } else {\n                result[input.name] = value;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Handles the chain of validation on given fields\n     *\n     * @param {HTMLElement|Array|NodeList} field\n     * @param [focus] optional focus first error\n     * @returns {Promise}\n     */\n    handleValidation(field, focus) {\n        var fields = (field instanceof Array || field instanceof NodeList) ? field : [field];\n        return this._handleValidation(fields, focus, true).then(((r) => {\n            if (!r.foundAnyError) {\n                // remove tooltips\n                if (this.tooltips) {\n                    this.tooltips.removeTooltip();\n                }\n            }\n            return r;\n        }).bind(this));\n    }\n\n    /**\n     * Handles errors on given node list\n     * @param {NodeList} toValidateFields\n     * @param {boolean} focus\n     * @param {boolean} scoped if true, will only validate the fields `invalidFields`\n     * @returns {Promise}\n     * @private\n     */\n    _handleValidation(toValidateFields, focus, scoped) {\n        var self = this;\n        var arr = Form._createArrayFromInvalidFieldList(toValidateFields), isLocalInvalid = arr.length > 0;\n        // focus must appear in the same frame for iOS devices\n        if (isLocalInvalid && focus) {\n            self._focusElement(arr[0]);\n        }\n        var validation = scoped ? this._customValidationsForElements(toValidateFields) :\n            self.validateCustomFields();\n        return validation.then((r) => {\n            if (isLocalInvalid) {\n                // combine browser and custom validators\n                r.foundAnyError = true;\n            }\n            // get a unique field list of all fields that need to be checked and rendered\n            // it's possible that we have duplicates in non scoped mode\n            let thisToValidateFields = scoped ? toValidateFields :\n                Array.from(arr).concat(r.checkedFields);\n            r.checkedFields = thisToValidateFields;\n            let foundInvalidFields = self.prepareErrors(thisToValidateFields, false),\n                firstInvalidField = foundInvalidFields[0];\n            if (firstInvalidField) {\n                if (focus) {\n                    self._focusElement(firstInvalidField);\n                    // if element could not be focused:\n                    if (document.activeElement !== firstInvalidField) {\n                        self._handleTooltipHideClickAfterChange();\n                    }\n                } else {\n                    self._handleTooltipHideClickAfterChange();\n                }\n                self.showAndOrCreateTooltip(firstInvalidField);\n            }\n            return r;\n        });\n    }\n\n    /**\n     * @param {HTMLElement} field\n     * @param {ValidityState} validity\n     * @returns {*}\n     * @private\n     */\n\n    _setupErrorMessages(field, validity) {\n        return Form.globalErrorMessageHandler ?\n            Form.globalErrorMessageHandler.apply(this, [field, validity]) : false;\n    }\n\n    /**\n     * Handles class labels for elements\n     * @param {Object} fields\n     * @private\n     */\n    _handleLabels(fields) {\n        Object.keys(fields).forEach(function (id) {\n            let labels = this.getForm().querySelectorAll('[for=\"' + id + '\"]'), invalid = fields[id];\n            if (labels.length) {\n                for (let labelsIndex = 0; labelsIndex < labels.length; labelsIndex++) {\n                    let labelEl = labels[labelsIndex];\n                    // we can't use toggle attribute, not supported in IE\n                    if (invalid) {\n                        this._markElementInvalid(labelEl);\n                    } else {\n                        this._markElementValid(labelEl);\n                    }\n                }\n            }\n        }.bind(this));\n    }\n\n    /**\n     * @param el\n     * @private\n     */\n    _markElementInvalid(el) {\n        el.setAttribute(DATA_ELEMENT_INVALID, \"true\");\n        el.classList.add(this.options.inputErrorClass);\n    }\n\n    /**\n     * @param el\n     * @private\n     */\n    _markElementValid(el) {\n        el.removeAttribute(DATA_ELEMENT_INVALID);\n        el.classList.remove(this.options.inputErrorClass);\n    }\n\n    /**\n     * A List of invalid elements (:invalid)\n     * @returns {Array}\n     * @private\n     */\n    _getInvalidElements() {\n        return Array.prototype.filter.call(this.getForm().querySelectorAll(\":invalid\"), function (r) {\n            return !(r instanceof HTMLFieldSetElement);\n        });\n    }\n\n    /**\n     * @param {HTMLElement} thisParent\n     * @private\n     */\n    _removeElementErrors(thisParent) {\n        let errors = thisParent.querySelectorAll('.' + this.options.containerErrorClass), inputsWithErrorClasses =\n            thisParent.querySelectorAll(`[${DATA_ELEMENT_INVALID}]`);\n        for (let elementErrorIndex = 0; elementErrorIndex < errors.length; elementErrorIndex++) {\n            errors[elementErrorIndex].parentNode.removeChild(errors[elementErrorIndex]);\n        }\n        for (let inputErrorIndex = 0; inputErrorIndex < inputsWithErrorClasses.length; inputErrorIndex++) {\n            let el = inputsWithErrorClasses[inputErrorIndex];\n            this._markElementValid(el);\n        }\n    }\n\n\n    /**\n     * Registers a custom validator\n     * @param {String} name\n     * @param {Function} validator a validation function should always return either a Future(true) or Future(false)\n     * even when the field has been invalidated with `setCustomValidity`, because of different browser `bugs`\n     * we can't rely on that\n     * @returns {Form}\n     */\n    registerValidator(name, validator) {\n        this._validators[name] = validator;\n        return this;\n    }\n\n    /**\n     * Runs async validation\n     * @param {String} validationRef\n     * @param {HTMLElement} field\n     * @returns {Promise}\n     * @private\n     */\n    _runValidation(validationRef, field) {\n        if (!this._validators[validationRef]) {\n            throw 'Could not found validator: ' + validationRef;\n        }\n        var cl = field.classList, future = this._validators[validationRef].apply(this, [field, this.form]);\n        cl.add(LOADING_CLASS);\n        future.then(() => {\n            cl.remove(LOADING_CLASS);\n        });\n        return future;\n    }\n\n\n    /**\n     * Run custom validations for elements, validations are done async do support XHR Requests or other stuff\n     *\n     * @param {Array|NodeList} fields\n     * @returns {Promise} contains either true if validations passed or false if something went wrong\n     * @private\n     */\n    _customValidationsForElements(fields) {\n        var futures = [], fieldsLength = fields.length, checkedFields = [];\n        for (var iVal = 0; iVal < fieldsLength; iVal++) {\n            var field = fields[iVal], validationRef = field.getAttribute(ATTR_VALIDATOR), validity = field.validity;\n            if (this._validators[validationRef]) {\n                // use local validation first and then continue with custom validations\n                if (Form._shouldNotValidateField(field) || (validity && !validity.customError && !validity.valid)) {\n                    continue;\n                }\n                checkedFields.push(field);\n                futures.push(this._runValidation(validationRef, field));\n            } else {\n                if (validationRef) {\n                    console.warn('data-validate was set but no validator was found');\n                }\n            }\n        }\n        return Promise.all(futures).then(function (allFutures) {\n            let l = allFutures.length;\n            let result = {\n                checkedFields: checkedFields,\n                foundAnyError: false\n            };\n            for (var fI = 0; fI < l; fI++) {\n                if (!allFutures[fI]) {\n                    result.foundAnyError = true;\n                    break;\n                }\n            }\n            return result;\n        });\n    }\n\n    /**\n     * Remove all errors for this form\n     * @returns {Form}\n     */\n    removeErrors() {\n        this._removeElementErrors(this.form);\n        if (this.tooltips) {\n            this.tooltips.removeTooltip();\n        }\n        return this;\n    }\n\n    /**\n     * Will handle errors for given fields\n     * @param {Array|NodeList} fields\n     * @param {Boolean} removeAllErrors\n     */\n    prepareErrors(fields, removeAllErrors) {\n        if (removeAllErrors) {\n            this.removeErrors();\n        }\n        let labelGroups = {}, invalidFields = [];\n\n        function handleAdditionalLabels(isInvalid, thisLabelGroup, field) {\n            let additionalLabels = field.getAttribute(ATTR_DATA_CUSTOM_LABEL) ||\n                field.id, group = thisLabelGroup[additionalLabels];\n            if (additionalLabels) {\n                // check additionally if field is currently marked as invalid\n                // so the label is not marked as error if no field is marked as one\n                group = group ? group : isInvalid;\n                thisLabelGroup[additionalLabels] = group;\n            }\n        }\n\n        // We save all validations in an extra property because we need to reset the validity due some\n        // implementation errors in other browsers then chrome\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i], errorTarget = Form._findErrorTarget(field), parent = errorTarget.parentNode,\n                validity = field.validity, isInvalid = validity && !validity.valid;\n            if (Form._shouldNotValidateField(field)) {\n                continue;\n            }\n            field.flexFormsSavedValidity = JSON.parse(JSON.stringify(validity));\n            handleAdditionalLabels(isInvalid, labelGroups, field);\n            if (isInvalid) {\n                if (!removeAllErrors) {\n                    // Remove current errors:\n                    this._removeElementErrors(parent);\n                }\n                // setup custom error messages:\n                this._setupErrorMessages(field, validity);\n                let msg = field.validationMessage;\n\n                // mark fields as invalid\n                this._markElementInvalid(errorTarget);\n                this._markElementInvalid(field);\n\n                if (this.options.appendError) {\n                    parent.insertAdjacentHTML(\"beforeend\",\n                        `<div class=\"${this.options.containerErrorClass}\">${msg}</div>`);\n                }\n                invalidFields.push(field);\n                field.flexFormsSavedValidationMessage = msg;\n            } else {\n                // restore invalid fields\n                this._markElementValid(errorTarget);\n                this._markElementValid(field);\n\n                // cleanup\n                delete field.flexFormsSavedValidationMessage;\n\n                // remove error markup\n                this._removeElementErrors(parent);\n            }\n            // We have to reset the custom validity here to allow native validations work again\n            field.setCustomValidity('');\n        }\n        // if validates a single field we need to check the linked fields to a label:\n        if (fields.length === 1) {\n            let field = fields[0];\n            let id = field.getAttribute(ATTR_DATA_CUSTOM_LABEL) || field.id;\n            if (id) {\n                let linkedFields = Array.from(\n                    this.getForm().querySelectorAll(`[${ATTR_DATA_CUSTOM_LABEL}=\"${id}\"], #${id}`));\n                linkedFields.forEach(function (thisField) {\n                    let validity = thisField.validity, isInvalid = validity && !validity.valid &&\n                        this._isElementInvalidElement(thisField);\n                    handleAdditionalLabels(isInvalid, labelGroups, thisField);\n                }.bind(this));\n            }\n        }\n        this._handleLabels(labelGroups);\n        return invalidFields;\n    }\n\n    /**\n     * Validates all custom fields\n     * @returns {Promise}\n     */\n    validateCustomFields() {\n        return this._customValidationsForElements(\n            this.form.querySelectorAll(\"[data-validate]\"));\n    }\n\n    /**\n     * Tests if a field should be validated\n     * @param {HTMLElement} field\n     * @returns {boolean}\n     * @private\n     */\n    static _shouldNotValidateField(field) {\n        var target = Form._findErrorTarget(field);\n        return target instanceof HTMLFieldSetElement || field.validity === undefined ||\n            (target.hasAttribute(ATTR_VALIDATE_VISIBILITY) && !Util.isVisible(target));\n    }\n\n    /**\n     * Creates an array from a node list with invalid items\n     * This Method expicitly checks if field should not be validated so it can be used to foucs a field\n     * @param list\n     * @returns {Array}\n     * @private\n     */\n    static _createArrayFromInvalidFieldList(list) {\n        var arr = [];\n        for (var i = 0; i < list.length; ++i) {\n            var n = list[i];\n            if (n.validity && !n.validity.valid) {\n                if (!Form._shouldNotValidateField(n)) {\n                    arr.push(n);\n                }\n            }\n        }\n        return arr;\n    }\n\n\n    /**\n     * This form\n     * @returns {HTMLElement}\n     */\n    getForm() {\n        return this.form;\n    }\n\n    /**\n     * Registers a function that handles remote validation\n     * @param {Function} func\n     * @returns {Form}\n     */\n    registerRemoteValidation(func) {\n        this._remoteValidationFunction = func;\n        return this;\n    }\n\n\n    /**\n     * Formats the error content for the tooltip\n     * @param {String} error\n     * @returns {String}\n     * @private\n     */\n    _formatErrorTooltip(error) {\n        return this.options.formatErrorTooltip.apply(this, [error]);\n    }\n\n    /**\n     * Tries to find a custom error target on given target\n     * @param target\n     * @returns {HTMLElement}\n     * @private\n     */\n    static _findErrorTarget(target) {\n        var el = target.getAttribute(ATTR_ERROR_TARGET_ID) || target,\n            foundTarget = el instanceof HTMLElement ? el : global.document.getElementById(el);\n        if (!foundTarget) {\n            throw 'Given error target did not exsits:' + target;\n        }\n        return foundTarget;\n    }\n\n    /**\n     * Creates a tooltip at given element, will only create a new instance if not created\n     * @param {HTMLElement} target\n     * @param {Boolean} [remove]\n     */\n    showAndOrCreateTooltip(target, remove) {\n        var self = this;\n        if (!this.tooltips && this.options.createTooltips) {\n            this.tooltips = new Tooltip(this.options.tooltipContainer, this.options.tooltipOptions);\n        }\n        if (!this.options.createTooltips) {\n            return false;\n        }\n\n        if (!target.flexFormsSavedValidity) {\n            return false;\n        }\n        var errorTarget = Form._findErrorTarget(target);\n        if (!target.flexFormsSavedValidity.valid && self._isElementInvalidElement(errorTarget)) {\n            self.tooltips.createTooltip(errorTarget,\n                self._formatErrorTooltip(target.flexFormsSavedValidationMessage), false);\n            return true;\n        } else {\n            if (remove) {\n                self.tooltips.removeTooltip();\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Checks if element is marked as invalid\n     * @param {HTMLElement} el\n     * @returns {boolean}\n     * @private\n     */\n    _isElementInvalidElement(el) {\n        return el.hasAttribute(DATA_ELEMENT_INVALID);\n    }\n\n    /**\n     * Handles invalid event of a form\n     * @param {Event} e\n     * @returns {Promise|boolean}\n     * @private\n     */\n    _checkIsInvalid(e) {\n        e.preventDefault();\n        var invalidFields = this.getForm().querySelectorAll(\":invalid\");\n        return this._handleValidation(invalidFields, true, false);\n    }\n\n    /**\n     * Will query dependent fields (by selector) that should be validated with given field\n     * @param field\n     * @returns {NodeList|[]}\n     * @private\n     */\n    _getDependentFields(field) {\n        let fieldSelector = field.getAttribute(ATTR_DEPENDS), base = [field];\n        if (fieldSelector) {\n            base.push.apply(base, Array.prototype.slice.apply(\n                this.getForm().querySelectorAll(fieldSelector)));\n        }\n        return base;\n    }\n\n    /**\n     * @private\n     * @param {HTMLElement} [target]\n     */\n    _handleTooltipInline(target) {\n        if (this.tooltips) {\n            this.tooltips.removeTooltip(target);\n        }\n    }\n\n    /**\n     * Initializes validation for a given form, registers event handlers\n     */\n    initFormValidation() {\n        // Suppress the default bubbles\n        var form = this.getForm(),\n            self = this,\n            invalidEvent = 'invalid';\n\n        /**\n         * Validates if is valid realtime element\n         * @param {HTMLElement} target\n         * @returns {boolean}\n         * @private\n         */\n        function _checkIsValidRealtimeElement(target) {\n            return !target.hasAttribute(ATTR_DISABLE_REALTIME) && !target.hasAttribute(ATTR_DISABLE_INLINE);\n        }\n\n        form.addEventListener(invalidEvent, function (e) {\n            e.preventDefault();\n        }, true);\n\n        Util.addEventOnce(invalidEvent, form, function handleInvalid(e) {\n            self._formLoading();\n            var result = self._checkIsInvalid(e);\n            if (result) {\n                self.currentValidationFuture = new Promise((resolve) => {\n                    result.then(function (r) {\n                        setTimeout(function () {\n                            Util.addEventOnce(invalidEvent, form, handleInvalid, true);\n                        }, 0);\n                        resolve(r);\n                        self._formStopLoading();\n                        if (!r.foundAnyError) {\n                            self._formLoading();\n                            self._handleSubmit(e);\n                        }\n                    });\n                });\n            }\n        }, true);\n\n        this.addEventListener(form, 'reset', () => {\n            this.removeErrors();\n        });\n\n        // Timeout for keys:\n        var TIMEOUT_KEYDOWN, KEYDOWN_RUNNING = false;\n\n        // resets keydown events\n        function clearKeyDownTimeout() {\n            KEYDOWN_RUNNING = false;\n            clearTimeout(TIMEOUT_KEYDOWN);\n        }\n\n        // setup custom realtime event if given\n        if (self.options.realtime) {\n            this.addEventListener(form, CONST_REALTIME_EVENT, function (e) {\n                if (self._formIsLoading()) {\n                    return;\n                }\n                var target = e.target;\n                clearTimeout(TIMEOUT_KEYDOWN);\n                if (KEYDOWN_RUNNING) {\n                    return;\n                }\n                TIMEOUT_KEYDOWN = setTimeout(() => {\n                    let isStillTarget = document.activeElement === e.target;\n                    if (!_checkIsValidRealtimeElement(target)) {\n                        return;\n                    }\n                    if (isStillTarget) {\n                        self._handleTooltipInline();\n                    }\n                    KEYDOWN_RUNNING = true;\n                    let dependentFields = self._getDependentFields(target);\n                    self._customValidationsForElements(dependentFields).then(function () {\n                        self.prepareErrors(dependentFields, false);\n                        if (isStillTarget) {\n                            self.showAndOrCreateTooltip(e.target);\n                        }\n                        // future must be resolved before another event can be started\n                        KEYDOWN_RUNNING = false;\n                    });\n                }, self.options.realtimeTimeout);\n            }, true);\n        }\n\n        /**\n         * Validates if target is a valid input field to check blur and focus events\n         *\n         * @param {HTMLElement} target\n         * @returns {boolean}\n         * @private\n         */\n        function _checkIsValidBlurFocusElement(target) {\n            let attr = target.getAttribute(\"type\");\n            return (attr !== \"radio\" && attr !== \"checkbox\" && attr !== \"submit\");\n        }\n\n        /**\n         * Validates if is valid inline-check element\n         * @param {HTMLElement} target\n         * @returns {boolean}\n         * @private\n         */\n        function _checkIsValidInlineCheckElement(target) {\n            return !target.hasAttribute(ATTR_DISABLE_INLINE);\n        }\n\n        this.addEventListener(form, 'blur', function (e) {\n            // do not hide tooltip after change event\n            if (!e.target.flexcssKeepTooltips) {\n                self._handleTooltipInline(e.target);\n            }\n            delete e.target.flexcssKeepTooltips;\n        }, true);\n\n        // handle focus on input elements\n        // will show an error if field is invalid\n        this.addEventListener(form, \"focus\", function (e) {\n            if (self._formIsLoading()) {\n                return;\n            }\n            // do not track errors for checkbox and radios on focus:\n            if (!_checkIsValidBlurFocusElement(e.target)) {\n                return;\n            }\n            // we need to delay this a little, because Firefox and Safari do not show a tooltip after it\n            // just have been hidden (on blur). Maybe fix this with a queue later\n            setTimeout(function () {\n                self.showAndOrCreateTooltip(e.target);\n            }, FOCUS_TOOLTIP_DELAY);\n        }, true);\n\n        if (self.options.inlineValidation) {\n            // Handle change for checkbox, radios and selects\n            this.addEventListener(form, \"change\", function (e) {\n                const target = e.target;\n                if (self._formIsLoading() || !_checkIsValidInlineCheckElement(target)) {\n                    return;\n                }\n                clearKeyDownTimeout();\n                const name = target.getAttribute('name');\n                let inputs = name ? form.querySelectorAll('[name=\"' + name + '\"]') : [target];\n                // we only support dependent fields for a single widgets right now\n                if (inputs.length === 1) {\n                    inputs = self._getDependentFields(target);\n                }\n                self._customValidationsForElements(inputs).then(function () {\n                    self.prepareErrors(inputs, false);\n                    target.flexcssKeepTooltips = self.showAndOrCreateTooltip(target, true);\n                    if (target.flexcssKeepTooltips) {\n                        self._handleTooltipHideClickAfterChange();\n                    }\n                });\n            });\n        }\n\n        // prevent default if form is invalid\n        this.addEventListener(form, \"submit\", function listener(e) {\n            self._submitListener(e, listener);\n        });\n\n        Event.dispatchAndFire(form, EVENT_FORM_READY);\n    }\n\n    /* Loading states, unfortunately we can't check if a promise is pending :/*/\n    /* TODO: Maybe wrap promise to extend this functionality */\n\n    _formLoading() {\n        this.getForm().classList.add(LOADING_CLASS);\n    }\n\n    _formStopLoading() {\n        this.getForm().classList.remove(LOADING_CLASS);\n    }\n\n    _formIsLoading() {\n        return this.getForm().classList.contains(LOADING_CLASS);\n    }\n\n    // this defines the logic after a change event when a tooltip is shown\n    // because we call this method inside the change event, the click would be immeditally executed with the change\n    // event when not using setTimeout(). There might be another solution for this...\n    _handleTooltipHideClickAfterChange() {\n        const self = this;\n        if (this.options.createTooltips) {\n            setTimeout(function () {\n                Util.addEventOnce(Settings.getTabEvent(), global.document.body, function (t) {\n                    if (!self._isElementInvalidElement(t.target)) {\n                        self._handleTooltipInline();\n                    }\n                });\n            }, CLICK_TOOLTIP_DELAY);\n        }\n    }\n\n    _focusElement(el) {\n        el.focus();\n        Util.scrollToElement(el, this.options.scrollToElementDiff);\n    }\n\n    /**\n     * Listener that is executed on form submit\n     * @param e\n     * @param submitListener\n     * @returns {boolean}\n     * @private\n     */\n    _submitListener(e, submitListener) {\n\n        const form = this.getForm(),\n            self = this,\n            submitEvent = 'submit';\n\n        if (this._formIsLoading()) {\n            e.preventDefault();\n            return false;\n        }\n        this._formLoading();\n        form.removeEventListener(submitEvent, submitListener);\n        this.removeErrors();\n        e.preventDefault();\n        // reset:\n        if (form.checkValidity()) {\n            form.addEventListener(submitEvent, submitListener);\n            // It's possible that the form is valid but the custom validations need to be checked again:\n            self.currentValidationFuture = new Promise((resolve) => {\n                var validation = self.validateCustomFields();\n                validation.then(function (r) {\n                    // because custom validators may mark multiple fields as invalid, we get all of them in the form\n                    var fields = self._getInvalidElements(),\n                        errors = self.prepareErrors(fields, false), firstError = errors[0];\n                    if (firstError) {\n                        self._focusElement(firstError);\n                        self.showAndOrCreateTooltip(firstError, true);\n                    }\n                    resolve(r);\n                });\n            });\n            self.currentValidationFuture.then(function (r) {\n                if (!r.foundAnyError) {\n                    // Handle submitting the form to server:\n                    self._handleSubmit(e);\n                } else {\n                    self._formStopLoading();\n                }\n            });\n        } else {\n            self._formStopLoading();\n            form.addEventListener(submitEvent, submitListener);\n        }\n    }\n\n\n    /**\n     * Handles submitting, optionally allows to stop submitting\n     * @param e\n     * @private\n     */\n    _handleSubmit(e) {\n        this._submitFunction(this.form, e);\n    }\n\n\n    /**\n     * Registers a global event Handler\n     * @param errorFunc\n     */\n    static registerErrorMessageHandler(errorFunc) {\n        Form.globalErrorMessageHandler = errorFunc;\n    }\n\n    /**\n     * Initialize forms for a specific selector\n     * @param {String} selector\n     * @param {Object} [options]\n     * @return {array.<Form>}\n     */\n    static init(selector, options) {\n        var forms = selector instanceof HTMLElement ? selector.querySelectorAll('form') :\n            document.querySelectorAll(selector), instances = [];\n        for (var i = 0; i < forms.length; i++) {\n            instances.push(new Form(forms[i], options));\n        }\n        return instances;\n    }\n\n\n    /**\n     * Registers a global validator that is usable on all form instances\n     * @param {String} name\n     * @param {Function} validator\n     * @returns {Function}\n     */\n    static registerValidator(name, validator) {\n        Form.globalValidators[name] = validator;\n        return Form;\n    }\n\n    /**\n     * Registers a global function that is called when a form should validate the response of a server\n     * @param {Function} func\n     * @returns {Form}\n     */\n    static registerGlobalRemoteValidationFunction(func) {\n        Form.globalRemoteValidationFunction = func;\n        return Form;\n    }\n}\n\n\n/**\n * Global validators\n * @type {Array}\n */\nForm.globalValidators = [];\n\n/**\n * Global Remote validation function\n */\nForm.globalRemoteValidationFunction = function () {\n};\n\n/**\n * Handles custom error messages extracts custom message by default\n */\nForm.globalErrorMessageHandler = (field, validity) => {\n    if (!validity.customError) {\n        let customMsg = field.getAttribute(ATTR_DATA_CUSTOM_MESSAGE);\n        if (customMsg) {\n            field.setCustomValidity(customMsg);\n        }\n    }\n};\n\nexport default Form;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/Form.js\n **/","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isomorphic-fetch/fetch-npm-browserify.js\n ** module id = 9\n ** module chunks = 0 1\n **/","(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 10\n ** module chunks = 0 1\n **/","'use strict';\n\nimport Form from '../Form';\nimport Tooltip from '../Tooltip';\nimport Settings from '../util/Settings';\n\n// default export as component object\nexport default {\n    Form,\n    Settings,\n    Tooltip\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main/modules/Form.js\n **/"],"sourceRoot":""}