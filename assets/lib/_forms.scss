// Fixme: Split this file
/**
* Forms
*/
form {
  position: relative;
}

.control-group {
  display: flex;
  flex-direction: column;

  p {
    margin-bottom: 0;
    font-size: $copyTextFormsFontSize;
    line-height: $copyTextFormsLineHeight;

    & + p {
      margin-top: $copyTextFormsMultipleMarginTop;
    }
  }

  .controls {
    margin-bottom: $controlMargin;
    position: relative;
    p {
      margin: $labelMargin 0 0 0;
      font-size: $copyTextFormsFontSize;
      color: $grayColor;
      a {
        @include link-color();
      }
    }
  }

  &.tight, &:last-of-type {
    .controls {
      margin-bottom: 0;
    }
  }
}

legend {
  font-size: $legendFontSize;
  font-weight: $legendFontWeight;
  color: $legendColor;
  margin-bottom: 2rem;
}

.control-group > label, .control-group > .label{
  &:not(.checkbox) {
    font-size: $labelFontSize;
    color: $labelColor;
    margin-bottom: $labelMargin;
    display: block;
  }
}

fieldset {
  border: none;
  padding: 0 0 $formMargin 0;
  border-bottom: 1px solid $globalBorderColor;
  margin-bottom: $formMargin;
  margin-left: 0;
  margin-right: 0;
  &:last-of-type {
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
}

form.loading {
  button[type="submit"], input[type="submit"] {
    @include loadingContainer();
  }
}

@mixin inputs() {
  .input, select, textarea,
  input:not([type="submit"]):not([type="radio"]):not([type="checkbox"]) {
    @content;
  }
}

// Basic form and input types
@include inputs() {
  background-color: $inputBackground;
  border: $inputBorder;
  font-size: $inputFontSize;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  // disable default browser style
  -webkit-appearance: none;
  appearance: none;
  -o-appearance: none;
  -moz-appearance: none;

  border-radius: $globalRadius;
  color: $baseColor;
  display: block;
  padding: $inputPadding;
  width: 100%;
  max-width: 100%;
  will-change: background-color, box-shadow;
  text-overflow: ellipsis;
  height: $inputHeight;
  box-shadow: $inputBoxShadow;
  transition: $inputTransitions;

  &:focus {
    background-color: $inputFocusColor;
    border-color:$inputFocusBorderColor !important;
    box-shadow: $inputFocusBoxShadow !important;
    outline: none;
  }

  &.uneditable-input {
    overflow: hidden;
    text-overflow: ellipsis;
    word-wrap: break-word;
    height: auto;
    padding: $uneditableInputPadding;
    min-height: $inputHeight;
  }

  &.uneditable-input,
  &[disabled],
  &.disabled {
    background: $inputDisabledBg;
    color: $inputDisabledColor;
    cursor: not-allowed;
    border-color: $inputDisabledBorder;
    &:not(.copyable) {
      @include interface();
    }

  }

  &.copyable {
    cursor: copy;
  }

  /**
  * Placeholder
  */
  &::-webkit-input-placeholder {
    /* WebKit browsers */
    color: $placeholderColor;
    font-style: normal;
    font-weight: normal;
  }

  &:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    color: $placeholderColor;
    font-style: normal;
    opacity: 1;
    font-weight: normal;
  }

  &::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    color: $placeholderColor;
    font-style: normal;
    opacity: 1;
    font-weight: normal;
  }

  &:-ms-input-placeholder {
    /* Internet Explorer 10+ */
    color: $placeholderColor;
    font-style: normal;
    font-weight: normal;
  }

  // validation
  &.invalid {
    background: $inputBackgroundInvalid;
    // Firefox will render a boxshadow
    box-shadow: $inputBoxShadow;
    border: $inputBorderInvalid;
    &.loading {
      @include loadingContainer($alertColor);
    }
  }

  // remove default states
  &:invalid {
    box-shadow: $inputBoxShadow;
    border: $inputBorder;
  }

  &.loading {
    transition: background 0s ease;
    position: relative;
    @include loadingContainer(#ccc);
  }
}

.form-error {
  color: $alertColor;
  font-size: $smallFontSize;
}

@import 'forms/checkbox-radio';
@import 'forms/append-button';
@import 'forms/label-errors';

// Styled select:
/* Arrows for Select's*/

select {
  border-top-right-radius: 5px;
  border-bottom-right-radius: 5px;
  cursor: pointer;
}

textarea {
  min-height: 12rem;
}

/* A third row for appended items*/
form .append {
  margin: $appendMarginTopPositive 0 0 0;
  width: 100%;
  .checkbox {
    color: $grayColor;
    font-size: $copyTextFormsFontSize;
  }
}

form:not(.wide) {
  .append {
    align-self: flex-end;
  }
}

.select-element{
  &:after {
    @include icon;
    @extend .icon-down-open:before;
    position: absolute;
    top: 1px;
    right: 1px;
    font-size: 70%;
    line-height: $inputHeight;
    padding: 0 11px 0 11px;
    background: $selectChooseBackgroundColor;
    color: $selectPickerColor;
    height: calc(100% - 2px);
    pointer-events: none;
    border-radius: 0 $globalRadius $globalRadius 0;
    &:focus, &:active {
      background: $inputFocusColor;
      border-color: $inputFocusBorderColor;
    }
    will-change: background, box-shadow;
    transition: $inputTransitions;
  }
}

.select-element {
  cursor: pointer;
  position: relative;
}

.list-form {
  width: 100%;
}

.append-form {
  display: flex;
  align-items: center;
  > :first-child {
    flex: 1;
  }
}

// Multiple elements in one row
.multi-form {
  display: flex;
  &.center {
    @extend .flex-align-items-center;
  }
  > * {
    margin-left: 10px;
    min-width: 0;
    // all all equal size
    flex: 1;
    &:first-child {
      margin-left: 0;
    }
  }

  &.break {
    display: block;
    > * {
      margin-left: 0px;
      &:not(:last-of-type) {
        margin-bottom: 10px;
      }
    }
    flex-direction: column;
  }
}

// A Date selector:
.select-day {
  flex: 1;
  max-width: 75px;
}

.select-month {
  flex: 3;
}

.select-year {
  flex: 2;
  max-width: 100px;
}

.form-actions {
  text-align: left;
  margin-top: $formMargin;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  border-top: 1px solid $globalBorderColor;
  padding-top: $formMargin;

  &.right {
    justify-content: flex-end;
  }

  &.plain {
    border-top: none;
    padding-top: 0;
  }

  > div {
    flex: 1;

    > * {
      width: 100%;
      text-align: center;
    }
  }

  .right {
    flex: 0 1 auto;
    order: 1;
  }

  p {
    margin: 0;
  }

  .button, button, input[type="submit"] {
    margin-bottom: 1rem;
  }

  .left {
    > label {

      .checkbox-container {
        margin-bottom: 1rem;
      }
    }
  }

}

.toolbar-form {
  padding: 0 4px;
  display: flex;
  align-items: center;
  line-height: $topbarHeight;
  position: absolute;
  top: 0;
  min-width: 200px;
  input {
    padding-left: 2px !important;
  }
}

input[type="range"] {
  background-color: transparent !important;
  padding: 0 !important;
}

.multiple-range-input {
  overflow: hidden;
  position: relative;
  height: $inputHeight;
}

// Range Controls
.multiple-range-input input {
  pointer-events: none;
  position: absolute;
  overflow: hidden;
  left: 0;
  top: 0;
  outline: none;
}

@mixin slider-thumb {
  pointer-events: all;
  position: relative;
  background: $primaryColor;
  width: 20px;
  height: 20px;
  border-radius: 999px;
  border: none;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  transition: background .3s ease, transform .2s ease;
  cursor: pointer;
  transform: scale3d(1, 1, 1);
  &:hover {
    background: lighten($primaryColor, 10%);
    transform: scale3d(1.2, 1.2, 1.2);
  }

  &:focus, &:active {
    background: darken($primaryColor, 10%);
  }
}

input[type="range"]::-webkit-slider-thumb {
  z-index: 1;
  outline: 0;
  @include slider-thumb;
  margin-top: -9px;
}

input[type="range"]::-moz-range-thumb {
  z-index: 10;
  @include slider-thumb;
}

input[type="range"]::-ms-thumb {
  z-index: 1;
  @include slider-thumb;
}

input::-webkit-slider-runnable-track {
  height: 3px;
  background: $lighterGrayColor;
  position: relative;
}

input[type="range"]::-ms-track {
  height: 3px;
  background: $lighterGrayColor;
  position: relative;
  border-color: transparent;
  color: transparent;
  z-index: -1;
}

input[type=range]::-ms-fill-lower {
  background: $lighterGrayColor;
  border-radius: 0;
}

input[type=range]::-ms-fill-upper {
  background: $lighterGrayColor;
  border-radius: 0;
}

input::-moz-range-track {
  position: relative;
  z-index: -1;
  background-color: $lighterGrayColor;
  border: 0;
}

.multiple-range-input {
  input:last-of-type::-moz-range-track {
    -moz-appearance: none;
    background: none transparent;
    border: 0;
  }
  input:last-of-type {
    &::-ms-fill-lower {
      background: none transparent;
    }

    &::-ms-fill-upper {
      background: none transparent;
    }
    &::-ms-track {
      background: none transparent;
    }
  }

}

// input that has an icon beforehand
.wrapped-input {
  position: relative;

  .add-on {
    position: absolute;
    top: 6px;
    left: 14px;

    [class^="icon-"] {
      position: relative;
      top: 2px;
      left: 3px;
    }
  }

  .loader {
    position: absolute;
    right: 8px;
    top: 8px;
  }
  input {
    padding-left: 42px !important;
  }
}

.subnav {
  // fixes navbar searchform in firefox
  .form {
    vertical-align: middle;
    position: relative;
    top: -2px;
  }
}

// Desktop Version of Forms
@media #{$mediaDesktop} {

  .indent-label {
    margin-left: $labelWidthDesktop;
  }

  form:not(.wide) {
    .control-group {
      flex-direction: row;
    }

    .control-group > .label, .control-group >  label {
      &:not(.checkbox) {
        min-width: $labelMinWidth;
        width: $labelWidthDesktop;
        text-align: $labelTextAlign;
        padding: $labelPaddingDesktop;
        position: relative;
        top: 5px;
        margin-bottom: 0;
        word-wrap: break-word;
      }
    }

    .no-label {
      margin-left: $labelWidthDesktop;
    }

    legend {
      margin-left: $labelWidthDesktop;
    }

    .multi-select-field {
      margin-top: 7px;
    }

    .controls {
      width: $formWidthControls;
      min-width: $formMinWidthControls;
    }

    fieldset:not(:last-of-type) {
      padding: 0 0 $formMargin 0;
      margin-bottom: $formMargin;
    }

  }
  .multi-form {
    &.break {
      display: flex;
      > div:not(:first-of-type) {
        margin-left: 20px;

      }
      > div {
        &:not(:last-of-type) {
          margin-bottom: 0px;
        }
      }
      flex-direction: row;
    }
  }

  .form-actions {
    align-items: center;

    flex-direction: row;
    flex-wrap: nowrap;

    label {
      margin-left: 1rem;
    }

    .left {
      > label {
        margin-left: 0;

        .checkbox-container {
          margin-bottom: 0;
        }
      }
    }

    > div {
      > * {
        width: auto;
        text-align: left;
      }
    }

    p {
      margin: 0 1rem;
    }

    .button, button, input[type="submit"] {
      margin-bottom: 0;
    }

    &.break {
      margin-top: 1rem;
      flex-wrap: wrap;
      p {
        margin: 0;
      }

      .button {
        margin: 1rem 1rem 1rem 0;
      }
    }

  }

  form:not(.wide) {
    .append {
      align-self: flex-start;
      &.center {
        align-self: center;
      }
      margin: 0 0 0 $appendMargin;

      &:not(.break) {
        flex: 1;
      }
      &.break {
        margin: $appendMarginTopPositive 0 0 $labelWidthDesktop;
        max-width: $formWidthControls;
        min-width: $formMinWidthControls;
      }

    }
    .control-group {
      flex-wrap: wrap;
    }

  }

}

.control-group:not(:last-of-type) .controls + .append {
  margin-top: $appendMarginTopNegative;
  &.break {
    margin-bottom: $controlMargin;
  }
}

@media #{$mediaInBetween} {

  form:not(.wide) {

    .controls:not(.checkbox) {
      width: $formWidthControlsBetween;
    }

    .append {
      flex: 1;
      &.break {
        min-width: 0;
        margin: 0 0 0 $appendMargin;
      }
    }
  }

  .control-group:not(:last-of-type) .controls + .append {
    margin-top: 0;
  }
}