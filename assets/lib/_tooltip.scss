/**
* Tooltips
*/
@mixin spaceTop() {
  &.open {
    transform: translate3d(0, 6px, 0);
  }
}

@mixin spaceBottom() {
  &.open {
    transform: translate3d(0, -3px, 0);
  }
}

@mixin tooltip-arrow-state($arrowColor) {
  &.is-collision-bottom:not(.is-collision-left) {
    @include spaceBottom();
    @include arrow-bottom($arrowColor);
  }

  &:not(.is-collision-bottom):not(.is-collision-left) {
    @include spaceTop();
    @include arrow-top($arrowColor);
  }

  // left collisions
  &.is-collision-left.is-collision-bottom {
    @include spaceBottom();
    @include arrow-bottom($arrowColor, 15px);
  }

  &.is-collision-left:not(.is-collision-bottom) {
    @include spaceTop();
    @include arrow-top($arrowColor, 15px);
  }

  // right collisions
  &.is-collision-right:not(.is-collision-bottom) {
    @include spaceTop();
    @include arrow-top($arrowColor, calc(100% - 15px));
  }

  &.is-collision-right.is-collision-bottom {
    @include spaceBottom();
    @include arrow-bottom($arrowColor, calc(100% - 15px));
  }
}

// Global Tooltip
@mixin tooltip-container() {
  z-index: $indexTooltip;
  pointer-events: none;
  display: inline-block;
  opacity: 0;
  position: absolute;
  color: #fff;
  border-radius: $globalRadius;
  padding: 7px 10px 7px;
  will-change: transform, opacity;
  transition: opacity $globalMediumEaseTime ease, transform $globalMediumEaseTime ease;
  font-size: $tooltipFontSize;
  font-weight: $tooltipFontWeight;
  transform: translate3d(0, -6px, 0);
  background: $tooltipBg;
  word-wrap: break-word;

  &.error-tooltip {
    word-break: normal;
    background: $alertTooltipColor;
  }
  &.open {
    opacity: 1;
  }
  max-width: 250px;
  text-align: center;

  @include tooltip-arrow-state($tooltipBg);
  &.error-tooltip {
    @include tooltip-arrow-state($alertTooltipColor);
  }
}

@if $executeDefaultMixins {
  .tooltip-container {
    @include tooltip-container();
  }
}