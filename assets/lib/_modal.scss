/*
* A Modal Component
*/

// ios/webkit has problems with animations when this is prefixed and enabled
.modal-container {
  /* autoprefixer: off */
  @include perspective();
  backface-visibility: hidden;
}

/* Container that contains all Modals of an instance */
.modal-container {
  @include interface();
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  overflow-x:hidden;
  background: rgba($backgroundDarkenerColor, $backgroundDarkenerFadeOpacity);
  @include animate(backgroundFadeIn, .25s);
  z-index: $indexModalContainer;
  &.front {
    z-index: $indexModalContainer +1;
  }
  display:none;
  &.open {
    display: block;
  }
  -webkit-overflow-scrolling: touch;
  min-height: 100%;

  // always show scrollbars
  overflow-y: scroll;

  > .loader-container {
    align-self: center;
    position: fixed;
    left: calc(50% - 20px);
    top: calc(50% - 20px);
    z-index: 101;
    @include animate(fadeIn);
  }

  &.loading {
    cursor: wait;
  }
}

.modal-open {
  body {
    width: 100%;
  }
}

// The Modal itself
.modal {
  @include interface(text);
  width: 100%;
  position: relative;
  background: $modalBackground;
  display: none;
  padding: 30px 12px 25px;
  align-self: flex-start;
  &.current {
    display: block;
    @include animate($modalAnimateName, $modalAnimateDuration, 1, linear);
  }

  &.current ~ .loader-container {
    @include centralLoader();
  }
  box-shadow: $modalBoxShadow;

  &.modal-anim-end {
    animation-name:none !important;
  }

  &.part-of-stack {
    display: block;
    position: absolute;
    pointer-events: none;
    @include animate(fadeOut);
    &.modal-anim-end {
      display: none;
    }
  }
}

// setup z-index just when in container
.modal-container {
  .modal.current {
    z-index: $indexModalCurrent;
  }
}

// Close icon, top right
.modal-close {
  position: absolute;
  right: 0px;
  top: 0px;
  z-index: 3;
  padding: 9px 10px 10px;
  font-size: 16px;
  cursor: pointer;
  color: lighten($baseColor, 50%);

  &:hover {
    color: lighten($baseColor, 40%);
    background: lighten($grayColor, 35%);
  }

  &:active {
    color: lighten($baseColor, 10%);
    background: lighten($grayColor, 30%);
  }

}

.modal-title {
  margin: 0 0 1rem 0;
  color: $primaryColor;
}

// An Alert box is always on the bottom on mobile
.modal.alert {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding-top: 15px;
  &.current {
    @include animate(fromBottom, .25s);
  }
  box-shadow: none;
  word-wrap: break-word;
}

// desktop version

@media #{$mediaDesktop} {

  .modal-container {
    padding: 20px 20px 0 20px;
    top: 0;

    &.open {
      display:flex;
      justify-content: center;
    }
  }

  .modal {
    width: auto;
    min-width: $minWidthModalDesktop;
    max-width: $minWidthModalDesktop;
    margin-bottom: 20px;
    padding: 25px 30px 25px;

    &.center {
      align-self: center;
    }
  }

  .modal.alert {
    padding-top: 25px;
    min-width: 0;
    box-shadow: $globalBoxShadow;
    position: relative;
    width: $modalAlertWidthDesktop;
    &.current {
      @include animate(bounceIn);
    }
  }

  .modal.small-modal {
    min-width: 0;
    width: $modalWidthSmall;
  }
}